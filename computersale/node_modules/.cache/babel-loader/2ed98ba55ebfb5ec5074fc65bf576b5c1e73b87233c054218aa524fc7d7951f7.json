{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport { _ as _defineProperty } from '../_chunks/dep-931ef437.js';\nimport { defineComponent, computed } from 'vue';\nimport renderFn from '../utils/render-fn.js';\nimport useSizeProps from '../utils/use-size-props.js';\nimport '../style/css.js';\nimport '../utils/use-common-classname.js';\nimport '../utils/config-context.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar element = {\n  \"tag\": \"svg\",\n  \"attrs\": {\n    \"fill\": \"none\",\n    \"viewBox\": \"0 0 24 24\",\n    \"width\": \"1em\",\n    \"height\": \"1em\"\n  },\n  \"children\": [{\n    \"tag\": \"path\",\n    \"attrs\": {\n      \"fill\": \"currentColor\",\n      \"d\": \"M4 8a8 8 0 1116 0v4.7l2 3V20h-5.61a4.5 4.5 0 01-8.78 0H2v-4.3l2-3V8zm5.7 12a2.5 2.5 0 004.6 0H9.7zM12 2a6 6 0 00-6 6v5.3l-2 3V18h16v-1.7l-2-3V8a6 6 0 00-6-6z\"\n    }\n  }]\n};\nvar notification = defineComponent({\n  name: \"NotificationIcon\",\n  props: {\n    size: {\n      type: String\n    },\n    onClick: {\n      type: Function\n    }\n  },\n  setup(props, _ref) {\n    var {\n      attrs\n    } = _ref;\n    var propsSize = computed(() => props.size);\n    var {\n      className,\n      style\n    } = useSizeProps(propsSize);\n    var finalCls = computed(() => [\"t-icon\", \"t-icon-notification\", className.value]);\n    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));\n    var finalProps = computed(() => ({\n      class: finalCls.value,\n      style: finalStyle.value,\n      onClick: e => {\n        var _props$onClick;\n        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {\n          e\n        });\n      }\n    }));\n    return () => renderFn(element, finalProps.value);\n  }\n});\nexport default notification;","map":{"version":3,"names":["element","notification","defineComponent","name","props","size","type","String","onClick","Function","setup","_ref","attrs","propsSize","computed","className","style","useSizeProps","finalCls","value","finalStyle","_objectSpread","finalProps","class","e","_props$onClick","call","renderFn"],"sources":["../../src/components/notification.tsx"],"sourcesContent":["import { computed, PropType, defineComponent } from 'vue';\nimport renderFn from '../utils/render-fn';\nimport {\n  TdIconSVGProps, SVGJson,\n} from '../utils/types';\nimport useSizeProps from '../utils/use-size-props';\n\nimport '../style/css';\n\nconst element: SVGJson = {\"tag\":\"svg\",\"attrs\":{\"fill\":\"none\",\"viewBox\":\"0 0 24 24\",\"width\":\"1em\",\"height\":\"1em\"},\"children\":[{\"tag\":\"path\",\"attrs\":{\"fill\":\"currentColor\",\"d\":\"M4 8a8 8 0 1116 0v4.7l2 3V20h-5.61a4.5 4.5 0 01-8.78 0H2v-4.3l2-3V8zm5.7 12a2.5 2.5 0 004.6 0H9.7zM12 2a6 6 0 00-6 6v5.3l-2 3V18h16v-1.7l-2-3V8a6 6 0 00-6-6z\"}}]};\n\nexport default defineComponent({\n  name: 'NotificationIcon',\n  props: {\n    size: {\n      type: String,\n    },\n    onClick: {\n      type: Function as PropType<TdIconSVGProps['onClick']>,\n    },\n  },\n  setup(props, { attrs }) {\n    const propsSize = computed(() => props.size);\n\n    const { className, style } = useSizeProps(propsSize);\n\n    const finalCls = computed(() => ['t-icon', 't-icon-notification', className.value]);\n    const finalStyle = computed(() => ({ ...style.value, ...(attrs.style as Styles) }));\n    const finalProps = computed(() => ({\n      class: finalCls.value,\n      style: finalStyle.value,\n      onClick: (e:MouseEvent) => props.onClick?.({ e }),\n    }));\n    return () => renderFn(element, finalProps.value);\n  },\n\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAMA,OAAA,GAAmB;EAAC,OAAM;EAAM,SAAQ;IAAC,QAAO;IAAO,WAAU;IAAY,SAAQ;IAAM,UAAS;;EAAO,YAAW,CAAC;IAAC,OAAM;IAAO,SAAQ;MAAC,QAAO;MAAe,KAAI;;;;AAE9K,IAAAC,YAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EACNC,KAAA,EAAO;IACLC,IAAA,EAAM;MACJC,IAAA,EAAMC;;IAERC,OAAA,EAAS;MACPF,IAAA,EAAMG;;;EAGVC,MAAMN,KAAA,EAAAO,IAAA,EAAkB;IAAA,IAAX;MAAEC;;QACPC,SAAA,GAAYC,QAAA,CAAS,MAAMV,KAAA,CAAMC,IAAA;QAEjC;MAAEU,SAAA;MAAWC;QAAUC,YAAA,CAAaJ,SAAA;QAEpCK,QAAA,GAAWJ,QAAA,CAAS,MAAM,CAAC,UAAU,uBAAuBC,SAAA,CAAUI,KAAA;QACtEC,UAAA,GAAaN,QAAA,CAAS,MAAAO,aAAA,CAAAA,aAAA,KAAYL,KAAA,CAAMG,KAAA,GAAWP,KAAA,CAAMI,KAAA;QACzDM,UAAA,GAAaR,QAAA,CAAS;MAC1BS,KAAA,EAAOL,QAAA,CAASC,KAAA;MAChBH,KAAA,EAAOI,UAAA,CAAWD,KAAA;MAClBX,OAAA,EAAUgB,CAAA;;iCAAiBpB,KAAA,CAAMI,OAAA,cAAAiB,cAAA,uBAANA,cAAA,CAAAC,IAAA,CAAAtB,KAAA,EAAgB;UAAEoB;;;;WAExC,MAAMG,QAAA,CAAS3B,OAAA,EAASsB,UAAA,CAAWH,KAAA;;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}