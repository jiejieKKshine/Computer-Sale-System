{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\n/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport { _ as _defineProperty } from '../../../_chunks/dep-fa52aa21.mjs';\nimport '../../../_chunks/dep-4659d73b.mjs';\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction generateBase64Url(_ref, onFinish) {\n  var width = _ref.width,\n    height = _ref.height,\n    gapX = _ref.gapX,\n    gapY = _ref.gapY,\n    offsetLeft = _ref.offsetLeft,\n    offsetTop = _ref.offsetTop,\n    rotate = _ref.rotate,\n    alpha = _ref.alpha,\n    watermarkContent = _ref.watermarkContent,\n    lineSpace = _ref.lineSpace;\n  var canvas = document.createElement(\"canvas\");\n  var ctx = canvas.getContext(\"2d\");\n  if (!ctx) {\n    console.warn(\"\\u5F53\\u524D\\u73AF\\u5883\\u4E0D\\u652F\\u6301Canvas, \\u65E0\\u6CD5\\u7ED8\\u5236\\u6C34\\u5370\");\n    onFinish(\"\");\n    return;\n  }\n  var ratio = window.devicePixelRatio || 1;\n  var canvasWidth = (gapX + width) * ratio;\n  var canvasHeight = (gapY + height) * ratio;\n  canvas.width = canvasWidth;\n  canvas.height = canvasHeight;\n  canvas.style.width = \"\".concat(gapX + width, \"px\");\n  canvas.style.height = \"\".concat(gapY + height, \"px\");\n  ctx.translate(offsetLeft * ratio, offsetTop * ratio);\n  ctx.rotate(Math.PI / 180 * Number(rotate));\n  ctx.globalAlpha = alpha;\n  var markWidth = width * ratio;\n  var markHeight = height * ratio;\n  ctx.fillStyle = \"transparent\";\n  ctx.fillRect(0, 0, markWidth, markHeight);\n  var contents = Array.isArray(watermarkContent) ? watermarkContent : [_objectSpread({}, watermarkContent)];\n  var top = 0;\n  contents.forEach(function (item) {\n    if (item.url) {\n      var url = item.url,\n        _item$isGrayscale = item.isGrayscale,\n        isGrayscale = _item$isGrayscale === void 0 ? false : _item$isGrayscale;\n      item.top = top;\n      top += height;\n      var img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.referrerPolicy = \"no-referrer\";\n      img.src = url;\n      img.onload = function () {\n        ctx.drawImage(img, 0, item.top * ratio, width * ratio, height * ratio);\n        if (isGrayscale) {\n          var imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n          var pixels = imgData.data;\n          for (var i = 0; i < pixels.length; i += 4) {\n            var lightness = (pixels[i] + pixels[i + 1] + pixels[i + 2]) / 3;\n            pixels[i] = lightness;\n            pixels[i + 1] = lightness;\n            pixels[i + 2] = lightness;\n          }\n          ctx.putImageData(imgData, 0, 0);\n        }\n        onFinish(canvas.toDataURL());\n      };\n    } else if (item.text) {\n      var text = item.text,\n        _item$fontColor = item.fontColor,\n        fontColor = _item$fontColor === void 0 ? \"rgba(0, 0, 0, 0.1)\" : _item$fontColor,\n        _item$fontSize = item.fontSize,\n        fontSize = _item$fontSize === void 0 ? 16 : _item$fontSize,\n        _item$fontFamily = item.fontFamily,\n        fontFamily = _item$fontFamily === void 0 ? void 0 : _item$fontFamily,\n        _item$fontWeight = item.fontWeight,\n        fontWeight = _item$fontWeight === void 0 ? \"normal\" : _item$fontWeight;\n      item.top = top;\n      top += lineSpace;\n      var markSize = Number(fontSize) * ratio;\n      ctx.font = \"normal normal \".concat(fontWeight, \" \").concat(markSize, \"px/\").concat(markHeight, \"px \").concat(fontFamily);\n      ctx.textAlign = \"start\";\n      ctx.textBaseline = \"top\";\n      ctx.fillStyle = fontColor;\n      ctx.fillText(text, 0, item.top * ratio);\n    }\n  });\n  onFinish(canvas.toDataURL());\n}\nexport { generateBase64Url as default };","map":{"version":3,"names":["generateBase64Url","_ref","onFinish","width","height","gapX","gapY","offsetLeft","offsetTop","rotate","alpha","watermarkContent","lineSpace","canvas","document","createElement","ctx","getContext","console","warn","ratio","window","devicePixelRatio","canvasWidth","canvasHeight","style","concat","translate","Math","PI","Number","globalAlpha","markWidth","markHeight","fillStyle","fillRect","contents","Array","isArray","_objectSpread","top","forEach","item","url","_item$isGrayscale","isGrayscale","img","Image","crossOrigin","referrerPolicy","src","onload","drawImage","imgData","getImageData","pixels","data","i","length","lightness","putImageData","toDataURL","text","_item$fontColor","fontColor","_item$fontSize","fontSize","_item$fontFamily","fontFamily","_item$fontWeight","fontWeight","markSize","font","textAlign","textBaseline","fillText"],"sources":["../../../../src/_common/js/watermark/generateBase64Url.ts"],"sourcesContent":["import { WatermarkText, WatermarkImage } from './type';\n\nexport default function generateBase64Url({\n  width,\n  height,\n  gapX,\n  gapY,\n  offsetLeft,\n  offsetTop,\n  rotate,\n  alpha,\n  watermarkContent,\n  lineSpace\n}: {\n  width: number,\n  height: number,\n  gapX:number,\n  gapY: number,\n  offsetLeft:number,\n  offsetTop:number,\n  rotate:number,\n  alpha:number,\n  watermarkContent: WatermarkText | WatermarkImage | Array<WatermarkText | WatermarkImage>,\n  lineSpace:number\n}, onFinish: (url: string) => void): string {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  if (!ctx) {\n    // eslint-disable-next-line no-console\n    console.warn('当前环境不支持Canvas, 无法绘制水印');\n    onFinish('');\n    return;\n  }\n  const ratio = window.devicePixelRatio || 1;\n  const canvasWidth = (gapX + width) * ratio;\n  const canvasHeight = (gapY + height) * ratio;\n\n  canvas.width = canvasWidth;\n  canvas.height = canvasHeight;\n  canvas.style.width = `${gapX + width}px`;\n  canvas.style.height = `${gapY + height}px`;\n\n  ctx.translate(offsetLeft * ratio, offsetTop * ratio);\n  ctx.rotate((Math.PI / 180) * Number(rotate));\n  ctx.globalAlpha = alpha;\n\n  const markWidth = width * ratio;\n  const markHeight = height * ratio;\n\n  ctx.fillStyle = 'transparent';\n  ctx.fillRect(0, 0, markWidth, markHeight);\n\n  const contents = Array.isArray(watermarkContent) ? watermarkContent : [{ ...watermarkContent }];\n  let top = 0;\n  contents.forEach((item: WatermarkText & WatermarkImage & { top: number }) => {\n    if (item.url) {\n      const { url, isGrayscale = false } = item;\n      // eslint-disable-next-line no-param-reassign\n      item.top = top;\n      top += height;\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      img.referrerPolicy = 'no-referrer';\n      img.src = url;\n      img.onload = () => {\n        // ctx.filter = 'grayscale(1)';\n        ctx.drawImage(img, 0, item.top * ratio, width * ratio, height * ratio);\n        if (isGrayscale) {\n          const imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n          const pixels = imgData.data;\n          for (let i = 0; i < pixels.length; i += 4) {\n            const lightness = (pixels[i] + pixels[i + 1] + pixels[i + 2]) / 3;\n            pixels[i] = lightness;\n            pixels[i + 1] = lightness;\n            pixels[i + 2] = lightness;\n          }\n          ctx.putImageData(imgData, 0, 0);\n        }\n        onFinish(canvas.toDataURL());\n      };\n    } else if (item.text) {\n      const {\n        text,\n        fontColor = 'rgba(0, 0, 0, 0.1)',\n        fontSize = 16,\n        fontFamily = undefined,\n        fontWeight = 'normal',\n      } = item;\n      // eslint-disable-next-line no-param-reassign\n      item.top = top;\n      top += lineSpace;\n      const markSize = Number(fontSize) * ratio;\n      // TODO 后续完善font 渲染控制 目前font-family 暂时为 undefined\n      ctx.font = `normal normal ${fontWeight} ${markSize}px/${markHeight}px ${fontFamily}`;\n      ctx.textAlign = 'start';\n      ctx.textBaseline = 'top';\n      ctx.fillStyle = fontColor;\n      ctx.fillText(text, 0, item.top * ratio);\n    }\n  });\n  onFinish(canvas.toDataURL());\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}