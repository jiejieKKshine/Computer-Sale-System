{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nvar props = {\n  autofocus: Boolean,\n  borderless: Boolean,\n  checkProps: {\n    type: Object\n  },\n  checkStrictly: Boolean,\n  clearable: Boolean,\n  collapsedItems: {\n    type: Function\n  },\n  disabled: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  empty: {\n    type: [String, Function]\n  },\n  filter: {\n    type: Function\n  },\n  filterable: Boolean,\n  inputProps: {\n    type: Object\n  },\n  keys: {\n    type: Object\n  },\n  label: {\n    type: [String, Function]\n  },\n  lazy: {\n    type: Boolean,\n    \"default\": true\n  },\n  load: {\n    type: Function\n  },\n  loading: Boolean,\n  loadingText: {\n    type: [String, Function]\n  },\n  max: {\n    type: Number,\n    \"default\": 0\n  },\n  minCollapsedNum: {\n    type: Number,\n    \"default\": 0\n  },\n  multiple: Boolean,\n  option: {\n    type: Function\n  },\n  options: {\n    type: Array,\n    \"default\": function _default() {\n      return [];\n    }\n  },\n  panelBottomContent: {\n    type: [String, Function]\n  },\n  panelTopContent: {\n    type: [String, Function]\n  },\n  placeholder: {\n    type: String,\n    \"default\": void 0\n  },\n  popupProps: {\n    type: Object\n  },\n  popupVisible: Boolean,\n  prefixIcon: {\n    type: Function\n  },\n  readonly: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  reserveKeyword: Boolean,\n  selectInputProps: {\n    type: Object\n  },\n  showAllLevels: {\n    type: Boolean,\n    \"default\": true\n  },\n  size: {\n    type: String,\n    \"default\": \"medium\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"large\", \"medium\", \"small\"].includes(val);\n    }\n  },\n  status: {\n    type: String,\n    \"default\": \"default\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"default\", \"success\", \"warning\", \"error\"].includes(val);\n    }\n  },\n  suffix: {\n    type: [String, Function]\n  },\n  suffixIcon: {\n    type: Function\n  },\n  tagInputProps: {\n    type: Object\n  },\n  tagProps: {\n    type: Object\n  },\n  tips: {\n    type: [String, Function]\n  },\n  trigger: {\n    type: String,\n    \"default\": \"click\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"click\", \"hover\"].includes(val);\n    }\n  },\n  value: {\n    type: [String, Number, Array],\n    \"default\": void 0\n  },\n  modelValue: {\n    type: [String, Number, Array],\n    \"default\": void 0\n  },\n  defaultValue: {\n    type: [String, Number, Array],\n    \"default\": function _default() {\n      return [];\n    }\n  },\n  valueDisplay: {\n    type: [String, Function]\n  },\n  valueMode: {\n    type: String,\n    \"default\": \"onlyLeaf\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"onlyLeaf\", \"parentFirst\", \"all\"].includes(val);\n    }\n  },\n  valueType: {\n    type: String,\n    \"default\": \"single\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"single\", \"full\"].includes(val);\n    }\n  },\n  onBlur: Function,\n  onChange: Function,\n  onFocus: Function,\n  onPopupVisibleChange: Function,\n  onRemove: Function\n};\nexport { props as default };","map":{"version":3,"names":["props","autofocus","Boolean","borderless","checkProps","type","Object","checkStrictly","clearable","collapsedItems","Function","disabled","empty","String","filter","filterable","inputProps","keys","label","lazy","load","loading","loadingText","max","Number","minCollapsedNum","multiple","option","options","Array","_default","panelBottomContent","panelTopContent","placeholder","popupProps","popupVisible","prefixIcon","readonly","reserveKeyword","selectInputProps","showAllLevels","size","validator","val","includes","status","suffix","suffixIcon","tagInputProps","tagProps","tips","trigger","value","modelValue","defaultValue","valueDisplay","valueMode","valueType","onBlur","onChange","onFocus","onPopupVisibleChange","onRemove"],"sources":["../../src/cascader/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdCascaderProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 自动聚焦 */\n  autofocus: Boolean,\n  /** 无边框模式 */\n  borderless: Boolean,\n  /** 参考 checkbox 组件 API */\n  checkProps: {\n    type: Object as PropType<TdCascaderProps['checkProps']>,\n  },\n  /** 父子节点选中状态不再关联，可各自选中或取消 */\n  checkStrictly: Boolean,\n  /** 是否支持清空选项 */\n  clearable: Boolean,\n  /** 多选情况下，用于设置折叠项内容，默认为 `+N`。如果需要悬浮就显示其他内容，可以使用 collapsedItems 自定义。`value` 表示当前存在的所有标签，`collapsedSelectedItems` 表示折叠的标签，`count` 表示折叠的数量，`onClose` 表示移除标签的事件回调 */\n  collapsedItems: {\n    type: Function as PropType<TdCascaderProps['collapsedItems']>,\n  },\n  /** 是否禁用组件 */\n  disabled: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 无匹配选项时的内容，默认全局配置为 '暂无数据' */\n  empty: {\n    type: [String, Function] as PropType<TdCascaderProps['empty']>,\n  },\n  /** 自定义过滤方法，用于对现有数据进行搜索过滤，判断是否过滤某一项数据 */\n  filter: {\n    type: Function as PropType<TdCascaderProps['filter']>,\n  },\n  /** 是否可搜索 */\n  filterable: Boolean,\n  /** 透传 Input 输入框组件的全部属性 */\n  inputProps: {\n    type: Object as PropType<TdCascaderProps['inputProps']>,\n  },\n  /** 用来定义 value / label / children / disabled 在 `options` 中对应的字段别名 */\n  keys: {\n    type: Object as PropType<TdCascaderProps['keys']>,\n  },\n  /** 左侧文本 */\n  label: {\n    type: [String, Function] as PropType<TdCascaderProps['label']>,\n  },\n  /** 延迟加载 children 为 true 的子节点，即使 expandAll 被设置为 true，也同样延迟加载 */\n  lazy: {\n    type: Boolean,\n    default: true,\n  },\n  /** 加载子树数据的方法（仅当节点 children 为 true 时生效） */\n  load: {\n    type: Function as PropType<TdCascaderProps['load']>,\n  },\n  /** 是否为加载状态 */\n  loading: Boolean,\n  /** 远程加载时显示的文字，支持自定义。如加上超链接 */\n  loadingText: {\n    type: [String, Function] as PropType<TdCascaderProps['loadingText']>,\n  },\n  /** 用于控制多选数量，值为 0 则不限制 */\n  max: {\n    type: Number,\n    default: 0,\n  },\n  /** 最小折叠数量，用于多选情况下折叠选中项，超出该数值的选中项折叠。值为 0 则表示不折叠 */\n  minCollapsedNum: {\n    type: Number,\n    default: 0,\n  },\n  /** 是否允许多选 */\n  multiple: Boolean,\n  /** 自定义单个级联选项 */\n  option: {\n    type: Function as PropType<TdCascaderProps['option']>,\n  },\n  /** 可选项数据源 */\n  options: {\n    type: Array as PropType<TdCascaderProps['options']>,\n    default: (): TdCascaderProps['options'] => [],\n  },\n  /** 面板内的底部内容 */\n  panelBottomContent: {\n    type: [String, Function] as PropType<TdCascaderProps['panelBottomContent']>,\n  },\n  /** 面板内的顶部内容 */\n  panelTopContent: {\n    type: [String, Function] as PropType<TdCascaderProps['panelTopContent']>,\n  },\n  /** 占位符 */\n  placeholder: {\n    type: String,\n    default: undefined,\n  },\n  /** 参考 popup 组件 API */\n  popupProps: {\n    type: Object as PropType<TdCascaderProps['popupProps']>,\n  },\n  /** 是否显示下拉框 */\n  popupVisible: Boolean,\n  /** 组件前置图标 */\n  prefixIcon: {\n    type: Function as PropType<TdCascaderProps['prefixIcon']>,\n  },\n  /** 只读状态，值为真会隐藏输入框，且无法打开下拉框 */\n  readonly: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 多选且可搜索时，是否在选中一个选项后保留当前的搜索关键词 */\n  reserveKeyword: Boolean,\n  /** 透传 SelectInput 筛选器输入框组件的全部属性 */\n  selectInputProps: {\n    type: Object as PropType<TdCascaderProps['selectInputProps']>,\n  },\n  /** 选中值使用完整路径，输入框在单选时也显示完整路径 */\n  showAllLevels: {\n    type: Boolean,\n    default: true,\n  },\n  /** 组件尺寸 */\n  size: {\n    type: String as PropType<TdCascaderProps['size']>,\n    default: 'medium' as TdCascaderProps['size'],\n    validator(val: TdCascaderProps['size']): boolean {\n      if (!val) return true;\n      return ['large', 'medium', 'small'].includes(val);\n    },\n  },\n  /** 输入框状态 */\n  status: {\n    type: String as PropType<TdCascaderProps['status']>,\n    default: 'default' as TdCascaderProps['status'],\n    validator(val: TdCascaderProps['status']): boolean {\n      if (!val) return true;\n      return ['default', 'success', 'warning', 'error'].includes(val);\n    },\n  },\n  /** 后置图标前的后置内容 */\n  suffix: {\n    type: [String, Function] as PropType<TdCascaderProps['suffix']>,\n  },\n  /** 组件后置图标 */\n  suffixIcon: {\n    type: Function as PropType<TdCascaderProps['suffixIcon']>,\n  },\n  /** 透传 TagInput 标签输入框组件的全部属性 */\n  tagInputProps: {\n    type: Object as PropType<TdCascaderProps['tagInputProps']>,\n  },\n  /** 透传 Tag 标签组件全部属性 */\n  tagProps: {\n    type: Object as PropType<TdCascaderProps['tagProps']>,\n  },\n  /** 输入框下方提示文本，会根据不同的 `status` 呈现不同的样式 */\n  tips: {\n    type: [String, Function] as PropType<TdCascaderProps['tips']>,\n  },\n  /** 展开下一层级的方式 */\n  trigger: {\n    type: String as PropType<TdCascaderProps['trigger']>,\n    default: 'click' as TdCascaderProps['trigger'],\n    validator(val: TdCascaderProps['trigger']): boolean {\n      if (!val) return true;\n      return ['click', 'hover'].includes(val);\n    },\n  },\n  /** 选中项的值 */\n  value: {\n    type: [String, Number, Array] as PropType<TdCascaderProps['value']>,\n    default: undefined as TdCascaderProps['value'],\n  },\n  modelValue: {\n    type: [String, Number, Array] as PropType<TdCascaderProps['value']>,\n    default: undefined as TdCascaderProps['value'],\n  },\n  /** 选中项的值，非受控属性 */\n  defaultValue: {\n    type: [String, Number, Array] as PropType<TdCascaderProps['defaultValue']>,\n    default: (): TdCascaderProps['defaultValue'] => [] as TdCascaderProps['defaultValue'],\n  },\n  /** 自定义选中项呈现的内容 */\n  valueDisplay: {\n    type: [String, Function] as PropType<TdCascaderProps['valueDisplay']>,\n  },\n  /** 选中值模式。all 表示父节点和子节点全部会出现在选中值里面；parentFirst 表示当子节点全部选中时，仅父节点在选中值里面；onlyLeaf 表示无论什么情况，选中值仅呈现叶子节点 */\n  valueMode: {\n    type: String as PropType<TdCascaderProps['valueMode']>,\n    default: 'onlyLeaf' as TdCascaderProps['valueMode'],\n    validator(val: TdCascaderProps['valueMode']): boolean {\n      if (!val) return true;\n      return ['onlyLeaf', 'parentFirst', 'all'].includes(val);\n    },\n  },\n  /** 用于控制选中值的类型。single 表示输入输出值为 叶子结点值， full 表示输入输出值为全路径 */\n  valueType: {\n    type: String as PropType<TdCascaderProps['valueType']>,\n    default: 'single' as TdCascaderProps['valueType'],\n    validator(val: TdCascaderProps['valueType']): boolean {\n      if (!val) return true;\n      return ['single', 'full'].includes(val);\n    },\n  },\n  /** 当输入框失去焦点时触发 */\n  onBlur: Function as PropType<TdCascaderProps['onBlur']>,\n  /** 选中值发生变化时触发。TreeNodeModel 从树组件中导出。`context.node` 表示触发事件的节点，`context.source` 表示触发事件的来源 */\n  onChange: Function as PropType<TdCascaderProps['onChange']>,\n  /** 获得焦点时触发 */\n  onFocus: Function as PropType<TdCascaderProps['onFocus']>,\n  /** 下拉框显示或隐藏时触发 */\n  onPopupVisibleChange: Function as PropType<TdCascaderProps['onPopupVisibleChange']>,\n  /** 多选模式下，选中数据被移除时触发 */\n  onRemove: Function as PropType<TdCascaderProps['onRemove']>,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}