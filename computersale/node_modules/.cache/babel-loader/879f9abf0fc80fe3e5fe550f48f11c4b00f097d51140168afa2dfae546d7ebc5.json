{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nvar props = {\n  align: {\n    type: String,\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"left\", \"center\", \"right\"].includes(val);\n    }\n  },\n  allowInputOverLimit: {\n    type: Boolean,\n    \"default\": true\n  },\n  autoWidth: Boolean,\n  decimalPlaces: {\n    type: [Number, Object],\n    \"default\": void 0\n  },\n  disabled: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  format: {\n    type: Function\n  },\n  inputProps: {\n    type: Object\n  },\n  label: {\n    type: [String, Function]\n  },\n  largeNumber: Boolean,\n  max: {\n    type: [String, Number],\n    \"default\": Infinity\n  },\n  min: {\n    type: [String, Number],\n    \"default\": -Infinity\n  },\n  placeholder: {\n    type: String,\n    \"default\": void 0\n  },\n  readonly: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  size: {\n    type: String,\n    \"default\": \"medium\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"small\", \"medium\", \"large\"].includes(val);\n    }\n  },\n  status: {\n    type: String,\n    \"default\": \"default\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"default\", \"success\", \"warning\", \"error\"].includes(val);\n    }\n  },\n  step: {\n    type: [String, Number],\n    \"default\": 1\n  },\n  suffix: {\n    type: [String, Function]\n  },\n  theme: {\n    type: String,\n    \"default\": \"row\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"column\", \"row\", \"normal\"].includes(val);\n    }\n  },\n  tips: {\n    type: [String, Function]\n  },\n  value: {\n    type: [String, Number],\n    \"default\": void 0\n  },\n  modelValue: {\n    type: [String, Number],\n    \"default\": void 0\n  },\n  defaultValue: {\n    type: [String, Number]\n  },\n  onBlur: Function,\n  onChange: Function,\n  onEnter: Function,\n  onFocus: Function,\n  onKeydown: Function,\n  onKeypress: Function,\n  onKeyup: Function,\n  onValidate: Function\n};\nexport { props as default };","map":{"version":3,"names":["props","align","type","String","validator","val","includes","allowInputOverLimit","Boolean","autoWidth","decimalPlaces","Number","Object","disabled","format","Function","inputProps","label","largeNumber","max","Infinity","min","placeholder","readonly","size","status","step","suffix","theme","tips","value","modelValue","defaultValue","onBlur","onChange","onEnter","onFocus","onKeydown","onKeypress","onKeyup","onValidate"],"sources":["../../src/input-number/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdInputNumberProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 文本内容位置，居左/居中/居右 */\n  align: {\n    type: String as PropType<TdInputNumberProps['align']>,\n    validator(val: TdInputNumberProps['align']): boolean {\n      if (!val) return true;\n      return ['left', 'center', 'right'].includes(val);\n    },\n  },\n  /** 是否允许输入超过 `max` `min` 范围外的数字。为保障用户体验，仅在失去焦点时进行数字范围矫正。默认允许超出，数字超出范围时，输入框变红提醒 */\n  allowInputOverLimit: {\n    type: Boolean,\n    default: true,\n  },\n  /** 宽度随内容自适应 */\n  autoWidth: Boolean,\n  /** [小数位数](https://en.wiktionary.org/wiki/decimal_place) */\n  decimalPlaces: {\n    type: [Number, Object] as PropType<TdInputNumberProps['decimalPlaces']>,\n    default: undefined as TdInputNumberProps['decimalPlaces'],\n  },\n  /** 禁用组件 */\n  disabled: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 格式化输入框展示值。第二个事件参数 `context.fixedNumber` 表示处理过小数位数 `decimalPlaces` 的数字 */\n  format: {\n    type: Function as PropType<TdInputNumberProps['format']>,\n  },\n  /** 透传 Input 输入框组件全部属性 */\n  inputProps: {\n    type: Object as PropType<TdInputNumberProps['inputProps']>,\n  },\n  /** 左侧文本 */\n  label: {\n    type: [String, Function] as PropType<TdInputNumberProps['label']>,\n  },\n  /** 是否作为大数使用。JS 支持的最大数字位数是 16 位，超过 16 位的数字需作为字符串大数处理。此时，数据类型必须保持为字符串，否则会丢失数据 */\n  largeNumber: Boolean,\n  /** 最大值。如果是大数，请传入字符串 */\n  max: {\n    type: [String, Number] as PropType<TdInputNumberProps['max']>,\n    default: Infinity as TdInputNumberProps['max'],\n  },\n  /** 最小值。如果是大数，请传入字符串 */\n  min: {\n    type: [String, Number] as PropType<TdInputNumberProps['min']>,\n    default: -Infinity as TdInputNumberProps['min'],\n  },\n  /** 占位符 */\n  placeholder: {\n    type: String,\n    default: undefined,\n  },\n  /** 只读状态 */\n  readonly: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 组件尺寸 */\n  size: {\n    type: String as PropType<TdInputNumberProps['size']>,\n    default: 'medium' as TdInputNumberProps['size'],\n    validator(val: TdInputNumberProps['size']): boolean {\n      if (!val) return true;\n      return ['small', 'medium', 'large'].includes(val);\n    },\n  },\n  /** 文本框状态 */\n  status: {\n    type: String as PropType<TdInputNumberProps['status']>,\n    default: 'default' as TdInputNumberProps['status'],\n    validator(val: TdInputNumberProps['status']): boolean {\n      if (!val) return true;\n      return ['default', 'success', 'warning', 'error'].includes(val);\n    },\n  },\n  /** 数值改变步数，可以是小数。如果是大数，请保证数据类型为字符串 */\n  step: {\n    type: [String, Number] as PropType<TdInputNumberProps['step']>,\n    default: 1 as TdInputNumberProps['step'],\n  },\n  /** 后置内容 */\n  suffix: {\n    type: [String, Function] as PropType<TdInputNumberProps['suffix']>,\n  },\n  /** 按钮布局 */\n  theme: {\n    type: String as PropType<TdInputNumberProps['theme']>,\n    default: 'row' as TdInputNumberProps['theme'],\n    validator(val: TdInputNumberProps['theme']): boolean {\n      if (!val) return true;\n      return ['column', 'row', 'normal'].includes(val);\n    },\n  },\n  /** 输入框下方提示文本，会根据不同的 `status` 呈现不同的样式 */\n  tips: {\n    type: [String, Function] as PropType<TdInputNumberProps['tips']>,\n  },\n  /** 数字输入框的值。当值为 '' 时，输入框显示为空 */\n  value: {\n    type: [String, Number] as PropType<TdInputNumberProps['value']>,\n    default: undefined as TdInputNumberProps['value'],\n  },\n  modelValue: {\n    type: [String, Number] as PropType<TdInputNumberProps['value']>,\n    default: undefined as TdInputNumberProps['value'],\n  },\n  /** 数字输入框的值。当值为 '' 时，输入框显示为空，非受控属性 */\n  defaultValue: {\n    type: [String, Number] as PropType<TdInputNumberProps['defaultValue']>,\n  },\n  /** 失去焦点时触发 */\n  onBlur: Function as PropType<TdInputNumberProps['onBlur']>,\n  /** 值变化时触发，`type` 表示触发本次变化的来源 */\n  onChange: Function as PropType<TdInputNumberProps['onChange']>,\n  /** 回车键按下时触发 */\n  onEnter: Function as PropType<TdInputNumberProps['onEnter']>,\n  /** 获取焦点时触发 */\n  onFocus: Function as PropType<TdInputNumberProps['onFocus']>,\n  /** 键盘按下时触发 */\n  onKeydown: Function as PropType<TdInputNumberProps['onKeydown']>,\n  /** 按下字符键时触发（keydown -> keypress -> keyup） */\n  onKeypress: Function as PropType<TdInputNumberProps['onKeypress']>,\n  /** 释放键盘时触发 */\n  onKeyup: Function as PropType<TdInputNumberProps['onKeyup']>,\n  /** 最大值或最小值校验结束后触发，`exceed-maximum` 表示超出最大值，`below-minimum` 表示小于最小值 */\n  onValidate: Function as PropType<TdInputNumberProps['onValidate']>,\n};\n"],"mappings":";;;;;;AASA,IAAAA,KAAA,GAAe;EAEbC,KAAO;IACLC,IAAM,EAAAC,MAAA;IACNC,SAAA,WAAAA,UAAUC,GAA2C;MACnD,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,MAAQ,YAAU,OAAO,EAAEC,QAAA,CAASD,GAAG;IACjD;GACF;EAEAE,mBAAqB;IACnBL,IAAM,EAAAM,OAAA;IACN,SAAS;GACX;EAEAC,SAAW,EAAAD,OAAA;EAEXE,aAAe;IACbR,IAAA,EAAM,CAACS,MAAA,EAAQC,MAAM;IACrB,WAAS;GACX;EAEAC,QAAU;IACRX,IAAM,EAAAM,OAAA;IACN,WAAS;GACX;EAEAM,MAAQ;IACNZ,IAAM,EAAAa;GACR;EAEAC,UAAY;IACVd,IAAM,EAAAU;GACR;EAEAK,KAAO;IACLf,IAAA,EAAM,CAACC,MAAA,EAAQY,QAAQ;GACzB;EAEAG,WAAa,EAAAV,OAAA;EAEbW,GAAK;IACHjB,IAAA,EAAM,CAACC,MAAA,EAAQQ,MAAM;IACrB,SAAS,EAAAS;GACX;EAEAC,GAAK;IACHnB,IAAA,EAAM,CAACC,MAAA,EAAQQ,MAAM;IACrB,WAAS,CAAAS;GACX;EAEAE,WAAa;IACXpB,IAAM,EAAAC,MAAA;IACN,WAAS;GACX;EAEAoB,QAAU;IACRrB,IAAM,EAAAM,OAAA;IACN,WAAS;GACX;EAEAgB,IAAM;IACJtB,IAAM,EAAAC,MAAA;IACN,WAAS;IACTC,SAAA,WAAAA,UAAUC,GAA0C;MAClD,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,OAAS,YAAU,OAAO,EAAEC,QAAA,CAASD,GAAG;IAClD;GACF;EAEAoB,MAAQ;IACNvB,IAAM,EAAAC,MAAA;IACN,WAAS;IACTC,SAAA,WAAAA,UAAUC,GAA4C;MACpD,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,SAAW,aAAW,WAAW,OAAO,EAAEC,QAAA,CAASD,GAAG;IAChE;GACF;EAEAqB,IAAM;IACJxB,IAAA,EAAM,CAACC,MAAA,EAAQQ,MAAM;IACrB,SAAS;GACX;EAEAgB,MAAQ;IACNzB,IAAA,EAAM,CAACC,MAAA,EAAQY,QAAQ;GACzB;EAEAa,KAAO;IACL1B,IAAM,EAAAC,MAAA;IACN,WAAS;IACTC,SAAA,WAAAA,UAAUC,GAA2C;MACnD,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,QAAU,SAAO,QAAQ,EAAEC,QAAA,CAASD,GAAG;IACjD;GACF;EAEAwB,IAAM;IACJ3B,IAAA,EAAM,CAACC,MAAA,EAAQY,QAAQ;GACzB;EAEAe,KAAO;IACL5B,IAAA,EAAM,CAACC,MAAA,EAAQQ,MAAM;IACrB,WAAS;GACX;EACAoB,UAAY;IACV7B,IAAA,EAAM,CAACC,MAAA,EAAQQ,MAAM;IACrB,WAAS;GACX;EAEAqB,YAAc;IACZ9B,IAAA,EAAM,CAACC,MAAA,EAAQQ,MAAM;GACvB;EAEAsB,MAAQ,EAAAlB,QAAA;EAERmB,QAAU,EAAAnB,QAAA;EAEVoB,OAAS,EAAApB,QAAA;EAETqB,OAAS,EAAArB,QAAA;EAETsB,SAAW,EAAAtB,QAAA;EAEXuB,UAAY,EAAAvB,QAAA;EAEZwB,OAAS,EAAAxB,QAAA;EAETyB,UAAY,EAAAzB;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}