{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport { onUnmounted } from 'vue';\nfunction _createForOfIteratorHelper(r, e) {\n  var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (!t) {\n    if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) {\n      t && (r = t);\n      var _n = 0,\n        F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          return _n >= r.length ? {\n            done: !0\n          } : {\n            done: !1,\n            value: r[_n++]\n          };\n        },\n        e: function e(r) {\n          throw r;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var o,\n    a = !0,\n    u = !1;\n  return {\n    s: function s() {\n      t = t.call(r);\n    },\n    n: function n() {\n      var r = t.next();\n      return a = r.done, r;\n    },\n    e: function e(r) {\n      u = !0, o = r;\n    },\n    f: function f() {\n      try {\n        a || null == t[\"return\"] || t[\"return\"]();\n      } finally {\n        if (u) throw o;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nvar traversalTabNavs = function traversalTabNavs(tabNavs, fn) {\n  var _iterator = _createForOfIteratorHelper(tabNavs),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var itemNode = _step.value;\n      if (itemNode.getAttribute(\"draggable\")) {\n        fn(itemNode);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n};\nvar handleTarget = function handleTarget(target, tabNavs) {\n  var resultTarget;\n  traversalTabNavs(tabNavs, function (itemNode) {\n    if (itemNode.contains(target)) {\n      resultTarget = itemNode;\n    }\n  });\n  return resultTarget;\n};\nfunction useDragSort(props) {\n  var navsWrap = null;\n  var dragged;\n  var enterTargets = [];\n  var dragstart = function dragstart(event) {\n    var target = event.target;\n    dragged = target;\n    target.style.opacity = \"0.5\";\n  };\n  var dragend = function dragend(event) {\n    event.target.style.opacity = \"\";\n  };\n  var dragover = function dragover(event) {\n    event.preventDefault();\n  };\n  var dragenter = function dragenter(event) {\n    var target = handleTarget(event.target, navsWrap.children);\n    if (target && target !== dragged && target.draggable) {\n      target.firstChild.style.outline = \"1px dashed #0052d9\";\n      if (!enterTargets.includes(target)) {\n        enterTargets.push(target);\n      }\n    }\n  };\n  var dragleave = function dragleave(event) {\n    var target = event.target;\n    for (var _i = 0, _enterTargets = enterTargets; _i < _enterTargets.length; _i++) {\n      var enterTarget = _enterTargets[_i];\n      if (!enterTarget.contains(target)) {\n        enterTarget.firstChild.style.outline = \"none\";\n      }\n    }\n  };\n  var drop = function drop(event) {\n    event.preventDefault();\n    traversalTabNavs(navsWrap.children, function (tabNav) {\n      tabNav.firstChild.style.outline = \"none\";\n    });\n    var target = handleTarget(event.target, navsWrap.children);\n    if (target && target.parentNode !== dragged && target.draggable) {\n      var _props$onDragSort;\n      var dragIndex = [].indexOf.call(navsWrap.children, dragged);\n      var targetIndex = [].indexOf.call(navsWrap.children, target);\n      if (targetIndex > dragIndex) {\n        target = navsWrap.children[targetIndex + 1];\n      }\n      var currentIndex = props.theme === \"card\" ? dragIndex : dragIndex - 1;\n      var endIndex = props.theme === \"card\" ? targetIndex : targetIndex - 1;\n      (_props$onDragSort = props.onDragSort) === null || _props$onDragSort === void 0 || _props$onDragSort.call(props, {\n        currentIndex: currentIndex,\n        current: props.panels[currentIndex].value,\n        targetIndex: endIndex,\n        target: props.panels[endIndex].value\n      });\n    }\n  };\n  function setNavsWrap(val) {\n    navsWrap = val;\n    navsWrap.addEventListener(\"dragstart\", dragstart, false);\n    navsWrap.addEventListener(\"dragend\", dragend, false);\n    navsWrap.addEventListener(\"dragover\", dragover, false);\n    navsWrap.addEventListener(\"dragenter\", dragenter, false);\n    document.addEventListener(\"dragleave\", dragleave, false);\n    document.addEventListener(\"mousemove\", dragleave, false);\n    navsWrap.addEventListener(\"drop\", drop, false);\n  }\n  onUnmounted(function () {\n    navsWrap.removeEventListener(\"dragstart\", dragstart);\n    navsWrap.removeEventListener(\"dragend\", dragend);\n    navsWrap.removeEventListener(\"dragover\", dragover);\n    navsWrap.removeEventListener(\"dragenter\", dragenter);\n    document.removeEventListener(\"dragleave\", dragleave);\n    document.removeEventListener(\"mousemove\", dragleave);\n    navsWrap.removeEventListener(\"drop\", drop);\n  });\n  return {\n    setNavsWrap: setNavsWrap\n  };\n}\nexport { useDragSort as default };","map":{"version":3,"names":["traversalTabNavs","tabNavs","fn","_iterator","_createForOfIteratorHelper","_step","s","n","done","itemNode","value","getAttribute","err","e","f","handleTarget","target","resultTarget","contains","useDragSort","props","navsWrap","dragged","enterTargets","dragstart","event","style","opacity","dragend","dragover","preventDefault","dragenter","children","draggable","firstChild","outline","includes","push","dragleave","_i","_enterTargets","length","enterTarget","drop","tabNav","parentNode","_props$onDragSort","dragIndex","indexOf","call","targetIndex","currentIndex","theme","endIndex","onDragSort","current","panels","setNavsWrap","val","addEventListener","document","onUnmounted","removeEventListener"],"sources":["../../src/hooks/useDragSort.tsx"],"sourcesContent":["import { onUnmounted } from 'vue';\n\nconst traversalTabNavs = (tabNavs: HTMLCollection, fn: { (itemNode: any): void; (tabNav: HTMLDivElement): void }) => {\n  for (const itemNode of tabNavs) {\n    if (itemNode.getAttribute('draggable')) {\n      fn(itemNode);\n    }\n  }\n};\n\nconst handleTarget = (target: EventTarget, tabNavs: HTMLCollection): any => {\n  let resultTarget;\n  traversalTabNavs(tabNavs, (itemNode) => {\n    if (itemNode.contains(target)) {\n      resultTarget = itemNode;\n    }\n  });\n  return resultTarget;\n};\n\nexport default function useDragSort(props: any) {\n  let navsWrap: HTMLDivElement = null;\n\n  // 获取当前正在拖动的tabNav节点\n  let dragged: HTMLDivElement;\n  const enterTargets: HTMLDivElement[] = [];\n\n  const dragstart = (event: DragEvent) => {\n    const target = event.target as HTMLDivElement;\n    // const { target } = event;\n    // 保存拖动元素的引用(ref.)\n    dragged = target;\n    // 使其半透明\n    target.style.opacity = '0.5';\n  };\n  const dragend = (event: DragEvent) => {\n    // 重置透明度\n    (event.target as HTMLDivElement).style.opacity = '';\n  };\n  /* 放置目标元素时触发事件 */\n  const dragover = (event: DragEvent) => {\n    // 阻止默认动作以启用drop\n    event.preventDefault();\n  };\n  // 当可拖动的元素进入可放置的目标时\n  const dragenter = (event: DragEvent) => {\n    // 高亮目标节点\n    const target = handleTarget(event.target, navsWrap.children);\n    if (target && target !== dragged && target.draggable) {\n      target.firstChild.style.outline = '1px dashed #0052d9';\n      // 进入的节点全部记录下来\n      if (!enterTargets.includes(target)) {\n        enterTargets.push(target);\n      }\n    }\n  };\n  // 当拖动元素离开可放置目标节点\n  const dragleave = (event: DragEvent) => {\n    const target = event.target as HTMLDivElement;\n    // 重置其边框\n    // const { target } = event;\n    for (const enterTarget of enterTargets) {\n      // 目标不在需要放入的节点内，则重置边框\n      if (!enterTarget.contains(target)) {\n        // 记录过的节点全部重置边框\n        (enterTarget.firstChild as HTMLDivElement).style.outline = 'none';\n      }\n    }\n  };\n  const drop = (event: DragEvent) => {\n    // 阻止默认动作（如打开一些元素的链接）\n    event.preventDefault();\n\n    traversalTabNavs(navsWrap.children, (tabNav) => {\n      tabNav.firstChild.style.outline = 'none';\n    });\n    // 将拖动的元素到所选择的放置目标节点中\n    let target = handleTarget(event.target, navsWrap.children);\n    if (target && target.parentNode !== dragged && target.draggable) {\n      // 获取拖拽元素index\n      const dragIndex = [].indexOf.call(navsWrap.children, dragged);\n      // 获取放入元素index\n      const targetIndex = [].indexOf.call(navsWrap.children, target);\n      if (targetIndex > dragIndex) {\n        target = navsWrap.children[targetIndex + 1];\n      }\n\n      // 当props.theme === \"normal\" 会多出一个指示条为第一个dom节点，所以需要减1\n      const currentIndex = props.theme === 'card' ? dragIndex : dragIndex - 1;\n      const endIndex = props.theme === 'card' ? targetIndex : targetIndex - 1;\n      props.onDragSort?.({\n        currentIndex,\n        current: props.panels[currentIndex].value,\n        targetIndex: endIndex,\n        target: props.panels[endIndex].value,\n      });\n    }\n  };\n  function setNavsWrap(val: HTMLDivElement) {\n    navsWrap = val;\n    navsWrap.addEventListener('dragstart', dragstart, false);\n    navsWrap.addEventListener('dragend', dragend, false);\n    navsWrap.addEventListener('dragover', dragover, false);\n    navsWrap.addEventListener('dragenter', dragenter, false);\n    document.addEventListener('dragleave', dragleave, false);\n    document.addEventListener('mousemove', dragleave, false);\n    navsWrap.addEventListener('drop', drop, false);\n  }\n\n  onUnmounted(() => {\n    navsWrap.removeEventListener('dragstart', dragstart);\n    navsWrap.removeEventListener('dragend', dragend);\n    navsWrap.removeEventListener('dragover', dragover);\n    navsWrap.removeEventListener('dragenter', dragenter);\n    document.removeEventListener('dragleave', dragleave);\n    document.removeEventListener('mousemove', dragleave);\n    navsWrap.removeEventListener('drop', drop);\n  });\n  return { setNavsWrap };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}