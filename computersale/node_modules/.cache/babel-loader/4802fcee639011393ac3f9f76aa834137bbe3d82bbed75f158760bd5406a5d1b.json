{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nconst total = 28;\nexport default {\n  __name: 'OrderComponent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const data = [];\n    for (let i = 0; i < total; i++) {\n      data.push({\n        index: i + 1,\n        oid: ['001', '002', '003'][i % 3],\n        ordertime: ['2022-01-01', '2022-02-01', '2022-03-01', '2022-04-01', '2022-05-01'][i % 5],\n        cid: ['A001', 'A002', 'A003'][i % 3],\n        status: ['待付款', '待发货', '已完成'][i % 3],\n        detail: ['订单详细'],\n        totalprice: i * 100,\n        confirm: ['确认订单']\n      });\n    }\n    const stripe = ref(true);\n    const bordered = ref(true);\n    const hover = ref(false);\n    const tableLayout = ref(false);\n    const size = ref('medium');\n    const showHeader = ref(true);\n    const columns = ref([{\n      colKey: 'oid',\n      title: '订单号',\n      width: '100'\n    }, {\n      colKey: 'ordertime',\n      title: '下单时间',\n      width: '150'\n    }, {\n      colKey: 'cid',\n      title: '顾客号',\n      width: '100'\n    }, {\n      colKey: 'status',\n      title: '订单状态',\n      width: '100'\n    }, {\n      colKey: 'detail',\n      title: '订单详细',\n      width: '100'\n    }, {\n      colKey: 'totalprice',\n      title: '订单总价',\n      width: '100'\n    }, {\n      colKey: 'confirm',\n      title: '确认订单',\n      width: '100'\n    }]);\n    const handleRowClick = e => {\n      console.log(e);\n    };\n    const pagination = {\n      defaultCurrent: 1,\n      defaultPageSize: 5,\n      total\n    };\n\n    // 请求后端数据并写入表中\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/api/orders'); // 根据实际API端点替换\n        data.value = response.data.orders;\n        total.value = response.data.total;\n      } catch (error) {\n        console.error('请求数据失败:', error);\n      }\n    };\n    onMounted(() => {\n      fetchData();\n    });\n    const __returned__ = {\n      data,\n      total,\n      stripe,\n      bordered,\n      hover,\n      tableLayout,\n      size,\n      showHeader,\n      columns,\n      handleRowClick,\n      pagination,\n      fetchData,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","total","data","i","push","index","oid","ordertime","cid","status","detail","totalprice","confirm","stripe","bordered","hover","tableLayout","size","showHeader","columns","colKey","title","width","handleRowClick","e","console","log","pagination","defaultCurrent","defaultPageSize","fetchData","response","axios","get","value","orders","error","onMounted"],"sources":["E:/三年级上册/ComputerSale/computersale/src/views/OrderComponent.vue"],"sourcesContent":["<template>\r\n  <t-space direction=\"vertical\">\r\n    <!-- 按钮操作区域 -->\r\n    <t-radio-group v-model=\"size\" variant=\"default-filled\">\r\n      <!-- <t-radio-button value=\"small\">小尺寸</t-radio-button> -->\r\n      <t-radio-button value=\"medium\">订单列表</t-radio-button>\r\n      <!-- <t-radio-button value=\"large\">大尺寸</t-radio-button> -->\r\n    </t-radio-group>\r\n\r\n   \r\n\r\n    <!-- 当数据为空需要占位时，会显示 cellEmptyContent -->\r\n    <t-table\r\n      row-key=\"index\"\r\n      :data=\"data\"\r\n      :columns=\"columns\"\r\n      :stripe=\"stripe\"\r\n      :bordered=\"bordered\"\r\n      :hover=\"hover\"\r\n      :table-layout=\"tableLayout ? 'auto' : 'fixed'\"\r\n      :size=\"size\"\r\n      :pagination=\"pagination\"\r\n      :show-header=\"showHeader\"\r\n      cell-empty-content=\"-\"\r\n      resizable\r\n      lazy-load\r\n      @row-click=\"handleRowClick\"\r\n    >\r\n    </t-table>\r\n  </t-space>\r\n</template>\r\n\r\n<script setup lang=\"jsx\">\r\n\r\n\r\nimport { ref } from 'vue';\r\n\r\nconst data = [];\r\nconst total = 28;\r\nfor (let i = 0; i < total; i++) {\r\n  data.push({\r\n    index: i + 1,\r\n    oid:['001', '002', '003'][i % 3],\r\n    ordertime: ['2022-01-01', '2022-02-01', '2022-03-01', '2022-04-01', '2022-05-01'][i % 5],\r\n    cid: ['A001', 'A002', 'A003'][i % 3],\r\n    status: ['待付款', '待发货', '已完成'][i % 3],\r\n    detail:['订单详细'],\r\n    totalprice: i * 100,\r\n    confirm: ['确认订单']\r\n    \r\n  });\r\n}\r\n\r\nconst stripe = ref(true);\r\nconst bordered = ref(true);\r\nconst hover = ref(false);\r\nconst tableLayout = ref(false);\r\nconst size = ref('medium');\r\nconst showHeader = ref(true);\r\n\r\nconst columns = ref([\r\n  { colKey: 'oid', title: '订单号', width: '100' },\r\n  { colKey: 'ordertime', title: '下单时间', width: '150' },\r\n  { colKey: 'cid', title: '顾客号', width: '100' },\r\n  { colKey:'status', title: '订单状态', width: '100' },\r\n  { colKey:'detail', title: '订单详细', width: '100' },\r\n  { colKey:'totalprice', title: '订单总价', width: '100' },\r\n  { colKey:'confirm', title: '确认订单', width: '100' },\r\n  \r\n]);\r\n\r\nconst handleRowClick = (e) => {\r\n  console.log(e);\r\n};\r\n\r\nconst pagination = {\r\n  defaultCurrent: 1,\r\n  defaultPageSize: 5,\r\n  total,\r\n};\r\n\r\n// 请求后端数据并写入表中\r\nconst fetchData = async () => {\r\n  try {\r\n    const response = await axios.get('/api/orders'); // 根据实际API端点替换\r\n    data.value = response.data.orders;\r\n    total.value = response.data.total;\r\n  } catch (error) {\r\n    console.error('请求数据失败:', error);\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  fetchData();\r\n});\r\n</script>\r\n\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":";AAmCA,SAASA,GAAG,QAAQ,KAAK;AAGzB,MAAMC,KAAK,GAAG,EAAE;;;;;;;IADhB,MAAMC,IAAI,GAAG,EAAE;IAEf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,EAAEE,CAAC,EAAE,EAAE;MAC9BD,IAAI,CAACE,IAAI,CAAC;QACRC,KAAK,EAAEF,CAAC,GAAG,CAAC;QACZG,GAAG,EAAC,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAACH,CAAC,GAAG,CAAC,CAAC;QAChCI,SAAS,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC,CAACJ,CAAC,GAAG,CAAC,CAAC;QACxFK,GAAG,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAACL,CAAC,GAAG,CAAC,CAAC;QACpCM,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAACN,CAAC,GAAG,CAAC,CAAC;QACpCO,MAAM,EAAC,CAAC,MAAM,CAAC;QACfC,UAAU,EAAER,CAAC,GAAG,GAAG;QACnBS,OAAO,EAAE,CAAC,MAAM;MAElB,CAAC,CAAC;IACJ;IAEA,MAAMC,MAAM,GAAGb,GAAG,CAAC,IAAI,CAAC;IACxB,MAAMc,QAAQ,GAAGd,GAAG,CAAC,IAAI,CAAC;IAC1B,MAAMe,KAAK,GAAGf,GAAG,CAAC,KAAK,CAAC;IACxB,MAAMgB,WAAW,GAAGhB,GAAG,CAAC,KAAK,CAAC;IAC9B,MAAMiB,IAAI,GAAGjB,GAAG,CAAC,QAAQ,CAAC;IAC1B,MAAMkB,UAAU,GAAGlB,GAAG,CAAC,IAAI,CAAC;IAE5B,MAAMmB,OAAO,GAAGnB,GAAG,CAAC,CAClB;MAAEoB,MAAM,EAAE,KAAK;MAAEC,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAM,CAAC,EAC7C;MAAEF,MAAM,EAAE,WAAW;MAAEC,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAM,CAAC,EACpD;MAAEF,MAAM,EAAE,KAAK;MAAEC,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAM,CAAC,EAC7C;MAAEF,MAAM,EAAC,QAAQ;MAAEC,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAM,CAAC,EAChD;MAAEF,MAAM,EAAC,QAAQ;MAAEC,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAM,CAAC,EAChD;MAAEF,MAAM,EAAC,YAAY;MAAEC,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAM,CAAC,EACpD;MAAEF,MAAM,EAAC,SAAS;MAAEC,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAM,CAAC,CAElD,CAAC;IAEF,MAAMC,cAAc,GAAIC,CAAC,IAAK;MAC5BC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IAChB,CAAC;IAED,MAAMG,UAAU,GAAG;MACjBC,cAAc,EAAE,CAAC;MACjBC,eAAe,EAAE,CAAC;MAClB5B;IACF,CAAC;;IAED;IACA,MAAM6B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC;QACjD/B,IAAI,CAACgC,KAAK,GAAGH,QAAQ,CAAC7B,IAAI,CAACiC,MAAM;QACjClC,KAAK,CAACiC,KAAK,GAAGH,QAAQ,CAAC7B,IAAI,CAACD,KAAK;MACnC,CAAC,CAAC,OAAOmC,KAAK,EAAE;QACdX,OAAO,CAACW,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MACjC;IACF,CAAC;IAEDC,SAAS,CAAC,MAAM;MACdP,SAAS,CAAC,CAAC;IACb,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}