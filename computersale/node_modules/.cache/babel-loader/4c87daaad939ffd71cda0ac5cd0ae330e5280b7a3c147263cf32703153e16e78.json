{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\n/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport { defineComponent, computed, createVNode } from 'vue';\nimport { usePrefixClass } from '../hooks/useConfig.mjs';\nimport { i as isString_1 } from './dep-03a7fb6c.mjs';\nimport './dep-eca422c3.mjs';\nimport { t as toString_1 } from './dep-7932c2e8.mjs';\nvar toString = toString_1;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n  reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\\\$&') : string;\n}\nvar escapeRegExp_1 = escapeRegExp;\nvar _HighlightOption = defineComponent({\n  name: \"HighlightOption\",\n  props: {\n    content: String,\n    keyword: String\n  },\n  setup: function setup(props) {\n    var classPrefix = usePrefixClass();\n    var words = computed(function () {\n      var _content$match;\n      var content = props.content,\n        keyword = props.keyword;\n      if (!content) return {\n        list: []\n      };\n      if (!isString_1(content) || !keyword) return {\n        list: [content]\n      };\n      var regExp = new RegExp(escapeRegExp_1(keyword), \"i\");\n      var splitKeyword = (_content$match = content.match(regExp)) === null || _content$match === void 0 ? void 0 : _content$match[0];\n      return {\n        list: content.split(splitKeyword),\n        keyword: splitKeyword\n      };\n    });\n    return function () {\n      var _words$value = words.value,\n        list = _words$value.list,\n        keyword = _words$value.keyword;\n      return createVNode(\"div\", {\n        \"class\": \"\".concat(classPrefix.value, \"-select-option__highlight-item\")\n      }, [list.map(function (item, index) {\n        if (!index) return item;\n        return [createVNode(\"b\", {\n          \"class\": \"\".concat(classPrefix.value, \"-is-highlight\"),\n          \"key\": item + keyword\n        }, [keyword]), item];\n      })]);\n    };\n  }\n});\nexport { _HighlightOption as _, escapeRegExp_1 as e };","map":{"version":3,"names":["toString","toString_1","reRegExpChar","reHasRegExpChar","RegExp","source","escapeRegExp","string","test","replace","escapeRegExp_1","_HighlightOption","defineComponent","name","props","content","String","keyword","setup","classPrefix","usePrefixClass","words","computed","_content$match","list","isString_1","regExp","splitKeyword","match","split","_words$value","value","createVNode","concat","map","item","index"],"sources":["../../node_modules/lodash/escapeRegExp.js","../../src/auto-complete/highlight-option.tsx"],"sourcesContent":["var toString = require('./toString');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nmodule.exports = escapeRegExp;\n","import { computed, defineComponent } from 'vue';\nimport type { PropType } from 'vue';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport isString from 'lodash/isString';\nimport escapeRegExp from 'lodash/escapeRegExp';\n\nexport interface HighlightOptionProps {\n  content: string;\n  keyword: string;\n}\n\nexport default defineComponent({\n  name: 'HighlightOption',\n\n  props: {\n    /** 联想词 */\n    content: String as PropType<HighlightOptionProps['content']>,\n    /** 搜索词 */\n    keyword: String as PropType<HighlightOptionProps['keyword']>,\n  },\n\n  setup(props) {\n    const classPrefix = usePrefixClass();\n    const words = computed<{ list: string[]; keyword?: string }>(() => {\n      const { content, keyword } = props;\n      if (!content) return { list: [] };\n      if (!isString(content) || !keyword) return { list: [content] };\n      const regExp = new RegExp(escapeRegExp(keyword), 'i');\n      const splitKeyword = content.match(regExp)?.[0];\n      return {\n        list: content.split(splitKeyword),\n        keyword: splitKeyword,\n      };\n    });\n\n    return () => {\n      const { list, keyword } = words.value;\n      return (\n        <div class={`${classPrefix.value}-select-option__highlight-item`}>\n          {list.map((item, index) => {\n            if (!index) return item;\n            return [\n              <b class={`${classPrefix.value}-is-highlight`} key={item + keyword}>\n                {keyword}\n              </b>,\n              item,\n            ];\n          })}\n        </div>\n      );\n    };\n  },\n});\n"],"mappings":";;;;;;;;;;;;AAAA,IAAIA,QAAQ,GAAGC,UAAqB;;AAEpC;AACA;AACA;AACA;AACA,IAAIC,YAAY,GAAG,qBAAqB;EACpCC,eAAe,GAAGC,MAAM,CAACF,YAAY,CAACG,MAAM,CAAC;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAACC,MAAM,EAAE;EAC5BA,MAAM,GAAGP,QAAQ,CAACO,MAAM,CAAC;EACzB,OAAQA,MAAM,IAAIJ,eAAe,CAACK,IAAI,CAACD,MAAM,CAAC,GAC1CA,MAAM,CAACE,OAAO,CAACP,YAAY,EAAE,MAAM,CAAC,GACpCK,MAAM;AACZ;AAEA,IAAAG,cAAc,GAAGJ,YAAA;ACpBjB,IAAAK,gBAAA,GAAeC,eAAgB;EAC7BC,IAAM;EAENC,KAAO;IAELC,OAAS,EAAAC,MAAA;IAETC,OAAS,EAAAD;GACX;EAEAE,KAAA,WAAAA,MAAMJ,KAAO;IACX,IAAMK,WAAA,GAAcC,cAAe;IAC7B,IAAAC,KAAA,GAAQC,QAAA,CAA+C,YAAM;MAAA,IAAAC,cAAA;MAC3D,IAAER,OAAS,GAAYD,KAAA,CAArBC,OAAS;QAAAE,OAAA,GAAYH,KAAA,CAAZG,OAAA;MACjB,IAAI,CAACF,OAAA,EAAgB;QAAES,IAAM;OAAG;MAChC,IAAI,CAACC,UAAA,CAASV,OAAO,KAAK,CAACE,OAAA,EAAS,OAAO;QAAEO,IAAA,EAAM,CAACT,OAAO;OAAE;MAC7D,IAAMW,MAAA,GAAS,IAAItB,MAAA,CAAOM,cAAa,CAAAO,OAAO,GAAG,GAAG;MACpD,IAAMU,YAAe,IAAAJ,cAAA,GAAAR,OAAA,CAAQa,KAAM,CAAAF,MAAM,CAAI,cAAAH,cAAA,uBAAxBA,cAAA,CAAwB;MACtC;QACLC,IAAA,EAAMT,OAAQ,CAAAc,KAAA,CAAMF,YAAY;QAChCV,OAAS,EAAAU;OACX;IACF,CAAC;IAED,OAAO,YAAM;MACX,IAAAG,YAAA,GAA0BT,KAAM,CAAAU,KAAA;QAAxBP,IAAA,GAAAM,YAAA,CAAAN,IAAA;QAAMP,OAAQ,GAAAa,YAAA,CAARb,OAAQ;MAEpB,OAAAe,WAAA;QAAA,YAAAC,MAAA,CAAed,WAAA,CAAYY,KAAA;OACxB,GAAAP,IAAK,CAAAU,GAAA,CAAI,UAACC,IAAA,EAAMC,KAAU;QACzB,IAAI,CAACA,KAAA,EAAc,OAAAD,IAAA;QACZ,QAAAH,WAAA;UAAA,YAAAC,MAAA,CACQd,WAAA,CAAYY,KAAA;iBAA2BI,IAAA,GAAOlB;SACxD,GAAAA,OAAA,CAEH,GAAAkB,IAAA,CACF;MACF,CAAC;KAGP;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}