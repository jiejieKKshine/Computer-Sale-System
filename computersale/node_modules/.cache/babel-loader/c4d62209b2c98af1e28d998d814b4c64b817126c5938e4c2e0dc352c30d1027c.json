{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport './dep-eca422c3.mjs';\nimport { _ as _baseDifference } from './dep-6a7115de.mjs';\nimport { a as _baseFlatten } from './dep-4ec29b23.mjs';\nimport { _ as _baseRest, i as isArrayLikeObject_1 } from './dep-e065dc25.mjs';\nvar baseDifference = _baseDifference,\n  baseFlatten = _baseFlatten,\n  baseRest = _baseRest,\n  isArrayLikeObject = isArrayLikeObject_1;\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function (array, values) {\n  return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];\n});\nvar difference_1 = difference;\nexport { difference_1 as d };","map":{"version":3,"names":["baseDifference","_baseDifference","baseFlatten","_baseFlatten","baseRest","_baseRest","isArrayLikeObject","isArrayLikeObject_1","difference","array","values","difference_1"],"sources":["../../node_modules/lodash/difference.js"],"sourcesContent":["var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nmodule.exports = difference;\n"],"mappings":";;;;;;;;;;AAAA,IAAIA,cAAc,GAAGC,eAA4B;EAC7CC,WAAW,GAAGC,YAAyB;EACvCC,QAAQ,GAAGC,SAAsB;EACjCC,iBAAiB,GAAGC,mBAA8B;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,UAAU,GAAGJ,QAAQ,CAAC,UAASK,KAAK,EAAEC,MAAM,EAAE;EAChD,OAAOJ,iBAAiB,CAACG,KAAK,CAAC,GAC3BT,cAAc,CAACS,KAAK,EAAEP,WAAW,CAACQ,MAAM,EAAE,CAAC,EAAEJ,iBAAiB,EAAE,IAAI,CAAC,CAAC,GACtE,EAAE;AACR,CAAC,CAAC;AAEF,IAAAK,YAAc,GAAGH,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}