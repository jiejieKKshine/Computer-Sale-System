{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nvar rgb2cmyk = function rgb2cmyk(red, green, blue) {\n  var computedC = 0;\n  var computedM = 0;\n  var computedY = 0;\n  var computedK = 0;\n  var r = parseInt(\"\".concat(red).replace(/\\s/g, \"\"), 10);\n  var g = parseInt(\"\".concat(green).replace(/\\s/g, \"\"), 10);\n  var b = parseInt(\"\".concat(blue).replace(/\\s/g, \"\"), 10);\n  if (r === 0 && g === 0 && b === 0) {\n    computedK = 1;\n    return [0, 0, 0, 1];\n  }\n  computedC = 1 - r / 255;\n  computedM = 1 - g / 255;\n  computedY = 1 - b / 255;\n  var minCMY = Math.min(computedC, Math.min(computedM, computedY));\n  computedC = (computedC - minCMY) / (1 - minCMY);\n  computedM = (computedM - minCMY) / (1 - minCMY);\n  computedY = (computedY - minCMY) / (1 - minCMY);\n  computedK = minCMY;\n  return [computedC, computedM, computedY, computedK];\n};\nvar cmyk2rgb = function cmyk2rgb(cyan, magenta, yellow, black) {\n  var c = cyan / 100;\n  var m = magenta / 100;\n  var y = yellow / 100;\n  var k = black / 100;\n  c = c * (1 - k) + k;\n  m = m * (1 - k) + k;\n  y = y * (1 - k) + k;\n  var r = 1 - c;\n  var g = 1 - m;\n  var b = 1 - y;\n  r = Math.round(255 * r);\n  g = Math.round(255 * g);\n  b = Math.round(255 * b);\n  return {\n    r: r,\n    g: g,\n    b: b\n  };\n};\nvar REG_CMYK_STRING = /cmyk\\((\\d+%?),(\\d+%?),(\\d+%?),(\\d+%?)\\)/;\nvar toNumber = function toNumber(str) {\n  return Math.max(0, Math.min(255, parseInt(str, 10)));\n};\nvar cmykInputToColor = function cmykInputToColor(input) {\n  if (/cmyk/i.test(input)) {\n    var str = input.replace(/\\s/g, \"\");\n    var match = str.match(REG_CMYK_STRING);\n    var c = toNumber(match[1]);\n    var m = toNumber(match[2]);\n    var y = toNumber(match[3]);\n    var k = toNumber(match[4]);\n    var _cmyk2rgb = cmyk2rgb(c, m, y, k),\n      r = _cmyk2rgb.r,\n      g = _cmyk2rgb.g,\n      b = _cmyk2rgb.b;\n    return \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\");\n  }\n  return input;\n};\nexport { cmyk2rgb, cmykInputToColor, rgb2cmyk };","map":{"version":3,"names":["rgb2cmyk","red","green","blue","computedC","computedM","computedY","computedK","r","parseInt","concat","replace","g","b","minCMY","Math","min","cmyk2rgb","cyan","magenta","yellow","black","c","m","y","k","round","REG_CMYK_STRING","toNumber","str","max","cmykInputToColor","input","test","match","_cmyk2rgb"],"sources":["../../../../src/_common/js/color-picker/cmyk.ts"],"sourcesContent":["/**\n * rgb 转 cmyk\n * @param red\n * @param green\n * @param blue\n * @returns\n */\nexport const rgb2cmyk = (red: number, green: number, blue: number) => {\n  let computedC = 0;\n  let computedM = 0;\n  let computedY = 0;\n  let computedK = 0;\n\n  const r = parseInt(`${red}`.replace(/\\s/g, ''), 10);\n  const g = parseInt(`${green}`.replace(/\\s/g, ''), 10);\n  const b = parseInt(`${blue}`.replace(/\\s/g, ''), 10);\n\n  if (r === 0 && g === 0 && b === 0) {\n    computedK = 1;\n    return [0, 0, 0, 1];\n  }\n\n  computedC = 1 - r / 255;\n  computedM = 1 - g / 255;\n  computedY = 1 - b / 255;\n\n  const minCMY = Math.min(computedC, Math.min(computedM, computedY));\n  computedC = (computedC - minCMY) / (1 - minCMY);\n  computedM = (computedM - minCMY) / (1 - minCMY);\n  computedY = (computedY - minCMY) / (1 - minCMY);\n  computedK = minCMY;\n\n  return [computedC, computedM, computedY, computedK];\n};\n\n/**\n * cmyk 转 rgb\n * @param cyan\n * @param magenta\n * @param yellow\n * @param black\n * @returns\n */\nexport const cmyk2rgb = (cyan: number, magenta: number, yellow: number, black: number) => {\n  let c = cyan / 100;\n  let m = magenta / 100;\n  let y = yellow / 100;\n  const k = black / 100;\n\n  c = c * (1 - k) + k;\n  m = m * (1 - k) + k;\n  y = y * (1 - k) + k;\n\n  let r = 1 - c;\n  let g = 1 - m;\n  let b = 1 - y;\n\n  r = Math.round(255 * r);\n  g = Math.round(255 * g);\n  b = Math.round(255 * b);\n  return {\n    r,\n    g,\n    b,\n  };\n};\n\nconst REG_CMYK_STRING = /cmyk\\((\\d+%?),(\\d+%?),(\\d+%?),(\\d+%?)\\)/;\n\nconst toNumber = (str: string) => Math.max(0, Math.min(255, parseInt(str, 10)));\n\n/**\n * 输入色转rgb\n * @param input\n * @returns\n */\nexport const cmykInputToColor = (input: string) => {\n  if (/cmyk/i.test(input)) {\n    const str = input.replace(/\\s/g, '');\n    const match = str.match(REG_CMYK_STRING);\n    const c = toNumber(match[1]);\n    const m = toNumber(match[2]);\n    const y = toNumber(match[3]);\n    const k = toNumber(match[4]);\n    const { r, g, b } = cmyk2rgb(c, m, y, k);\n    return `rgb(${r}, ${g}, ${b})`;\n  }\n  return input;\n};\n"],"mappings":";;;;;;AAOO,IAAMA,QAAW,YAAXA,QAAWA,CAACC,GAAa,EAAAC,KAAA,EAAeC,IAAiB;EACpE,IAAIC,SAAY;EAChB,IAAIC,SAAY;EAChB,IAAIC,SAAY;EAChB,IAAIC,SAAY;EAEV,IAAAC,CAAA,GAAIC,QAAA,CAAS,GAAAC,MAAA,CAAGT,GAAA,CAAM,CAAAU,OAAA,CAAQ,KAAO,IAAE,GAAG,EAAE;EAC5C,IAAAC,CAAA,GAAIH,QAAA,CAAS,GAAAC,MAAA,CAAGR,KAAA,CAAQ,CAAAS,OAAA,CAAQ,KAAO,IAAE,GAAG,EAAE;EAC9C,IAAAE,CAAA,GAAIJ,QAAA,CAAS,GAAAC,MAAA,CAAGP,IAAA,CAAO,CAAAQ,OAAA,CAAQ,KAAO,IAAE,GAAG,EAAE;EAEnD,IAAIH,CAAM,UAAKI,CAAM,UAAKC,CAAA,KAAM,CAAG;IACrBN,SAAA;IACZ,OAAO,CAAC,GAAG,CAAG,KAAG,CAAC;EACpB;EAEAH,SAAA,GAAY,IAAII,CAAI;EACpBH,SAAA,GAAY,IAAIO,CAAI;EACpBN,SAAA,GAAY,IAAIO,CAAI;EAEd,IAAAC,MAAA,GAASC,IAAA,CAAKC,GAAI,CAAAZ,SAAA,EAAWW,IAAA,CAAKC,GAAI,CAAAX,SAAA,EAAWC,SAAS,CAAC;EACpDF,SAAA,IAAAA,SAAA,GAAYU,MAAA,KAAW,CAAI,GAAAA,MAAA;EAC3BT,SAAA,IAAAA,SAAA,GAAYS,MAAA,KAAW,CAAI,GAAAA,MAAA;EAC3BR,SAAA,IAAAA,SAAA,GAAYQ,MAAA,KAAW,CAAI,GAAAA,MAAA;EAC5BP,SAAA,GAAAO,MAAA;EAEZ,OAAO,CAACV,SAAA,EAAWC,SAAW,EAAAC,SAAA,EAAWC,SAAS;AACpD;AAUa,IAAAU,QAAW,YAAXA,QAAWA,CAACC,IAAc,EAAAC,OAAA,EAAiBC,MAAA,EAAgBC,KAAkB;EACxF,IAAIC,CAAA,GAAIJ,IAAO;EACf,IAAIK,CAAA,GAAIJ,OAAU;EAClB,IAAIK,CAAA,GAAIJ,MAAS;EACjB,IAAMK,CAAA,GAAIJ,KAAQ;EAEdC,CAAA,GAAAA,CAAA,IAAK,IAAIG,CAAK,IAAAA,CAAA;EACdF,CAAA,GAAAA,CAAA,IAAK,IAAIE,CAAK,IAAAA,CAAA;EACdD,CAAA,GAAAA,CAAA,IAAK,IAAIC,CAAK,IAAAA,CAAA;EAElB,IAAIjB,CAAA,GAAI,CAAI,GAAAc,CAAA;EACZ,IAAIV,CAAA,GAAI,CAAI,GAAAW,CAAA;EACZ,IAAIV,CAAA,GAAI,CAAI,GAAAW,CAAA;EAERhB,CAAA,GAAAO,IAAA,CAAKW,KAAM,OAAMlB,CAAC;EAClBI,CAAA,GAAAG,IAAA,CAAKW,KAAM,OAAMd,CAAC;EAClBC,CAAA,GAAAE,IAAA,CAAKW,KAAM,OAAMb,CAAC;EACf;IACLL,CAAA,EAAAA,CAAA;IACAI,CAAA,EAAAA,CAAA;IACAC,CAAA,EAAAA;GACF;AACF;AAEA,IAAMc,eAAkB;AAExB,IAAMC,QAAW,YAAXA,QAAWA,CAACC,GAAgB;EAAA,OAAAd,IAAA,CAAKe,GAAI,IAAGf,IAAK,CAAAC,GAAA,CAAI,GAAK,EAAAP,QAAA,CAASoB,GAAK,IAAE,CAAC,CAAC;AAAA;IAOjEE,gBAAA,GAAmB,SAAnBA,iBAAoBC,KAAkB;EAC7C,YAAQC,IAAK,CAAAD,KAAK,CAAG;IACvB,IAAMH,GAAM,GAAAG,KAAA,CAAMrB,OAAQ,QAAO,EAAE;IAC7B,IAAAuB,KAAA,GAAQL,GAAI,CAAAK,KAAA,CAAMP,eAAe;IACjC,IAAAL,CAAA,GAAIM,QAAS,CAAAM,KAAA,CAAM,CAAE;IACrB,IAAAX,CAAA,GAAIK,QAAS,CAAAM,KAAA,CAAM,CAAE;IACrB,IAAAV,CAAA,GAAII,QAAS,CAAAM,KAAA,CAAM,CAAE;IACrB,IAAAT,CAAA,GAAIG,QAAS,CAAAM,KAAA,CAAM,CAAE;IACrB,IAAAC,SAAA,GAAclB,QAAS,CAAAK,CAAA,EAAGC,CAAG,EAAAC,CAAA,EAAGC,CAAC;MAA/BjB,CAAA,GAAA2B,SAAA,CAAA3B,CAAA;MAAGI,CAAG,GAAAuB,SAAA,CAAHvB,CAAG;MAAAC,CAAA,GAAAsB,SAAA,CAAAtB,CAAA;IACP,cAAAH,MAAA,CAAOF,CAAA,QAAAE,MAAA,CAAME,CAAM,QAAAF,MAAA,CAAAG,CAAA;EAC5B;EACO,OAAAmB,KAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}