{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nvar FORMAT_INPUT_CONFIG = {\n  RGB: [{\n    key: \"r\",\n    min: 0,\n    max: 255,\n    type: \"inputNumber\"\n  }, {\n    key: \"g\",\n    min: 0,\n    max: 255,\n    type: \"inputNumber\"\n  }, {\n    key: \"b\",\n    min: 0,\n    max: 255,\n    type: \"inputNumber\"\n  }],\n  HSV: [{\n    key: \"h\",\n    min: 0,\n    max: 360,\n    type: \"inputNumber\"\n  }, {\n    key: \"s\",\n    min: 0,\n    max: 100,\n    type: \"inputNumber\"\n  }, {\n    key: \"v\",\n    min: 0,\n    max: 100,\n    type: \"inputNumber\"\n  }],\n  HSL: [{\n    key: \"h\",\n    min: 0,\n    max: 360,\n    type: \"inputNumber\"\n  }, {\n    key: \"s\",\n    min: 0,\n    max: 100,\n    type: \"inputNumber\"\n  }, {\n    key: \"l\",\n    min: 0,\n    max: 100,\n    type: \"inputNumber\"\n  }],\n  CMYK: [{\n    key: \"c\",\n    min: 0,\n    max: 255,\n    type: \"inputNumber\"\n  }, {\n    key: \"m\",\n    min: 0,\n    max: 255,\n    type: \"inputNumber\"\n  }, {\n    key: \"y\",\n    min: 0,\n    max: 255,\n    type: \"inputNumber\"\n  }, {\n    key: \"k\",\n    min: 0,\n    max: 255,\n    type: \"inputNumber\"\n  }],\n  CSS: [{\n    key: \"css\",\n    type: \"input\",\n    flex: 3\n  }],\n  HEX: [{\n    key: \"hex\",\n    type: \"input\",\n    flex: 3\n  }]\n};\nexport { FORMAT_INPUT_CONFIG, FORMAT_INPUT_CONFIG as default };","map":{"version":3,"names":["FORMAT_INPUT_CONFIG","RGB","key","min","max","type","HSV","HSL","CMYK","CSS","flex","HEX"],"sources":["../../../../src/color-picker/panel/format/config.ts"],"sourcesContent":["import { TdColorPickerProps } from '../../type';\n\nexport interface FormatInput {\n  key: string;\n  type: 'input';\n  flex?: number;\n}\n\nexport interface FormatInputNumber {\n  key: string;\n  min: number;\n  max: number;\n  type: 'inputNumber';\n  flex?: number;\n  format?: Function;\n}\n\nexport type FormatInputsConfig = {\n  [propName in TdColorPickerProps['format']]?: Array<FormatInput | FormatInputNumber>;\n};\n\nexport const FORMAT_INPUT_CONFIG: FormatInputsConfig = {\n  RGB: [\n    {\n      key: 'r',\n      min: 0,\n      max: 255,\n      type: 'inputNumber',\n    },\n    {\n      key: 'g',\n      min: 0,\n      max: 255,\n      type: 'inputNumber',\n    },\n    {\n      key: 'b',\n      min: 0,\n      max: 255,\n      type: 'inputNumber',\n    },\n  ],\n  HSV: [\n    {\n      key: 'h',\n      min: 0,\n      max: 360,\n      type: 'inputNumber',\n    },\n    {\n      key: 's',\n      min: 0,\n      max: 100,\n      type: 'inputNumber',\n    },\n    {\n      key: 'v',\n      min: 0,\n      max: 100,\n      type: 'inputNumber',\n    },\n  ],\n  HSL: [\n    {\n      key: 'h',\n      min: 0,\n      max: 360,\n      type: 'inputNumber',\n    },\n    {\n      key: 's',\n      min: 0,\n      max: 100,\n      type: 'inputNumber',\n    },\n    {\n      key: 'l',\n      min: 0,\n      max: 100,\n      type: 'inputNumber',\n    },\n  ],\n  CMYK: [\n    {\n      key: 'c',\n      min: 0,\n      max: 255,\n      type: 'inputNumber',\n    },\n    {\n      key: 'm',\n      min: 0,\n      max: 255,\n      type: 'inputNumber',\n    },\n    {\n      key: 'y',\n      min: 0,\n      max: 255,\n      type: 'inputNumber',\n    },\n    {\n      key: 'k',\n      min: 0,\n      max: 255,\n      type: 'inputNumber',\n    },\n  ],\n  CSS: [\n    {\n      key: 'css',\n      type: 'input',\n      flex: 3,\n    },\n  ],\n  HEX: [\n    {\n      key: 'hex',\n      type: 'input',\n      flex: 3,\n    },\n  ],\n};\n\nexport default FORMAT_INPUT_CONFIG;\n"],"mappings":";;;;;;AAqBO,IAAMA,mBAA0C;EACrDC,GAAK,GACH;IACEC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,IAAM;EACR,GACA;IACEH,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,IAAM;EACR,GACA;IACEH,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,IAAM;EACR,EACF;EACAC,GAAK,GACH;IACEJ,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,IAAM;EACR,GACA;IACEH,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,IAAM;EACR,GACA;IACEH,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,IAAM;EACR,EACF;EACAE,GAAK,GACH;IACEL,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,IAAM;EACR,GACA;IACEH,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,IAAM;EACR,GACA;IACEH,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,IAAM;EACR,EACF;EACAG,IAAM,GACJ;IACEN,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,IAAM;EACR,GACA;IACEH,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,IAAM;EACR,GACA;IACEH,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,IAAM;EACR,GACA;IACEH,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,IAAM;EACR,EACF;EACAI,GAAK,GACH;IACEP,GAAK;IACLG,IAAM;IACNK,IAAM;EACR,EACF;EACAC,GAAK,GACH;IACET,GAAK;IACLG,IAAM;IACNK,IAAM;GACR;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}