{"ast":null,"code":"import { computed } from 'vue';\nimport useCommonClassName from './use-common-classname.js';\nimport './config-context.js';\nfunction useSizeProps(size) {\n  var COMMON_SIZE_CLASS_NAMES = useCommonClassName().SIZE;\n  var className = computed(() => {\n    if (size.value in COMMON_SIZE_CLASS_NAMES) {\n      return COMMON_SIZE_CLASS_NAMES[size.value];\n    }\n    return \"\";\n  });\n  var style = computed(() => {\n    if (size.value === void 0 || size.value in COMMON_SIZE_CLASS_NAMES) {\n      return {};\n    }\n    return {\n      fontSize: size.value\n    };\n  });\n  return {\n    style,\n    className\n  };\n}\nexport default useSizeProps;","map":{"version":3,"names":["size","COMMON_SIZE_CLASS_NAMES","useCommonClassName","SIZE","className","computed","value","style","fontSize"],"sources":["../../src/utils/use-size-props.ts"],"sourcesContent":["import { computed, ComputedRef } from 'vue';\nimport useCommonClassName from './use-common-classname';\n\n// eslint-disable-next-line consistent-return\nexport default function useSizeProps(size?: ComputedRef<string | number>) {\n  const COMMON_SIZE_CLASS_NAMES = useCommonClassName().SIZE;\n\n  const className = computed(() => {\n    if (size.value in COMMON_SIZE_CLASS_NAMES) {\n      return COMMON_SIZE_CLASS_NAMES[size.value];\n    }\n    return '';\n  });\n\n  const style = computed(() => {\n    if (size.value === undefined || size.value in COMMON_SIZE_CLASS_NAMES) {\n      return {};\n    }\n    return {\n      fontSize: size.value,\n    };\n  });\n\n  return { style, className };\n}\n"],"mappings":";;;sBAIqCA,IAAA,EAAqC;MAClEC,uBAAA,GAA0BC,kBAAA,GAAqBC,IAAA;MAE/CC,SAAA,GAAYC,QAAA,CAAS,MAAM;QAC3BL,IAAA,CAAKM,KAAA,IAASL,uBAAA,EAAyB;aAClCA,uBAAA,CAAwBD,IAAA,CAAKM,KAAA;;WAE/B;;MAGHC,KAAA,GAAQF,QAAA,CAAS,MAAM;QACvBL,IAAA,CAAKM,KAAA,KAAU,UAAaN,IAAA,CAAKM,KAAA,IAASL,uBAAA,EAAyB;aAC9D;;WAEF;MACLO,QAAA,EAAUR,IAAA,CAAKM;;;SAIZ;IAAEC,KAAA;IAAOH;;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}