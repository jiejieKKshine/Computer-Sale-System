{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nvar props = {\n  autofocus: Boolean,\n  borderless: Boolean,\n  clearable: Boolean,\n  \"default\": {\n    type: [String, Function]\n  },\n  disabled: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  filter: {\n    type: Function\n  },\n  filterable: {\n    type: Boolean,\n    \"default\": true\n  },\n  highlightKeyword: {\n    type: Boolean,\n    \"default\": true\n  },\n  inputProps: {\n    type: Object\n  },\n  options: {\n    type: Array\n  },\n  panelBottomContent: {\n    type: [String, Function]\n  },\n  panelTopContent: {\n    type: [String, Function]\n  },\n  placeholder: {\n    type: String,\n    \"default\": void 0\n  },\n  popupProps: {\n    type: Object\n  },\n  readonly: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  size: {\n    type: String,\n    \"default\": \"medium\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"small\", \"medium\", \"large\"].includes(val);\n    }\n  },\n  status: {\n    type: String,\n    \"default\": \"default\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"default\", \"success\", \"warning\", \"error\"].includes(val);\n    }\n  },\n  textareaProps: {\n    type: Object\n  },\n  tips: {\n    type: [String, Function]\n  },\n  triggerElement: {\n    type: [String, Function]\n  },\n  value: {\n    type: String,\n    \"default\": void 0\n  },\n  modelValue: {\n    type: String,\n    \"default\": void 0\n  },\n  defaultValue: {\n    type: String,\n    \"default\": \"\"\n  },\n  onBlur: Function,\n  onChange: Function,\n  onClear: Function,\n  onCompositionend: Function,\n  onCompositionstart: Function,\n  onEnter: Function,\n  onFocus: Function,\n  onSelect: Function\n};\nexport { props as default };","map":{"version":3,"names":["props","autofocus","Boolean","borderless","clearable","type","String","Function","disabled","filter","filterable","highlightKeyword","inputProps","Object","options","Array","panelBottomContent","panelTopContent","placeholder","popupProps","readonly","size","validator","val","includes","status","textareaProps","tips","triggerElement","value","modelValue","defaultValue","onBlur","onChange","onClear","onCompositionend","onCompositionstart","onEnter","onFocus","onSelect"],"sources":["../../src/auto-complete/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdAutoCompleteProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 自动获取焦点 */\n  autofocus: Boolean,\n  /** 无边框模式 */\n  borderless: Boolean,\n  /** 是否允许清空 */\n  clearable: Boolean,\n  /** 触发显示联想词下拉框的元素，同 `triggerElement` */\n  default: {\n    type: [String, Function] as PropType<TdAutoCompleteProps['default']>,\n  },\n  /** 是否禁用 */\n  disabled: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 自定义过滤规则，用于对现有数据进行搜索过滤，判断是否过滤某一项数据。参数 `filterWords` 表示搜索词，`option`表示单个选项内容，返回值为 `true` 保留该选项，返回值为 `false` 则隐藏该选项。使用该方法时无需设置 `filterable` */\n  filter: {\n    type: Function as PropType<TdAutoCompleteProps['filter']>,\n  },\n  /** 是否根据输入内容过滤联想词。默认过滤规则不区分大小写，全文本任意位置匹配。如果默认搜索规则不符合业务需求，可以更为使用 `filter` 自定义过滤规则。部分场景下输入关键词和下拉联想词完全不同，此时可以设置为 `false` */\n  filterable: {\n    type: Boolean,\n    default: true,\n  },\n  /** 是否高亮联想词中和输入值的相同部分 */\n  highlightKeyword: {\n    type: Boolean,\n    default: true,\n  },\n  /** 透传 Input 组件全部特性 */\n  inputProps: {\n    type: Object as PropType<TdAutoCompleteProps['inputProps']>,\n  },\n  /** 下拉联想词列表。示例一：`['联想词一', '联想词二']`。示例二：`{ label: () => <div>联想词元素</div>, text: '用于搜索的纯联想词' }` */\n  options: {\n    type: Array as PropType<TdAutoCompleteProps['options']>,\n  },\n  /** 面板内的底部内容 */\n  panelBottomContent: {\n    type: [String, Function] as PropType<TdAutoCompleteProps['panelBottomContent']>,\n  },\n  /** 面板内的顶部内容 */\n  panelTopContent: {\n    type: [String, Function] as PropType<TdAutoCompleteProps['panelTopContent']>,\n  },\n  /** 输入框为空时的占位提示。组件本身默认值为 `undefined`，但全局配置存在默认值，不同语言全局默认值不同 */\n  placeholder: {\n    type: String,\n    default: undefined,\n  },\n  /** 透传 Popup 组件全部特性 */\n  popupProps: {\n    type: Object as PropType<TdAutoCompleteProps['popupProps']>,\n  },\n  /** 是否只读 */\n  readonly: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 组件尺寸 */\n  size: {\n    type: String as PropType<TdAutoCompleteProps['size']>,\n    default: 'medium' as TdAutoCompleteProps['size'],\n    validator(val: TdAutoCompleteProps['size']): boolean {\n      if (!val) return true;\n      return ['small', 'medium', 'large'].includes(val);\n    },\n  },\n  /** 输入框状态 */\n  status: {\n    type: String as PropType<TdAutoCompleteProps['status']>,\n    default: 'default' as TdAutoCompleteProps['status'],\n    validator(val: TdAutoCompleteProps['status']): boolean {\n      if (!val) return true;\n      return ['default', 'success', 'warning', 'error'].includes(val);\n    },\n  },\n  /** 透传 Textarea 组件全部特性 */\n  textareaProps: {\n    type: Object as PropType<TdAutoCompleteProps['textareaProps']>,\n  },\n  /** 输入框下方提示文本，会根据不同的 `status` 呈现不同的样式 */\n  tips: {\n    type: [String, Function] as PropType<TdAutoCompleteProps['tips']>,\n  },\n  /** 触发显示联想词下拉框的元素，默认为 Input 组件，可以使用 `trigger` 自定义为 Textarea 组件或其他组件 */\n  triggerElement: {\n    type: [String, Function] as PropType<TdAutoCompleteProps['triggerElement']>,\n  },\n  /** 输入框的值，即当前指定的联想词 */\n  value: {\n    type: String,\n    default: undefined,\n  },\n  modelValue: {\n    type: String,\n    default: undefined,\n  },\n  /** 输入框的值，即当前指定的联想词，非受控属性 */\n  defaultValue: {\n    type: String,\n    default: '',\n  },\n  /** 失去焦点时触发 */\n  onBlur: Function as PropType<TdAutoCompleteProps['onBlur']>,\n  /** 输入框值发生变化时触发 */\n  onChange: Function as PropType<TdAutoCompleteProps['onChange']>,\n  /** 清空按钮点击时触发 */\n  onClear: Function as PropType<TdAutoCompleteProps['onClear']>,\n  /** 中文输入结束时触发 */\n  onCompositionend: Function as PropType<TdAutoCompleteProps['onCompositionend']>,\n  /** 中文输入开始时触发 */\n  onCompositionstart: Function as PropType<TdAutoCompleteProps['onCompositionstart']>,\n  /** 回车键按下时触发 */\n  onEnter: Function as PropType<TdAutoCompleteProps['onEnter']>,\n  /** 获得焦点时触发 */\n  onFocus: Function as PropType<TdAutoCompleteProps['onFocus']>,\n  /** 选中联想词时触发 */\n  onSelect: Function as PropType<TdAutoCompleteProps['onSelect']>,\n};\n"],"mappings":";;;;;;AASA,IAAAA,KAAA,GAAe;EAEbC,SAAW,EAAAC,OAAA;EAEXC,UAAY,EAAAD,OAAA;EAEZE,SAAW,EAAAF,OAAA;EAEX,SAAS;IACPG,IAAA,EAAM,CAACC,MAAA,EAAQC,QAAQ;GACzB;EAEAC,QAAU;IACRH,IAAM,EAAAH,OAAA;IACN,WAAS;GACX;EAEAO,MAAQ;IACNJ,IAAM,EAAAE;GACR;EAEAG,UAAY;IACVL,IAAM,EAAAH,OAAA;IACN,SAAS;GACX;EAEAS,gBAAkB;IAChBN,IAAM,EAAAH,OAAA;IACN,SAAS;GACX;EAEAU,UAAY;IACVP,IAAM,EAAAQ;GACR;EAEAC,OAAS;IACPT,IAAM,EAAAU;GACR;EAEAC,kBAAoB;IAClBX,IAAA,EAAM,CAACC,MAAA,EAAQC,QAAQ;GACzB;EAEAU,eAAiB;IACfZ,IAAA,EAAM,CAACC,MAAA,EAAQC,QAAQ;GACzB;EAEAW,WAAa;IACXb,IAAM,EAAAC,MAAA;IACN,WAAS;GACX;EAEAa,UAAY;IACVd,IAAM,EAAAQ;GACR;EAEAO,QAAU;IACRf,IAAM,EAAAH,OAAA;IACN,WAAS;GACX;EAEAmB,IAAM;IACJhB,IAAM,EAAAC,MAAA;IACN,WAAS;IACTgB,SAAA,WAAAA,UAAUC,GAA2C;MACnD,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,OAAS,YAAU,OAAO,EAAEC,QAAA,CAASD,GAAG;IAClD;GACF;EAEAE,MAAQ;IACNpB,IAAM,EAAAC,MAAA;IACN,WAAS;IACTgB,SAAA,WAAAA,UAAUC,GAA6C;MACrD,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,SAAW,aAAW,WAAW,OAAO,EAAEC,QAAA,CAASD,GAAG;IAChE;GACF;EAEAG,aAAe;IACbrB,IAAM,EAAAQ;GACR;EAEAc,IAAM;IACJtB,IAAA,EAAM,CAACC,MAAA,EAAQC,QAAQ;GACzB;EAEAqB,cAAgB;IACdvB,IAAA,EAAM,CAACC,MAAA,EAAQC,QAAQ;GACzB;EAEAsB,KAAO;IACLxB,IAAM,EAAAC,MAAA;IACN,WAAS;GACX;EACAwB,UAAY;IACVzB,IAAM,EAAAC,MAAA;IACN,WAAS;GACX;EAEAyB,YAAc;IACZ1B,IAAM,EAAAC,MAAA;IACN,SAAS;GACX;EAEA0B,MAAQ,EAAAzB,QAAA;EAER0B,QAAU,EAAA1B,QAAA;EAEV2B,OAAS,EAAA3B,QAAA;EAET4B,gBAAkB,EAAA5B,QAAA;EAElB6B,kBAAoB,EAAA7B,QAAA;EAEpB8B,OAAS,EAAA9B,QAAA;EAET+B,OAAS,EAAA/B,QAAA;EAETgC,QAAU,EAAAhC;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}