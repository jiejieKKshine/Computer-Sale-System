{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, vModelCheckbox as _vModelCheckbox, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  action: \"\"\n};\nconst _hoisted_2 = {\n  for: \"checkbox\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", null, \" 你好 \", -1 /* HOISTED */)), _createCommentVNode(\" style绑定 \"), _createElementVNode(\"p\", {\n    style: _normalizeStyle({\n      color: $data.activeColor,\n      fontSize: $data.fontSize + 'px'\n    })\n  }, \"样式绑定1\", 4 /* STYLE */), _createElementVNode(\"p\", {\n    style: _normalizeStyle($data.styleObj)\n  }, \"样式绑定2\", 4 /* STYLE */), _createCommentVNode(\" 侦听器 \"), _createElementVNode(\"p\", null, _toDisplayString($data.message), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.updateHandle && $options.updateHandle(...args))\n  }, \"修改数据\"), _createCommentVNode(\" 表单数据绑定 \"), _createElementVNode(\"form\", _hoisted_1, [_createCommentVNode(\" 将输入框的文字与data中的message绑定 \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.message = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.message, void 0, {\n    lazy: true\n  }]]), _createElementVNode(\"p\", null, _toDisplayString($data.message), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    id: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.checked = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.checked]]), _createElementVNode(\"label\", _hoisted_2, _toDisplayString($data.checked), 1 /* TEXT */)]), _createCommentVNode(\" 模板引用，获取dom节点 \"), _createElementVNode(\"div\", {\n    ref: \"container\",\n    class: \"container\"\n  }, _toDisplayString($data.message), 513 /* TEXT, NEED_PATCH */), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.getElementHandle && $options.getElementHandle(...args))\n  }, \"获取元素\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["action","for","_createElementBlock","_Fragment","_createElementVNode","_createCommentVNode","style","_normalizeStyle","color","$data","activeColor","fontSize","styleObj","_toDisplayString","message","onClick","_cache","args","$options","updateHandle","_hoisted_1","type","$event","lazy","id","checked","_hoisted_2","ref","class","getElementHandle"],"sources":["E:\\三年级上册\\ComputerSale\\computersale\\src\\components\\TestDemo.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        你好\r\n    </div>\r\n    <!-- style绑定 -->\r\n    <p :style=\"{color:activeColor,fontSize:fontSize + 'px'}\">样式绑定1</p>\r\n    <p :style=\"styleObj\">样式绑定2</p>\r\n    <!-- 侦听器 -->\r\n    <p>{{ message }}</p>\r\n    <button @click=\"updateHandle\">修改数据</button>\r\n    <!-- 表单数据绑定 -->\r\n     <form action=\"\">\r\n        <!-- 将输入框的文字与data中的message绑定 -->\r\n        <input type=\"text\" v-model.lazy=\"message\">\r\n        <p>{{ message }}</p>\r\n        <input type=\"checkbox\" id=\"checkbox\" v-model=\"checked\">\r\n        <label for=\"checkbox\">{{ checked }}</label>\r\n     </form>\r\n    <!-- 模板引用，获取dom节点 -->\r\n     <div ref=\"container\" class=\"container\">{{ message }} </div>\r\n     <button @click=\"getElementHandle\">获取元素</button>\r\n</template>\r\n\r\n<script >\r\nexport default {\r\n    \r\n    data() {\r\n        return {         \r\n                activeColor: 'blue',\r\n                fontSize: 16,\r\n                styleObj: {\r\n                    color: 'red',\r\n                    fontSize: '16px'\r\n                },\r\n                message: 'Hello Vue.js!',\r\n                checked: false\r\n            }\r\n        },\r\n    methods: {\r\n        updateHandle(){\r\n            this.message = '你好'\r\n        },\r\n        getElementHandle(){\r\n            // this.$refs.container获取dom节点\r\n            this.$refs.container.innerHTML='哈哈哈哈'\r\n        }\r\n    },\r\n    watch: {\r\n        // 函数名必须与侦听的数据对象保持同名\r\n        message(newVal, oldVal) {\r\n            // 数据发生变化，自动执行函数\r\n            console.log('newVal:', newVal, 'oldVal:', oldVal)\r\n        }\r\n    }\r\n\r\n    }\r\n    \r\n \r\n </script>"],"mappings":";;EAWWA,MAAM,EAAC;AAAE;;EAKLC,GAAG,EAAC;AAAU;;uBAhB7BC,mBAAA,CAAAC,SAAA,S,0BACIC,mBAAA,CAEM,aAFD,MAEL,sBACAC,mBAAA,aAAgB,EAChBD,mBAAA,CAAkE;IAA9DE,KAAK,EALbC,eAAA;MAAAC,KAAA,EAKsBC,KAAA,CAAAC,WAAW;MAAAC,QAAA,EAAUF,KAAA,CAAAE,QAAQ;IAAA;KAAU,OAAK,kBAC9DP,mBAAA,CAA8B;IAA1BE,KAAK,EANbC,eAAA,CAMeE,KAAA,CAAAG,QAAQ;KAAE,OAAK,kBAC1BP,mBAAA,SAAY,EACZD,mBAAA,CAAoB,WAAAS,gBAAA,CAAdJ,KAAA,CAAAK,OAAO,kBACbV,mBAAA,CAA2C;IAAlCW,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;KAAE,MAAI,GAClCZ,mBAAA,YAAe,EACdD,mBAAA,CAMO,QANPgB,UAMO,GALJf,mBAAA,6BAAgC,E,gBAChCD,mBAAA,CAA0C;IAAnCiB,IAAI,EAAC,MAAM;IAb1B,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAayCb,KAAA,CAAAK,OAAO,GAAAQ,MAAA;iDAAPb,KAAA,CAAAK,OAAO,E;IAAbS,IAAI,EAAZ;EAAsB,E,IACzCnB,mBAAA,CAAoB,WAAAS,gBAAA,CAAdJ,KAAA,CAAAK,OAAO,kB,gBACbV,mBAAA,CAAuD;IAAhDiB,IAAI,EAAC,UAAU;IAACG,EAAE,EAAC,UAAU;IAf5C,uBAAAR,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAesDb,KAAA,CAAAgB,OAAO,GAAAH,MAAA;qDAAPb,KAAA,CAAAgB,OAAO,E,GACrDrB,mBAAA,CAA2C,SAA3CsB,UAA2C,EAAAb,gBAAA,CAAlBJ,KAAA,CAAAgB,OAAO,iB,GAEpCpB,mBAAA,kBAAqB,EACpBD,mBAAA,CAA2D;IAAtDuB,GAAG,EAAC,WAAW;IAACC,KAAK,EAAC;sBAAenB,KAAA,CAAAK,OAAO,gCACjDV,mBAAA,CAA+C;IAAtCW,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAW,gBAAA,IAAAX,QAAA,CAAAW,gBAAA,IAAAZ,IAAA,CAAgB;KAAE,MAAI,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}