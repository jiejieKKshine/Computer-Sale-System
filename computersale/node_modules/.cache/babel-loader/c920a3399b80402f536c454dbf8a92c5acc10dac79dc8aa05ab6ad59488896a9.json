{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\n/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport { _ as _toConsumableArray } from '../../_chunks/dep-4a990ea3.mjs';\nimport { _ as _defineProperty } from '../../_chunks/dep-fa52aa21.mjs';\nimport { toRefs, ref, shallowRef, computed, watch, h, createVNode, onUnmounted } from 'vue';\nimport { AddRectangleIcon, MinusRectangleIcon } from 'tdesign-icons-vue-next';\nimport { g as get_1 } from '../../_chunks/dep-ae202bc0.mjs';\nimport TableTreeStore from '../../_common/js/table/tree-store.mjs';\nimport useClassName from './useClassName.mjs';\nimport { renderCell } from '../tr.mjs';\nimport '../../hooks/useConfig.mjs';\nimport { useGlobalIcon } from '../../hooks/useGlobalIcon.mjs';\nimport '../../hooks/index.mjs';\nimport { useTreeDataExpand } from './useTreeDataExpand.mjs';\nimport { useConfig } from '../../config-provider/useConfig.mjs';\nimport { useTNodeDefault } from '../../hooks/tnode.mjs';\nimport '../../_chunks/dep-593f2b67.mjs';\nimport '../../_chunks/dep-4659d73b.mjs';\nimport '../../_chunks/dep-eca422c3.mjs';\nimport '../../_chunks/dep-aeaef131.mjs';\nimport '../../_chunks/dep-eae2a67e.mjs';\nimport '../../_chunks/dep-626c497d.mjs';\nimport '../../_chunks/dep-ab4bb9b8.mjs';\nimport '../../_chunks/dep-bf7257e7.mjs';\nimport '../../_chunks/dep-29ef8419.mjs';\nimport '../../_chunks/dep-6ab5363f.mjs';\nimport '../../_chunks/dep-6dc3d0e1.mjs';\nimport '../../_chunks/dep-06dcbf4c.mjs';\nimport '../../_chunks/dep-2b09875b.mjs';\nimport '../../_chunks/dep-cda4f568.mjs';\nimport '../../_chunks/dep-76958824.mjs';\nimport '../../_chunks/dep-e9841b9e.mjs';\nimport '../../_chunks/dep-7932c2e8.mjs';\nimport '../../_chunks/dep-f909a041.mjs';\nimport '../../_chunks/dep-58a62202.mjs';\nimport '../../_chunks/dep-ed41e004.mjs';\nimport '../../_chunks/dep-0e581ac0.mjs';\nimport '../../_chunks/dep-49aeee3c.mjs';\nimport '../../_chunks/dep-b5bf85f5.mjs';\nimport '../../_chunks/dep-ec0bbd9f.mjs';\nimport '../../_common/js/table/utils.mjs';\nimport '../../_chunks/dep-889e457b.mjs';\nimport '../../_common/js/log/index.mjs';\nimport '../../_common/js/log/log.mjs';\nimport '../../_chunks/dep-bb899bfd.mjs';\nimport '../../_chunks/dep-5922c8f3.mjs';\nimport '../../_chunks/dep-92f86d1d.mjs';\nimport '../../_chunks/dep-1a4bb2f2.mjs';\nimport '../../_chunks/dep-cc8ebcde.mjs';\nimport '../../_chunks/dep-f5579c03.mjs';\nimport '../../_chunks/dep-3c65fae8.mjs';\nimport '../../_chunks/dep-1b78414a.mjs';\nimport '../../_chunks/dep-d84f19b3.mjs';\nimport '../../_chunks/dep-732f0b7d.mjs';\nimport '../../_chunks/dep-03a7fb6c.mjs';\nimport '../../_chunks/dep-1b9718a2.mjs';\nimport '../../_chunks/dep-e065dc25.mjs';\nimport '../../_chunks/dep-400ec705.mjs';\nimport '../../_chunks/dep-02f9394e.mjs';\nimport '../../_chunks/dep-1725b1c7.mjs';\nimport '../../_chunks/dep-532409c5.mjs';\nimport '../../_common/js/global-config/default-config.mjs';\nimport '../../_common/js/global-config/locale/zh_CN.mjs';\nimport '../../_chunks/dep-9ed7da3e.mjs';\nimport '../../_chunks/dep-7f65fc46.mjs';\nimport '../../_chunks/dep-4f2cabb0.mjs';\nimport '../../config-provider/type.mjs';\nimport '../../_chunks/dep-03ad9cda.mjs';\nimport '../../_chunks/dep-d8a34055.mjs';\nimport '../../_chunks/dep-2f6e28a0.mjs';\nimport '../../_chunks/dep-5a17bf21.mjs';\nimport '../../_chunks/dep-4de7e2ca.mjs';\nimport '../../_chunks/dep-69e0f6fc.mjs';\nimport '../../_chunks/dep-4ec29b23.mjs';\nimport '../utils.mjs';\nimport './useFixed.mjs';\nimport '../../_chunks/dep-5efe53d1.mjs';\nimport '../../_chunks/dep-5993931e.mjs';\nimport '../../_chunks/dep-8dfc9324.mjs';\nimport '../../_chunks/dep-6a7115de.mjs';\nimport '../../_chunks/dep-4d4e2af1.mjs';\nimport '../../_chunks/dep-3c4e4325.mjs';\nimport '../../_chunks/dep-fbd4eddb.mjs';\nimport '../../_chunks/dep-88c8d9ed.mjs';\nimport '../../_common/js/utils/getScrollbarWidth.mjs';\nimport '../../_common/js/utils/helper.mjs';\nimport '../../_chunks/dep-5d3f7c0e.mjs';\nimport '../../_chunks/dep-73384992.mjs';\nimport '../../utils/dom.mjs';\nimport '../../utils/easing.mjs';\nimport '../ellipsis.mjs';\nimport '../../utils/render-tnode.mjs';\nimport '../../_chunks/dep-b91a8171.mjs';\nimport '../../_chunks/dep-bad871d5.mjs';\nimport '../../tooltip/index.mjs';\nimport '../../tooltip/tooltip.mjs';\nimport '../../_chunks/dep-88ae49da.mjs';\nimport '../../tooltip/props.mjs';\nimport '../../popup/props.mjs';\nimport '../../popup/index.mjs';\nimport '../../popup/popup.mjs';\nimport '@popperjs/core';\nimport '../../hooks/useVModel.mjs';\nimport '../../_common/js/utils/set-style.mjs';\nimport '../../popup/container.mjs';\nimport '../../hooks/useResizeObserver.mjs';\nimport '../../hooks/icon.mjs';\nimport '../../hooks/slot.mjs';\nimport '../../hooks/useCommonClassName.mjs';\nimport '../../hooks/useDefaultValue.mjs';\nimport '../../hooks/useDestroyOnClose.mjs';\nimport '../../hooks/useKeepAnimation.mjs';\nimport '../../hooks/useRipple.mjs';\nimport '../../utils/set-style.mjs';\nimport '../../hooks/useVirtualScroll.mjs';\nimport '../../hooks/useImagePreviewUrl.mjs';\nimport '../../_common/js/upload/utils.mjs';\nimport '../../utils/withInstall.mjs';\nimport './style/css.mjs';\nimport '../../popup/type.mjs';\nimport '../../tooltip/util.mjs';\nimport '../../tooltip/type.mjs';\nimport '../base-table-props.mjs';\nimport './useLazyLoad.mjs';\nimport '../../_common/js/utils/observe.mjs';\nimport './useRowspanAndColspan.mjs';\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction useTreeData(props, context) {\n  var _toRefs = toRefs(props),\n    data = _toRefs.data,\n    columns = _toRefs.columns;\n  var _useConfig = useConfig(\"table\", props.locale),\n    t = _useConfig.t,\n    globalConfig = _useConfig.globalConfig;\n  var _useGlobalIcon = useGlobalIcon({\n      AddRectangleIcon: AddRectangleIcon,\n      MinusRectangleIcon: MinusRectangleIcon\n    }),\n    AddRectangleIcon$1 = _useGlobalIcon.AddRectangleIcon,\n    MinusRectangleIcon$1 = _useGlobalIcon.MinusRectangleIcon;\n  var store = ref(new TableTreeStore());\n  var treeNodeCol = shallowRef();\n  var dataSource = ref([]);\n  var _useClassName = useClassName(),\n    tableTreeClasses = _useClassName.tableTreeClasses;\n  var renderTNode = useTNodeDefault();\n  var rowDataKeys = computed(function () {\n    var _props$tree;\n    return {\n      rowKey: props.rowKey || \"id\",\n      childrenKey: ((_props$tree = props.tree) === null || _props$tree === void 0 ? void 0 : _props$tree.childrenKey) || \"children\"\n    };\n  });\n  var _useTreeDataExpand = useTreeDataExpand(props, {\n      store: store,\n      dataSource: dataSource,\n      rowDataKeys: rowDataKeys\n    }),\n    tExpandedTreeNode = _useTreeDataExpand.tExpandedTreeNode,\n    isDefaultExpandAllExecute = _useTreeDataExpand.isDefaultExpandAllExecute,\n    isDefaultExpandedTreeNodesExecute = _useTreeDataExpand.isDefaultExpandedTreeNodesExecute,\n    expandAll = _useTreeDataExpand.expandAll,\n    foldAll = _useTreeDataExpand.foldAll,\n    updateExpandOnDataChange = _useTreeDataExpand.updateExpandOnDataChange,\n    onExpandFoldIconClick = _useTreeDataExpand.onExpandFoldIconClick;\n  var checkedColumn = computed(function () {\n    return columns.value.find(function (col) {\n      return col.colKey === \"row-select\";\n    });\n  });\n  watch(checkedColumn, function (column) {\n    if (!store.value) return;\n    store.value.updateDisabledState(dataSource.value, column, rowDataKeys.value);\n  });\n  var foldIcon = function foldIcon(context2) {\n    var params = _objectSpread(_objectSpread({}, context2), {}, {\n      type: \"fold\"\n    });\n    var defaultFoldIcon = t(globalConfig.value.treeExpandAndFoldIcon, h, params) || createVNode(MinusRectangleIcon$1, null, null);\n    return renderTNode(\"treeExpandAndFoldIcon\", {\n      defaultNode: defaultFoldIcon,\n      params: params\n    });\n  };\n  var expandIcon = function expandIcon(context2) {\n    var params = _objectSpread(_objectSpread({}, context2), {}, {\n      type: \"expand\"\n    });\n    var defaultExpandIcon = t(globalConfig.value.treeExpandAndFoldIcon, h, params) || createVNode(AddRectangleIcon$1, null, null);\n    return renderTNode(\"treeExpandAndFoldIcon\", {\n      defaultNode: defaultExpandIcon,\n      params: params\n    });\n  };\n  watch([data], function () {\n    if (props.tree) {\n      resetData(data.value);\n    } else {\n      dataSource.value = data.value;\n    }\n  }, {\n    immediate: true\n  });\n  onUnmounted(function () {\n    var _store$value$treeData;\n    if (!props.tree) return;\n    (_store$value$treeData = store.value.treeDataMap) === null || _store$value$treeData === void 0 || _store$value$treeData.clear();\n    store.value = null;\n  });\n  watch(function () {\n    var _props$tree2;\n    return [columns, (_props$tree2 = props.tree) === null || _props$tree2 === void 0 ? void 0 : _props$tree2.treeNodeColumnIndex];\n  }, function () {\n    treeNodeCol.value = getTreeNodeColumnCol();\n  }, {\n    immediate: true\n  });\n  function resetData(data2) {\n    var _tExpandedTreeNode$va;\n    var columns2 = props.columns,\n      expandedTreeNodes = props.expandedTreeNodes,\n      defaultExpandedTreeNodes = props.defaultExpandedTreeNodes,\n      tree = props.tree;\n    store.value.initialTreeStore(data2, columns2, rowDataKeys.value);\n    var defaultNeedExpand = Boolean(!isDefaultExpandedTreeNodesExecute.value && (defaultExpandedTreeNodes === null || defaultExpandedTreeNodes === void 0 ? void 0 : defaultExpandedTreeNodes.length));\n    var needExpandAll = Boolean((tree === null || tree === void 0 ? void 0 : tree.defaultExpandAll) && !isDefaultExpandAllExecute.value);\n    if ((_tExpandedTreeNode$va = tExpandedTreeNode.value) !== null && _tExpandedTreeNode$va !== void 0 && _tExpandedTreeNode$va.length && !!(expandedTreeNodes || defaultNeedExpand) || needExpandAll) {\n      updateExpandOnDataChange(data2);\n      isDefaultExpandedTreeNodesExecute.value = true;\n    } else {\n      dataSource.value = _toConsumableArray(data2);\n    }\n  }\n  function getTreeNodeStyle(level) {\n    var _props$tree3, _props$tree4;\n    if (level === void 0) return;\n    var indent = ((_props$tree3 = props.tree) === null || _props$tree3 === void 0 ? void 0 : _props$tree3.indent) === void 0 ? 24 : (_props$tree4 = props.tree) === null || _props$tree4 === void 0 ? void 0 : _props$tree4.indent;\n    return indent ? {\n      paddingLeft: \"\".concat(level * indent || 1, \"px\")\n    } : {};\n  }\n  function toggleExpandData(p, trigger) {\n    var _store$value, _props$onTreeExpandCh;\n    var currentData = _objectSpread({}, p);\n    if (p.row.VIRTUAL_SCROLL_INDEX !== void 0) {\n      currentData.rowIndex = p.row.VIRTUAL_SCROLL_INDEX;\n    }\n    dataSource.value = _toConsumableArray(store.value.toggleExpandData(currentData, dataSource.value, rowDataKeys.value));\n    var rowValue = get_1(p.row, rowDataKeys.value.rowKey);\n    var rowState = (_store$value = store.value) === null || _store$value === void 0 || (_store$value = _store$value.treeDataMap) === null || _store$value === void 0 ? void 0 : _store$value.get(rowValue);\n    (_props$onTreeExpandCh = props.onTreeExpandChange) === null || _props$onTreeExpandCh === void 0 || _props$onTreeExpandCh.call(props, {\n      row: p.row,\n      rowIndex: p.rowIndex,\n      rowState: rowState,\n      trigger: trigger\n    });\n  }\n  function getTreeNodeColumnCol() {\n    var _props$tree5;\n    var columns2 = props.columns;\n    var treeNodeColumnIndex = ((_props$tree5 = props.tree) === null || _props$tree5 === void 0 ? void 0 : _props$tree5.treeNodeColumnIndex) || 0;\n    while ((_columns2$treeNodeCol = columns2[treeNodeColumnIndex]) !== null && _columns2$treeNodeCol !== void 0 && _columns2$treeNodeCol.type || ((_columns2$treeNodeCol2 = columns2[treeNodeColumnIndex]) === null || _columns2$treeNodeCol2 === void 0 ? void 0 : _columns2$treeNodeCol2.colKey) === \"__EXPAND_ROW_ICON_COLUMN__\") {\n      var _columns2$treeNodeCol, _columns2$treeNodeCol2;\n      treeNodeColumnIndex += 1;\n    }\n    return columns2[treeNodeColumnIndex];\n  }\n  function formatTreeColumn(col) {\n    if (!props.tree || col.colKey !== treeNodeCol.value.colKey) return col;\n    var newCol = _objectSpread({}, treeNodeCol.value);\n    newCol.cell = function (h2, p) {\n      var cellInfo = renderCell(_objectSpread(_objectSpread({}, p), {}, {\n        col: _objectSpread({}, treeNodeCol.value)\n      }), context.slots, {\n        cellEmptyContent: props.cellEmptyContent\n      });\n      var currentState = store.value.treeDataMap.get(get_1(p.row, rowDataKeys.value.rowKey));\n      var colStyle = getTreeNodeStyle(currentState === null || currentState === void 0 ? void 0 : currentState.level);\n      var classes = _defineProperty({}, tableTreeClasses.inlineCol, !!col.ellipsis);\n      var childrenNodes = get_1(p.row, rowDataKeys.value.childrenKey);\n      if (childrenNodes && childrenNodes instanceof Array || childrenNodes === true) {\n        var _store$value$treeData2;\n        var iconNode = (_store$value$treeData2 = store.value.treeDataMap.get(get_1(p.row, rowDataKeys.value.rowKey))) !== null && _store$value$treeData2 !== void 0 && _store$value$treeData2.expanded ? foldIcon(p) : expandIcon(p);\n        return createVNode(\"div\", {\n          \"class\": [tableTreeClasses.col, classes],\n          \"style\": colStyle\n        }, [!!(childrenNodes.length || childrenNodes === true) && createVNode(\"span\", {\n          \"class\": tableTreeClasses.icon,\n          \"onClick\": function onClick(e) {\n            onExpandFoldIconClick(p, \"expand-fold-icon\");\n            e.stopPropagation();\n          }\n        }, [iconNode]), cellInfo]);\n      }\n      return createVNode(\"div\", {\n        \"style\": colStyle,\n        \"class\": [classes, tableTreeClasses.leafNode]\n      }, [createVNode(\"span\", {\n        \"class\": tableTreeClasses.icon\n      }, null), cellInfo]);\n    };\n    if (newCol.ellipsis === true) {\n      newCol.ellipsis = function (h2, p) {\n        return renderCell(_objectSpread(_objectSpread({}, p), {}, {\n          col: _objectSpread({}, treeNodeCol.value)\n        }), context.slots);\n      };\n    }\n    return newCol;\n  }\n  function setData(key, newRowData) {\n    var rowIndex = store.value.updateData(key, newRowData, dataSource.value, rowDataKeys.value);\n    var newData = _toConsumableArray(dataSource.value);\n    newData[rowIndex] = newRowData;\n    dataSource.value = newData;\n  }\n  function getData(key) {\n    return store.value.getData(key);\n  }\n  function remove(key) {\n    dataSource.value = _toConsumableArray(store.value.remove(key, dataSource.value, rowDataKeys.value));\n  }\n  function removeChildren(key) {\n    dataSource.value = _toConsumableArray(store.value.removeChildren(key, dataSource.value, rowDataKeys.value));\n  }\n  function appendTo() {\n    var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    var newData = arguments.length > 1 ? arguments[1] : undefined;\n    if (!key) {\n      dataSource.value = store.value.appendToRoot(newData, dataSource.value, rowDataKeys.value);\n      return;\n    }\n    dataSource.value = _toConsumableArray(store.value.appendTo(key, newData, dataSource.value, rowDataKeys.value));\n  }\n  function insertAfter(rowValue, newData) {\n    dataSource.value = _toConsumableArray(store.value.insertAfter(rowValue, newData, dataSource.value, rowDataKeys.value));\n  }\n  function insertBefore(rowValue, newData) {\n    dataSource.value = _toConsumableArray(store.value.insertBefore(rowValue, newData, dataSource.value, rowDataKeys.value));\n  }\n  function swapData(params) {\n    var r = store.value.swapData(dataSource.value, params, rowDataKeys.value);\n    if (r.result) {\n      dataSource.value = _toConsumableArray(r.dataSource);\n    } else {\n      var _props$onAbnormalDrag;\n      var params2 = {\n        code: r.code,\n        reason: r.reason\n      };\n      (_props$onAbnormalDrag = props.onAbnormalDragSort) === null || _props$onAbnormalDrag === void 0 || _props$onAbnormalDrag.call(props, params2);\n    }\n  }\n  function getTreeNode() {\n    return store.value.getTreeNode(dataSource.value, rowDataKeys.value);\n  }\n  function getTreeExpandedRow() {\n    var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"data\";\n    return store.value.getTreeExpandedRow(dataSource.value, rowDataKeys.value, type);\n  }\n  return {\n    store: store,\n    rowDataKeys: rowDataKeys,\n    dataSource: dataSource,\n    swapData: swapData,\n    setData: setData,\n    getData: getData,\n    remove: remove,\n    removeChildren: removeChildren,\n    appendTo: appendTo,\n    insertAfter: insertAfter,\n    insertBefore: insertBefore,\n    formatTreeColumn: formatTreeColumn,\n    toggleExpandData: toggleExpandData,\n    expandAll: expandAll,\n    foldAll: foldAll,\n    getTreeNode: getTreeNode,\n    resetData: resetData,\n    getTreeExpandedRow: getTreeExpandedRow,\n    onExpandFoldIconClick: onExpandFoldIconClick\n  };\n}\nexport { useTreeData as default };","map":{"version":3,"names":["useTreeData","props","context","_toRefs","toRefs","data","columns","_useConfig","useConfig","locale","t","globalConfig","_useGlobalIcon","useGlobalIcon","AddRectangleIcon","MinusRectangleIcon","AddRectangleIcon$1","MinusRectangleIcon$1","store","ref","TableTreeStore","treeNodeCol","shallowRef","dataSource","_useClassName","useClassName","tableTreeClasses","renderTNode","useTNodeDefault","rowDataKeys","computed","_props$tree","rowKey","childrenKey","tree","_useTreeDataExpand","useTreeDataExpand","tExpandedTreeNode","isDefaultExpandAllExecute","isDefaultExpandedTreeNodesExecute","expandAll","foldAll","updateExpandOnDataChange","onExpandFoldIconClick","checkedColumn","value","find","col","colKey","watch","column","updateDisabledState","foldIcon","context2","params","_objectSpread","type","defaultFoldIcon","treeExpandAndFoldIcon","h","createVNode","defaultNode","expandIcon","defaultExpandIcon","resetData","immediate","onUnmounted","_store$value$treeData","treeDataMap","clear","_props$tree2","treeNodeColumnIndex","getTreeNodeColumnCol","data2","_tExpandedTreeNode$va","columns2","expandedTreeNodes","defaultExpandedTreeNodes","initialTreeStore","defaultNeedExpand","Boolean","length","needExpandAll","defaultExpandAll","_toConsumableArray","getTreeNodeStyle","level","_props$tree3","_props$tree4","indent","paddingLeft","concat","toggleExpandData","p","trigger","_store$value","_props$onTreeExpandCh","currentData","row","VIRTUAL_SCROLL_INDEX","rowIndex","rowValue","get_1","rowState","get","onTreeExpandChange","call","_props$tree5","_columns2$treeNodeCol","_columns2$treeNodeCol2","formatTreeColumn","newCol","cell","h2","cellInfo","renderCell","slots","cellEmptyContent","currentState","colStyle","classes","_defineProperty","inlineCol","ellipsis","childrenNodes","Array","_store$value$treeData2","iconNode","expanded","icon","onClick","e","stopPropagation","leafNode","setData","key","newRowData","updateData","newData","getData","remove","removeChildren","appendTo","arguments","undefined","appendToRoot","insertAfter","insertBefore","swapData","r","result","_props$onAbnormalDrag","params2","code","reason","onAbnormalDragSort","getTreeNode","getTreeExpandedRow"],"sources":["../../../src/table/hooks/useTreeData.tsx"],"sourcesContent":["import { SetupContext, ref, watch, toRefs, onUnmounted, computed, h, shallowRef } from 'vue';\nimport {\n  AddRectangleIcon as TdAddRectangleIcon,\n  MinusRectangleIcon as TdMinusRectangleIcon,\n} from 'tdesign-icons-vue-next';\nimport get from 'lodash/get';\nimport TableTreeStore, { SwapParams } from '../../_common/js/table/tree-store';\nimport {\n  TdEnhancedTableProps,\n  PrimaryTableCol,\n  TableRowData,\n  TableRowValue,\n  TableRowState,\n  PrimaryTableCellParams,\n} from '../type';\nimport useClassName from './useClassName';\nimport { renderCell } from '../tr';\nimport { useConfig } from '../../hooks/useConfig';\nimport { useGlobalIcon } from '../../hooks/useGlobalIcon';\nimport { useTNodeDefault } from '../../hooks';\nimport useTreeDataExpand from './useTreeDataExpand';\n\nexport default function useTreeData(props: TdEnhancedTableProps, context: SetupContext) {\n  const { data, columns } = toRefs(props);\n  const { t, globalConfig } = useConfig('table', props.locale);\n  const { AddRectangleIcon, MinusRectangleIcon } = useGlobalIcon({\n    AddRectangleIcon: TdAddRectangleIcon,\n    MinusRectangleIcon: TdMinusRectangleIcon,\n  });\n\n  const store = ref(new TableTreeStore());\n  const treeNodeCol = shallowRef<PrimaryTableCol>();\n  const dataSource = ref<TdEnhancedTableProps['data']>([]);\n  const { tableTreeClasses } = useClassName();\n  const renderTNode = useTNodeDefault();\n\n  const rowDataKeys = computed(() => ({\n    rowKey: props.rowKey || 'id',\n    childrenKey: props.tree?.childrenKey || 'children',\n  }));\n\n  const {\n    tExpandedTreeNode,\n    isDefaultExpandAllExecute,\n    isDefaultExpandedTreeNodesExecute,\n    expandAll,\n    foldAll,\n    updateExpandOnDataChange,\n    onExpandFoldIconClick,\n  } = useTreeDataExpand(props, { store, dataSource, rowDataKeys });\n\n  const checkedColumn = computed(() => columns.value.find((col) => col.colKey === 'row-select'));\n\n  watch(checkedColumn, (column) => {\n    if (!store.value) return;\n    store.value.updateDisabledState(dataSource.value, column, rowDataKeys.value);\n  });\n\n  const foldIcon = (context: PrimaryTableCellParams<TableRowData>) => {\n    const params = { ...context, type: 'fold' };\n    const defaultFoldIcon = t(globalConfig.value.treeExpandAndFoldIcon, h, params) || <MinusRectangleIcon />;\n    return renderTNode('treeExpandAndFoldIcon', {\n      defaultNode: defaultFoldIcon,\n      params,\n    });\n  };\n\n  const expandIcon = (context: PrimaryTableCellParams<TableRowData>) => {\n    const params = { ...context, type: 'expand' };\n    const defaultExpandIcon = t(globalConfig.value.treeExpandAndFoldIcon, h, params) || <AddRectangleIcon />;\n    return renderTNode('treeExpandAndFoldIcon', {\n      defaultNode: defaultExpandIcon,\n      params,\n    });\n  };\n\n  watch(\n    [data],\n    () => {\n      if (props.tree) {\n        resetData(data.value);\n      } else {\n        dataSource.value = data.value;\n      }\n    },\n    { immediate: true },\n  );\n\n  // 不能启用这部分代码。如果启用，会导致选中树形结构子节点时数据被重置，全部节点收起\n  // watch([columns, rowDataKeys], ([columns, rowDataKeys]) => {\n  //   store.value.initialTreeStore(data.value, columns, rowDataKeys);\n  // });\n\n  onUnmounted(() => {\n    if (!props.tree) return;\n    store.value.treeDataMap?.clear();\n    store.value = null;\n  });\n\n  watch(\n    () => [columns, props.tree?.treeNodeColumnIndex],\n    () => {\n      treeNodeCol.value = getTreeNodeColumnCol();\n    },\n    { immediate: true },\n  );\n\n  function resetData(data: TableRowData[]) {\n    const { columns, expandedTreeNodes, defaultExpandedTreeNodes, tree } = props;\n    store.value.initialTreeStore(data, columns, rowDataKeys.value);\n    const defaultNeedExpand = Boolean(!isDefaultExpandedTreeNodesExecute.value && defaultExpandedTreeNodes?.length);\n    const needExpandAll = Boolean(tree?.defaultExpandAll && !isDefaultExpandAllExecute.value);\n    if ((tExpandedTreeNode.value?.length && !!(expandedTreeNodes || defaultNeedExpand)) || needExpandAll) {\n      updateExpandOnDataChange(data);\n      isDefaultExpandedTreeNodesExecute.value = true;\n    } else {\n      dataSource.value = [...data];\n    }\n  }\n\n  function getTreeNodeStyle(level: number) {\n    if (level === undefined) return;\n    const indent = props.tree?.indent === undefined ? 24 : props.tree?.indent;\n    // 默认 1px 是为了临界省略\n    return indent ? { paddingLeft: `${level * indent || 1}px` } : {};\n  }\n\n  /**\n   * 组件实例方法，展开或收起某一行\n   * @param p 行数据\n   */\n  function toggleExpandData(p: { row: TableRowData; rowIndex: number }, trigger?: 'expand-fold-icon' | 'row-click') {\n    const currentData = { ...p };\n    if (p.row.VIRTUAL_SCROLL_INDEX !== undefined) {\n      currentData.rowIndex = p.row.VIRTUAL_SCROLL_INDEX;\n    }\n    dataSource.value = [...store.value.toggleExpandData(currentData, dataSource.value, rowDataKeys.value)];\n    const rowValue = get(p.row, rowDataKeys.value.rowKey);\n    const rowState = store.value?.treeDataMap?.get(rowValue);\n    props.onTreeExpandChange?.({\n      row: p.row,\n      rowIndex: p.rowIndex,\n      rowState,\n      trigger,\n    });\n  }\n\n  function getTreeNodeColumnCol() {\n    const { columns } = props;\n    let treeNodeColumnIndex = props.tree?.treeNodeColumnIndex || 0;\n    // type 存在，则表示表格内部渲染的特殊列，比如：展开行按钮、复选框、单选按钮等，不能作为树结点列。因此树结点展开列向后顺移\n    while (\n      columns[treeNodeColumnIndex]?.type ||\n      columns[treeNodeColumnIndex]?.colKey === '__EXPAND_ROW_ICON_COLUMN__'\n    ) {\n      treeNodeColumnIndex += 1;\n    }\n    return columns[treeNodeColumnIndex];\n  }\n\n  function formatTreeColumn(col: PrimaryTableCol): PrimaryTableCol {\n    if (!props.tree || col.colKey !== treeNodeCol.value.colKey) return col;\n    const newCol = { ...treeNodeCol.value };\n    newCol.cell = (h, p) => {\n      const cellInfo = renderCell({ ...p, col: { ...treeNodeCol.value } }, context.slots, {\n        cellEmptyContent: props.cellEmptyContent,\n      });\n      const currentState = store.value.treeDataMap.get(get(p.row, rowDataKeys.value.rowKey));\n      const colStyle = getTreeNodeStyle(currentState?.level);\n      const classes = { [tableTreeClasses.inlineCol]: !!col.ellipsis };\n      const childrenNodes = get(p.row, rowDataKeys.value.childrenKey);\n      if ((childrenNodes && childrenNodes instanceof Array) || childrenNodes === true) {\n        const iconNode = store.value.treeDataMap.get(get(p.row, rowDataKeys.value.rowKey))?.expanded\n          ? foldIcon(p)\n          : expandIcon(p);\n        return (\n          <div class={[tableTreeClasses.col, classes]} style={colStyle}>\n            {!!(childrenNodes.length || childrenNodes === true) && (\n              <span\n                class={tableTreeClasses.icon}\n                onClick={(e: MouseEvent) => {\n                  onExpandFoldIconClick(p, 'expand-fold-icon');\n                  e.stopPropagation();\n                }}\n              >\n                {iconNode}\n              </span>\n            )}\n            {cellInfo}\n          </div>\n        );\n      }\n      return (\n        <div style={colStyle} class={[classes, tableTreeClasses.leafNode]}>\n          <span class={tableTreeClasses.icon}></span>\n          {cellInfo}\n        </div>\n      );\n    };\n    // 树形节点会显示操作符号 [+] 和 [-]，但省略显示的浮层中不需要操作符\n    if (newCol.ellipsis === true) {\n      newCol.ellipsis = (h, p) => renderCell({ ...p, col: { ...treeNodeCol.value } }, context.slots);\n    }\n    return newCol;\n  }\n\n  /**\n   * 对外暴露的组件实例方法，设置行数据，自动刷新界面\n   * @param key 当前行唯一标识值\n   * @param newRowData 新行数据\n   */\n  function setData<T>(key: TableRowValue, newRowData: T) {\n    const rowIndex = store.value.updateData(key, newRowData, dataSource.value, rowDataKeys.value);\n    const newData = [...dataSource.value];\n    newData[rowIndex] = newRowData;\n    dataSource.value = newData;\n  }\n\n  /**\n   * 对外暴露的组件实例方法，获取当前行全部数据\n   * @param key 行唯一标识\n   * @returns {TableRowState} 当前行数据\n   */\n  function getData(key: TableRowValue): TableRowState {\n    return store.value.getData(key);\n  }\n\n  /**\n   * 对外暴露的组件实例方法，移除指定节点\n   * @param key 行唯一标识\n   */\n  function remove(key: TableRowValue) {\n    // 引用传值，可自动更新 dataSource。（dataSource 本是内部变量，可以在任何地方进行任何改变）\n    dataSource.value = [...store.value.remove(key, dataSource.value, rowDataKeys.value)];\n  }\n\n  /**\n   * 移除子节点\n   * @param key 行唯一标识\n   */\n  function removeChildren(key: TableRowValue) {\n    dataSource.value = [...store.value.removeChildren(key, dataSource.value, rowDataKeys.value)];\n  }\n\n  /**\n   * 对外暴露的组件实例方法，为当前节点添加子节点，默认添加到最后一个节点\n   * @param key 当前节点唯一标识，值为空，则表示给根节点添加元素\n   * @param newData 待添加的新节点\n   */\n  function appendTo<T>(key: TableRowValue = '', newData: T | T[]) {\n    if (!key) {\n      dataSource.value = store.value.appendToRoot(newData, dataSource.value, rowDataKeys.value);\n      return;\n    }\n    // 引用传值，可自动更新 dataSource。（dataSource 本是内部变量，可以在任何地方进行任何改变）\n    dataSource.value = [...store.value.appendTo(key, newData, dataSource.value, rowDataKeys.value)];\n  }\n\n  /**\n   * 对外暴露的组件实例方法，当前节点之后，插入节点\n   */\n  function insertAfter<T>(rowValue: TableRowValue, newData: T) {\n    dataSource.value = [...store.value.insertAfter(rowValue, newData, dataSource.value, rowDataKeys.value)];\n  }\n\n  /**\n   * 对外暴露的组件实例方法，当前节点之后，插入节点\n   */\n  function insertBefore<T>(rowValue: TableRowValue, newData: T) {\n    dataSource.value = [...store.value.insertBefore(rowValue, newData, dataSource.value, rowDataKeys.value)];\n  }\n\n  /**\n   * 对外暴露的组件实例方法，交换行数据\n   */\n  function swapData(params: SwapParams<TableRowData>) {\n    const r = store.value.swapData(dataSource.value, params, rowDataKeys.value);\n    if (r.result) {\n      dataSource.value = [...r.dataSource];\n    } else {\n      const params = {\n        code: r.code,\n        reason: r.reason,\n      };\n      props.onAbnormalDragSort?.(params);\n    }\n  }\n\n  /**\n   * 对外暴露的组件实例方法，获取全部数据的树形结构\n   * @param key 节点唯一标识\n   */\n  function getTreeNode() {\n    return store.value.getTreeNode(dataSource.value, rowDataKeys.value);\n  }\n\n  /**\n   * 对外暴露的组件实例方法，获取树形结构展开的节点\n   */\n  function getTreeExpandedRow(type: 'unique' | 'data' | 'all' = 'data') {\n    return store.value.getTreeExpandedRow(dataSource.value, rowDataKeys.value, type);\n  }\n\n  return {\n    store,\n    rowDataKeys,\n    dataSource,\n    swapData,\n    setData,\n    getData,\n    remove,\n    removeChildren,\n    appendTo,\n    insertAfter,\n    insertBefore,\n    formatTreeColumn,\n    toggleExpandData,\n    expandAll,\n    foldAll,\n    getTreeNode,\n    resetData,\n    getTreeExpandedRow,\n    onExpandFoldIconClick,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}