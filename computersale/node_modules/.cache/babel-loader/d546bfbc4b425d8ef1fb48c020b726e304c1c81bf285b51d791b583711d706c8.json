{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nvar props = {\n  attach: {\n    type: [String, Function]\n  },\n  body: {\n    type: [String, Function]\n  },\n  cancelBtn: {\n    type: [String, Object, Function]\n  },\n  closeBtn: {\n    type: [String, Boolean, Function]\n  },\n  closeOnEscKeydown: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  closeOnOverlayClick: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  confirmBtn: {\n    type: [String, Object, Function]\n  },\n  \"default\": {\n    type: [String, Function]\n  },\n  destroyOnClose: Boolean,\n  footer: {\n    type: [Boolean, Function],\n    \"default\": true\n  },\n  header: {\n    type: [String, Boolean, Function],\n    \"default\": true\n  },\n  mode: {\n    type: String,\n    \"default\": \"overlay\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"overlay\", \"push\"].includes(val);\n    }\n  },\n  placement: {\n    type: String,\n    \"default\": \"right\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"left\", \"right\", \"top\", \"bottom\"].includes(val);\n    }\n  },\n  preventScrollThrough: {\n    type: Boolean,\n    \"default\": true\n  },\n  showInAttachedElement: Boolean,\n  showOverlay: {\n    type: Boolean,\n    \"default\": true\n  },\n  size: {\n    type: String,\n    \"default\": void 0\n  },\n  sizeDraggable: {\n    type: [Boolean, Object],\n    \"default\": false\n  },\n  visible: Boolean,\n  zIndex: {\n    type: Number\n  },\n  onBeforeClose: Function,\n  onBeforeOpen: Function,\n  onCancel: Function,\n  onClose: Function,\n  onCloseBtnClick: Function,\n  onConfirm: Function,\n  onEscKeydown: Function,\n  onOverlayClick: Function,\n  onSizeDragEnd: Function\n};\nexport { props as default };","map":{"version":3,"names":["props","attach","type","String","Function","body","cancelBtn","Object","closeBtn","Boolean","closeOnEscKeydown","closeOnOverlayClick","confirmBtn","destroyOnClose","footer","header","mode","validator","val","includes","placement","preventScrollThrough","showInAttachedElement","showOverlay","size","sizeDraggable","visible","zIndex","Number","onBeforeClose","onBeforeOpen","onCancel","onClose","onCloseBtnClick","onConfirm","onEscKeydown","onOverlayClick","onSizeDragEnd"],"sources":["../../src/drawer/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdDrawerProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 抽屉挂载的节点，默认挂在组件本身的位置。数据类型为 String 时，会被当作选择器处理，进行节点查询。示例：'body' 或 () => document.body */\n  attach: {\n    type: [String, Function] as PropType<TdDrawerProps['attach']>,\n  },\n  /** 抽屉内容 */\n  body: {\n    type: [String, Function] as PropType<TdDrawerProps['body']>,\n  },\n  /** 取消按钮，可自定义。值为 null 则不显示取消按钮。值类型为字符串，则表示自定义按钮文本，值类型为 Object 则表示透传 Button 组件属性。使用 TNode 自定义按钮时，需自行控制取消事件 */\n  cancelBtn: {\n    type: [String, Object, Function] as PropType<TdDrawerProps['cancelBtn']>,\n  },\n  /** 关闭按钮，可以自定义。值为 true 显示默认关闭按钮，值为 false 不显示关闭按钮。值类型为 string 则直接显示值，如：“关闭”。值类型为 TNode，则表示呈现自定义按钮示例 */\n  closeBtn: {\n    type: [String, Boolean, Function] as PropType<TdDrawerProps['closeBtn']>,\n  },\n  /** 按下 ESC 时是否触发抽屉关闭事件 */\n  closeOnEscKeydown: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 点击蒙层时是否触发抽屉关闭事件 */\n  closeOnOverlayClick: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 确认按钮。值类型为字符串，则表示自定义按钮文本，值类型为 Object 则表示透传 Button 组件属性。使用 TNode 自定义按钮时，需自行控制确认事件 */\n  confirmBtn: {\n    type: [String, Object, Function] as PropType<TdDrawerProps['confirmBtn']>,\n  },\n  /** 抽屉内容，同 body */\n  default: {\n    type: [String, Function] as PropType<TdDrawerProps['default']>,\n  },\n  /** 抽屉关闭时是否销毁节点 */\n  destroyOnClose: Boolean,\n  /** 底部操作栏，默认会有“确认”和“取消”两个按钮。值为 true 显示默认操作按钮，值为 false 或 null 不显示任何内容，值类型为 TNode 表示自定义底部内容 */\n  footer: {\n    type: [Boolean, Function] as PropType<TdDrawerProps['footer']>,\n    default: true as TdDrawerProps['footer'],\n  },\n  /** 头部内容。值为 true 显示空白头部，值为 false 不显示头部，值类型为 string 则直接显示值，值类型为 TNode 表示自定义头部内容 */\n  header: {\n    type: [String, Boolean, Function] as PropType<TdDrawerProps['header']>,\n    default: true as TdDrawerProps['header'],\n  },\n  /** 展开方式，有两种：直接展示在内容上方 和 推开内容区域 */\n  mode: {\n    type: String as PropType<TdDrawerProps['mode']>,\n    default: 'overlay' as TdDrawerProps['mode'],\n    validator(val: TdDrawerProps['mode']): boolean {\n      if (!val) return true;\n      return ['overlay', 'push'].includes(val);\n    },\n  },\n  /** 抽屉方向 */\n  placement: {\n    type: String as PropType<TdDrawerProps['placement']>,\n    default: 'right' as TdDrawerProps['placement'],\n    validator(val: TdDrawerProps['placement']): boolean {\n      if (!val) return true;\n      return ['left', 'right', 'top', 'bottom'].includes(val);\n    },\n  },\n  /** 防止滚动穿透 */\n  preventScrollThrough: {\n    type: Boolean,\n    default: true,\n  },\n  /** 仅在挂载元素中显示抽屉，默认在浏览器可视区域显示。父元素需要有定位属性，如：position: relative */\n  showInAttachedElement: Boolean,\n  /** 是否显示遮罩层 */\n  showOverlay: {\n    type: Boolean,\n    default: true,\n  },\n  /** 尺寸，支持 'small', 'medium', 'large'，'35px', '30%',  '3em' 等。纵向抽屉调整的是抽屉宽度，横向抽屉调整的是抽屉高度 */\n  size: {\n    type: String,\n    default: undefined,\n  },\n  /** 抽屉大小可拖拽调整，横向抽屉调整宽度，纵向抽屉调整高度。`sizeDraggable.max` 和 `sizeDraggable.min` 用于控制拖拽尺寸大小限制 */\n  sizeDraggable: {\n    type: [Boolean, Object] as PropType<TdDrawerProps['sizeDraggable']>,\n    default: false as TdDrawerProps['sizeDraggable'],\n  },\n  /** 组件是否可见 */\n  visible: Boolean,\n  /** 抽屉层级，样式默认为 1500 */\n  zIndex: {\n    type: Number,\n  },\n  /** 抽屉执行关闭动画效果前触发 */\n  onBeforeClose: Function as PropType<TdDrawerProps['onBeforeClose']>,\n  /** 抽屉执行打开动画效果前触发 */\n  onBeforeOpen: Function as PropType<TdDrawerProps['onBeforeOpen']>,\n  /** 如果“取消”按钮存在，点击“取消”按钮时触发，同时触发关闭事件 */\n  onCancel: Function as PropType<TdDrawerProps['onCancel']>,\n  /** 关闭事件，取消按钮点击时、关闭按钮点击时、ESC 按下时、点击蒙层时均会触发 */\n  onClose: Function as PropType<TdDrawerProps['onClose']>,\n  /** 如果关闭按钮存在，点击关闭按钮时触发该事件，同时触发关闭事件 */\n  onCloseBtnClick: Function as PropType<TdDrawerProps['onCloseBtnClick']>,\n  /** 如果“确认”按钮存在，则点击“确认”按钮时触发 */\n  onConfirm: Function as PropType<TdDrawerProps['onConfirm']>,\n  /** 按下 ESC 键时触发 */\n  onEscKeydown: Function as PropType<TdDrawerProps['onEscKeydown']>,\n  /** 如果蒙层存在，点击蒙层时触发 */\n  onOverlayClick: Function as PropType<TdDrawerProps['onOverlayClick']>,\n  /** 抽屉大小拖拽结束时触发，事件参数 `size` 在横向抽屉中表示宽度，在纵向抽屉中表示高度 */\n  onSizeDragEnd: Function as PropType<TdDrawerProps['onSizeDragEnd']>,\n};\n"],"mappings":";;;;;;AASA,IAAAA,KAAA,GAAe;EAEbC,MAAQ;IACNC,IAAA,EAAM,CAACC,MAAA,EAAQC,QAAQ;GACzB;EAEAC,IAAM;IACJH,IAAA,EAAM,CAACC,MAAA,EAAQC,QAAQ;GACzB;EAEAE,SAAW;IACTJ,IAAM,GAACC,MAAQ,EAAAI,MAAA,EAAQH,QAAQ;GACjC;EAEAI,QAAU;IACRN,IAAM,GAACC,MAAQ,EAAAM,OAAA,EAASL,QAAQ;GAClC;EAEAM,iBAAmB;IACjBR,IAAM,EAAAO,OAAA;IACN,WAAS;GACX;EAEAE,mBAAqB;IACnBT,IAAM,EAAAO,OAAA;IACN,WAAS;GACX;EAEAG,UAAY;IACVV,IAAM,GAACC,MAAQ,EAAAI,MAAA,EAAQH,QAAQ;GACjC;EAEA,SAAS;IACPF,IAAA,EAAM,CAACC,MAAA,EAAQC,QAAQ;GACzB;EAEAS,cAAgB,EAAAJ,OAAA;EAEhBK,MAAQ;IACNZ,IAAA,EAAM,CAACO,OAAA,EAASL,QAAQ;IACxB,SAAS;GACX;EAEAW,MAAQ;IACNb,IAAM,GAACC,MAAQ,EAAAM,OAAA,EAASL,QAAQ;IAChC,SAAS;GACX;EAEAY,IAAM;IACJd,IAAM,EAAAC,MAAA;IACN,WAAS;IACTc,SAAA,WAAAA,UAAUC,GAAqC;MAC7C,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,WAAW,MAAM,EAAEC,QAAA,CAASD,GAAG;IACzC;GACF;EAEAE,SAAW;IACTlB,IAAM,EAAAC,MAAA;IACN,WAAS;IACTc,SAAA,WAAAA,UAAUC,GAA0C;MAClD,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,MAAQ,WAAS,OAAO,QAAQ,EAAEC,QAAA,CAASD,GAAG;IACxD;GACF;EAEAG,oBAAsB;IACpBnB,IAAM,EAAAO,OAAA;IACN,SAAS;GACX;EAEAa,qBAAuB,EAAAb,OAAA;EAEvBc,WAAa;IACXrB,IAAM,EAAAO,OAAA;IACN,SAAS;GACX;EAEAe,IAAM;IACJtB,IAAM,EAAAC,MAAA;IACN,WAAS;GACX;EAEAsB,aAAe;IACbvB,IAAA,EAAM,CAACO,OAAA,EAASF,MAAM;IACtB,SAAS;GACX;EAEAmB,OAAS,EAAAjB,OAAA;EAETkB,MAAQ;IACNzB,IAAM,EAAA0B;GACR;EAEAC,aAAe,EAAAzB,QAAA;EAEf0B,YAAc,EAAA1B,QAAA;EAEd2B,QAAU,EAAA3B,QAAA;EAEV4B,OAAS,EAAA5B,QAAA;EAET6B,eAAiB,EAAA7B,QAAA;EAEjB8B,SAAW,EAAA9B,QAAA;EAEX+B,YAAc,EAAA/B,QAAA;EAEdgC,cAAgB,EAAAhC,QAAA;EAEhBiC,aAAe,EAAAjC;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}