{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport { _ as _slicedToArray } from '../_chunks/dep-5efe53d1.mjs';\nimport { toRefs, ref, computed, nextTick, inject, watch } from 'vue';\nimport { FormItemInjectionKey } from '../form/const.mjs';\nimport useVModel from '../hooks/useVModel.mjs';\nimport { useDisabled } from '../hooks/useDisabled.mjs';\nimport useLengthLimit from './useLengthLimit.mjs';\nimport { useReadonly } from '../hooks/useReadonly.mjs';\nimport '../_chunks/dep-593f2b67.mjs';\nimport '../hooks/index.mjs';\nimport '../hooks/icon.mjs';\nimport '../_chunks/dep-06dcbf4c.mjs';\nimport '../_chunks/dep-eca422c3.mjs';\nimport '../_chunks/dep-bf7257e7.mjs';\nimport '../_chunks/dep-4659d73b.mjs';\nimport '../_chunks/dep-2b09875b.mjs';\nimport '../_chunks/dep-cda4f568.mjs';\nimport '../hooks/slot.mjs';\nimport '../_chunks/dep-eae2a67e.mjs';\nimport '../utils/render-tnode.mjs';\nimport '../_chunks/dep-b91a8171.mjs';\nimport '../_chunks/dep-1b78414a.mjs';\nimport '../_chunks/dep-1a4bb2f2.mjs';\nimport '../_chunks/dep-cc8ebcde.mjs';\nimport '../_chunks/dep-76958824.mjs';\nimport '../_chunks/dep-29ef8419.mjs';\nimport '../_chunks/dep-f5579c03.mjs';\nimport '../_chunks/dep-6dc3d0e1.mjs';\nimport '../_chunks/dep-d84f19b3.mjs';\nimport '../_chunks/dep-3c65fae8.mjs';\nimport '../_chunks/dep-626c497d.mjs';\nimport '../_chunks/dep-03a7fb6c.mjs';\nimport '../_chunks/dep-03ad9cda.mjs';\nimport '../_chunks/dep-7932c2e8.mjs';\nimport '../_chunks/dep-ab4bb9b8.mjs';\nimport '../_chunks/dep-d8a34055.mjs';\nimport '../_chunks/dep-2f6e28a0.mjs';\nimport '../_chunks/dep-5a17bf21.mjs';\nimport '../_chunks/dep-bad871d5.mjs';\nimport '../hooks/tnode.mjs';\nimport '../hooks/useConfig.mjs';\nimport '../config-provider/useConfig.mjs';\nimport '../_chunks/dep-bb899bfd.mjs';\nimport '../_chunks/dep-5922c8f3.mjs';\nimport '../_chunks/dep-92f86d1d.mjs';\nimport '../_chunks/dep-6ab5363f.mjs';\nimport '../_chunks/dep-e9841b9e.mjs';\nimport '../_chunks/dep-49aeee3c.mjs';\nimport '../_chunks/dep-b5bf85f5.mjs';\nimport '../_chunks/dep-ec0bbd9f.mjs';\nimport '../_chunks/dep-732f0b7d.mjs';\nimport '../_chunks/dep-1b9718a2.mjs';\nimport '../_chunks/dep-e065dc25.mjs';\nimport '../_chunks/dep-400ec705.mjs';\nimport '../_chunks/dep-02f9394e.mjs';\nimport '../_chunks/dep-1725b1c7.mjs';\nimport '../_chunks/dep-532409c5.mjs';\nimport '../_common/js/global-config/default-config.mjs';\nimport '../_common/js/global-config/locale/zh_CN.mjs';\nimport '../_chunks/dep-9ed7da3e.mjs';\nimport '../_chunks/dep-7f65fc46.mjs';\nimport '../_chunks/dep-4f2cabb0.mjs';\nimport '../config-provider/type.mjs';\nimport '../hooks/useCommonClassName.mjs';\nimport '../hooks/useDefaultValue.mjs';\nimport '../hooks/useDestroyOnClose.mjs';\nimport '../hooks/useKeepAnimation.mjs';\nimport '../hooks/useRipple.mjs';\nimport '../utils/set-style.mjs';\nimport '../hooks/useVirtualScroll.mjs';\nimport '../_chunks/dep-fa52aa21.mjs';\nimport '../hooks/useImagePreviewUrl.mjs';\nimport '../_common/js/upload/utils.mjs';\nimport '../_common/js/log/log.mjs';\nimport '../_chunks/dep-df472119.mjs';\nimport '../_common/js/log/index.mjs';\nimport '../_common/js/utils/helper.mjs';\nimport '../_chunks/dep-4a990ea3.mjs';\nimport '../_chunks/dep-5d3f7c0e.mjs';\nimport '../_chunks/dep-73384992.mjs';\nimport '../_chunks/dep-58a62202.mjs';\nimport '../_chunks/dep-889e457b.mjs';\nfunction getOutputValue(val, type) {\n  if (type === \"number\") {\n    return val || val === 0 ? Number(val) : void 0;\n  }\n  return val;\n}\nfunction useInput(props, expose) {\n  var _toRefs = toRefs(props),\n    value = _toRefs.value,\n    modelValue = _toRefs.modelValue;\n  var inputValue = ref();\n  var isComposition = ref(false);\n  var compositionValue = ref();\n  var clearIconRef = ref(null);\n  var innerClickElement = ref();\n  var disabled = useDisabled();\n  var readonly = useReadonly();\n  var _useVModel = useVModel(value, modelValue, props.defaultValue, props.onChange),\n    _useVModel2 = _slicedToArray(_useVModel, 2),\n    innerValue = _useVModel2[0],\n    setInnerValue = _useVModel2[1];\n  var isHover = ref(false);\n  var focused = ref(false);\n  var renderType = ref(props.type);\n  var inputRef = ref(null);\n  var limitParams = computed(function () {\n    return {\n      value: [void 0, null].includes(innerValue.value) ? void 0 : String(innerValue.value),\n      status: props.status,\n      maxlength: Number(props.maxlength),\n      maxcharacter: props.maxcharacter,\n      allowInputOverMax: props.allowInputOverMax,\n      onValidate: props.onValidate\n    };\n  });\n  var _useLengthLimit = useLengthLimit(limitParams),\n    limitNumber = _useLengthLimit.limitNumber,\n    getValueByLimitNumber = _useLengthLimit.getValueByLimitNumber,\n    tStatus = _useLengthLimit.tStatus;\n  var showClear = computed(function () {\n    return (innerValue.value && !disabled.value && props.clearable && !readonly.value || props.showClearIconOnEmpty) && isHover.value;\n  });\n  var focus = function focus() {\n    var _inputRef$value;\n    focused.value = true;\n    (_inputRef$value = inputRef.value) === null || _inputRef$value === void 0 || _inputRef$value.focus();\n  };\n  var blur = function blur() {\n    var _inputRef$value2;\n    focused.value = false;\n    (_inputRef$value2 = inputRef.value) === null || _inputRef$value2 === void 0 || _inputRef$value2.blur();\n  };\n  var emitFocus = function emitFocus(e) {\n    var _props$onFocus;\n    if (isHover.value && focused.value) return;\n    inputValue.value = innerValue.value;\n    if (props.disabled) return;\n    focused.value = true;\n    (_props$onFocus = props.onFocus) === null || _props$onFocus === void 0 || _props$onFocus.call(props, innerValue.value, {\n      e: e\n    });\n  };\n  var emitClear = function emitClear(_ref) {\n    var _props$onClear;\n    var e = _ref.e;\n    var val = props.type === \"number\" ? void 0 : \"\";\n    setInnerValue(val, {\n      e: e,\n      trigger: \"clear\"\n    });\n    (_props$onClear = props.onClear) === null || _props$onClear === void 0 || _props$onClear.call(props, {\n      e: e\n    });\n  };\n  var onClearIconMousedown = function onClearIconMousedown(e) {\n    innerClickElement.value = e.target;\n  };\n  var emitPassword = function emitPassword() {\n    if (disabled.value) return;\n    var toggleType = renderType.value === \"password\" ? \"text\" : \"password\";\n    renderType.value = toggleType;\n  };\n  var setInputElValue = function setInputElValue() {\n    var v = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    var inputEl = inputRef.value;\n    if (!inputEl) return;\n    var sV = String(v);\n    if (!inputEl.value) {\n      return;\n    }\n    if (inputEl.value !== sV) {\n      inputEl.value = sV;\n    }\n  };\n  var inputValueChangeHandle = function inputValueChangeHandle(e) {\n    var _innerValue$value;\n    var target = e.target;\n    var val = target.value;\n    if (props.type !== \"number\" && typeof innerValue.value === \"string\" && val.length > ((_innerValue$value = innerValue.value) === null || _innerValue$value === void 0 ? void 0 : _innerValue$value.length)) {\n      val = getValueByLimitNumber(val);\n    }\n    setInnerValue(getOutputValue(val, props.type), {\n      e: e,\n      trigger: \"input\"\n    });\n    nextTick(function () {\n      if (props.type === \"number\" && /\\.(\\d+)?0$/.test(val)) {\n        setInputElValue(val);\n      } else {\n        setInputElValue(innerValue.value);\n      }\n    });\n  };\n  var handleInput = function handleInput(e) {\n    var checkInputType = e.inputType && e.inputType === \"insertCompositionText\";\n    var val = e.currentTarget.value;\n    if (checkInputType || isComposition.value) {\n      compositionValue.value = val;\n      return;\n    }\n    inputValueChangeHandle(e);\n  };\n  var isClearIcon = function isClearIcon() {\n    var _clearIconRef$value;\n    var tmp = innerClickElement.value;\n    if (!tmp || !tmp.tagName || !((_clearIconRef$value = clearIconRef.value) !== null && _clearIconRef$value !== void 0 && _clearIconRef$value.$el) || ![\"path\", \"svg\"].includes(tmp.tagName)) return false;\n    while (tmp) {\n      var _clearIconRef$value2;\n      if (((_clearIconRef$value2 = clearIconRef.value) === null || _clearIconRef$value2 === void 0 ? void 0 : _clearIconRef$value2.$el) === tmp) {\n        return true;\n      }\n      tmp = tmp.parentNode;\n    }\n    return false;\n  };\n  var formItem = inject(FormItemInjectionKey, void 0);\n  var formatAndEmitBlur = function formatAndEmitBlur(e) {\n    if (!isClearIcon()) {\n      var _props$onBlur;\n      if (props.format) {\n        inputValue.value = typeof innerValue.value === \"number\" || props.type === \"number\" ? innerValue.value : props.format(innerValue.value);\n      }\n      focused.value = false;\n      (_props$onBlur = props.onBlur) === null || _props$onBlur === void 0 || _props$onBlur.call(props, innerValue.value, {\n        e: e\n      });\n      formItem === null || formItem === void 0 || formItem.handleBlur();\n    } else {\n      focus();\n    }\n  };\n  var onHandleCompositionend = function onHandleCompositionend(e) {\n    var _props$onCompositione;\n    isComposition.value = false;\n    compositionValue.value = \"\";\n    inputValueChangeHandle(e);\n    (_props$onCompositione = props.onCompositionend) === null || _props$onCompositione === void 0 || _props$onCompositione.call(props, String(innerValue.value), {\n      e: e\n    });\n  };\n  var onHandleCompositionstart = function onHandleCompositionstart(e) {\n    var _props$onCompositions;\n    isComposition.value = true;\n    var value2 = e.currentTarget.value;\n    compositionValue.value = value2;\n    (_props$onCompositions = props.onCompositionstart) === null || _props$onCompositions === void 0 || _props$onCompositions.call(props, String(innerValue.value), {\n      e: e\n    });\n  };\n  var onRootClick = function onRootClick(e) {\n    var _inputRef$value3, _props$onClick;\n    (_inputRef$value3 = inputRef.value) === null || _inputRef$value3 === void 0 || _inputRef$value3.focus();\n    (_props$onClick = props.onClick) === null || _props$onClick === void 0 || _props$onClick.call(props, {\n      e: e\n    });\n  };\n  watch(function () {\n    return props.autofocus;\n  }, function (value2) {\n    if (value2 === true) {\n      nextTick(function () {\n        var _inputRef$value4;\n        (_inputRef$value4 = inputRef.value) === null || _inputRef$value4 === void 0 || _inputRef$value4.focus();\n      });\n    }\n  }, {\n    immediate: true\n  });\n  watch(innerValue, function (val, oldVal) {\n    var isNumberType = props.type === \"number\";\n    if (oldVal === void 0 && props.format && typeof val !== \"number\" && !isNumberType) {\n      inputValue.value = props.format(val);\n    } else {\n      inputValue.value = val;\n    }\n    var newVal = typeof val === \"number\" ? val : getValueByLimitNumber(val);\n    if (newVal !== val && !isNumberType) {\n      setInnerValue(newVal, {\n        trigger: \"initial\"\n      });\n    }\n  }, {\n    immediate: true\n  });\n  watch(function () {\n    return props.type;\n  }, function (v) {\n    renderType.value = v;\n  }, {\n    immediate: true\n  });\n  expose({\n    inputRef: inputRef,\n    focus: focus,\n    blur: blur\n  });\n  return {\n    isHover: isHover,\n    focused: focused,\n    renderType: renderType,\n    showClear: showClear,\n    inputRef: inputRef,\n    clearIconRef: clearIconRef,\n    inputValue: inputValue,\n    isComposition: isComposition,\n    compositionValue: compositionValue,\n    limitNumber: limitNumber,\n    tStatus: tStatus,\n    emitFocus: emitFocus,\n    formatAndEmitBlur: formatAndEmitBlur,\n    onHandleCompositionend: onHandleCompositionend,\n    onHandleCompositionstart: onHandleCompositionstart,\n    onRootClick: onRootClick,\n    emitPassword: emitPassword,\n    handleInput: handleInput,\n    emitClear: emitClear,\n    onClearIconMousedown: onClearIconMousedown,\n    innerValue: innerValue\n  };\n}\nexport { useInput as default, getOutputValue };","map":{"version":3,"names":["getOutputValue","val","type","Number","useInput","props","expose","_toRefs","toRefs","value","modelValue","inputValue","ref","isComposition","compositionValue","clearIconRef","innerClickElement","disabled","useDisabled","readonly","useReadonly","_useVModel","useVModel","defaultValue","onChange","_useVModel2","_slicedToArray","innerValue","setInnerValue","isHover","focused","renderType","inputRef","limitParams","computed","includes","String","status","maxlength","maxcharacter","allowInputOverMax","onValidate","_useLengthLimit","useLengthLimit","limitNumber","getValueByLimitNumber","tStatus","showClear","clearable","showClearIconOnEmpty","focus","_inputRef$value","blur","_inputRef$value2","emitFocus","e","_props$onFocus","onFocus","call","emitClear","_ref","_props$onClear","trigger","onClear","onClearIconMousedown","target","emitPassword","toggleType","setInputElValue","v","arguments","length","undefined","inputEl","sV","inputValueChangeHandle","_innerValue$value","nextTick","test","handleInput","checkInputType","inputType","currentTarget","isClearIcon","_clearIconRef$value","tmp","tagName","$el","_clearIconRef$value2","parentNode","formItem","inject","FormItemInjectionKey","formatAndEmitBlur","_props$onBlur","format","onBlur","handleBlur","onHandleCompositionend","_props$onCompositione","onCompositionend","onHandleCompositionstart","_props$onCompositions","value2","onCompositionstart","onRootClick","_inputRef$value3","_props$onClick","onClick","watch","autofocus","_inputRef$value4","immediate","oldVal","isNumberType","newVal"],"sources":["../../src/input/useInput.ts"],"sourcesContent":["import { ref, computed, watch, nextTick, toRefs, inject } from 'vue';\nimport { InputValue, TdInputProps } from './type';\nimport { FormItemInjectionKey } from '../form/const';\nimport useVModel from '../hooks/useVModel';\nimport { useDisabled } from '../hooks/useDisabled';\nimport useLengthLimit from './useLengthLimit';\nimport { useReadonly } from '../hooks/useReadonly';\n\nexport function getOutputValue(val: InputValue, type: TdInputProps['type']) {\n  if (type === 'number') {\n    return val || val === 0 ? Number(val) : undefined;\n  }\n  return val;\n}\n\nexport interface ExtendsTdInputProps extends TdInputProps {\n  showInput: boolean;\n  keepWrapperWidth: boolean;\n}\n\nexport default function useInput(props: ExtendsTdInputProps, expose: (exposed: Record<string, any>) => void) {\n  const { value, modelValue } = toRefs(props);\n  const inputValue = ref<InputValue>();\n  const isComposition = ref(false);\n  const compositionValue = ref<InputValue>();\n  const clearIconRef = ref(null);\n  const innerClickElement = ref();\n  const disabled = useDisabled();\n  const readonly = useReadonly();\n  const [innerValue, setInnerValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n\n  const isHover = ref(false);\n  const focused = ref(false);\n  const renderType = ref(props.type);\n  const inputRef = ref<HTMLInputElement>(null);\n\n  const limitParams = computed(() => ({\n    value: [undefined, null].includes(innerValue.value) ? undefined : String(innerValue.value),\n    status: props.status,\n    maxlength: Number(props.maxlength),\n    maxcharacter: props.maxcharacter,\n    allowInputOverMax: props.allowInputOverMax,\n    onValidate: props.onValidate,\n  }));\n  const { limitNumber, getValueByLimitNumber, tStatus } = useLengthLimit(limitParams);\n\n  const showClear = computed(() => {\n    return (\n      ((innerValue.value && !disabled.value && props.clearable && !readonly.value) || props.showClearIconOnEmpty) &&\n      isHover.value\n    );\n  });\n\n  const focus = () => {\n    focused.value = true;\n    inputRef.value?.focus();\n  };\n\n  const blur = () => {\n    focused.value = false;\n    inputRef.value?.blur();\n  };\n\n  const emitFocus = (e: FocusEvent) => {\n    if (isHover.value && focused.value) return;\n    inputValue.value = innerValue.value;\n    if (props.disabled) return;\n    focused.value = true;\n    props.onFocus?.(innerValue.value, { e });\n  };\n\n  const emitClear = ({ e }: { e: MouseEvent }) => {\n    const val = props.type === 'number' ? undefined : '';\n    setInnerValue(val, { e, trigger: 'clear' });\n    props.onClear?.({ e });\n  };\n\n  const onClearIconMousedown = (e: MouseEvent) => {\n    innerClickElement.value = e.target;\n  };\n\n  const emitPassword = () => {\n    if (disabled.value) return;\n    const toggleType = renderType.value === 'password' ? 'text' : 'password';\n    renderType.value = toggleType;\n  };\n\n  const setInputElValue = (v: InputValue = '') => {\n    const inputEl = inputRef.value as HTMLInputElement;\n    if (!inputEl) return;\n    const sV = String(v);\n    if (!inputEl.value) {\n      return;\n    }\n    if (inputEl.value !== sV) {\n      inputEl.value = sV;\n    }\n  };\n  const inputValueChangeHandle = (e: InputEvent | CompositionEvent) => {\n    const { target } = e;\n    let val = (target as HTMLInputElement).value;\n    // over length: allow delete; not add\n    if (props.type !== 'number' && typeof innerValue.value === 'string' && val.length > innerValue.value?.length) {\n      val = getValueByLimitNumber(val);\n    }\n    setInnerValue(getOutputValue(val, props.type), { e, trigger: 'input' });\n    // 受控\n    nextTick(() => {\n      // type = 'number'时, 解决小数点后面有 0 自动删除的问题\n      if (props.type === 'number' && /\\.(\\d+)?0$/.test(val)) {\n        setInputElValue(val);\n      } else {\n        setInputElValue(innerValue.value);\n      }\n    });\n  };\n\n  const handleInput = (e: InputEvent) => {\n    const checkInputType = e.inputType && e.inputType === 'insertCompositionText';\n    const {\n      currentTarget: { value: val },\n    }: any = e;\n    if (checkInputType || isComposition.value) {\n      compositionValue.value = val;\n      return;\n    }\n    inputValueChangeHandle(e);\n  };\n\n  const isClearIcon = () => {\n    let tmp = innerClickElement.value;\n    if (!tmp || !tmp.tagName || !clearIconRef.value?.$el || !['path', 'svg'].includes(tmp.tagName)) return false;\n    while (tmp) {\n      if (clearIconRef.value?.$el === tmp) {\n        return true;\n      }\n      tmp = tmp.parentNode;\n    }\n    return false;\n  };\n\n  const formItem = inject(FormItemInjectionKey, undefined);\n  const formatAndEmitBlur = (e: FocusEvent) => {\n    if (!isClearIcon()) {\n      if (props.format) {\n        inputValue.value =\n          typeof innerValue.value === 'number' || props.type === 'number'\n            ? innerValue.value\n            : props.format(innerValue.value);\n      }\n      focused.value = false;\n      props.onBlur?.(innerValue.value, { e });\n      formItem?.handleBlur();\n    } else {\n      focus();\n    }\n  };\n\n  const onHandleCompositionend = (e: CompositionEvent) => {\n    isComposition.value = false;\n    compositionValue.value = '';\n    inputValueChangeHandle(e);\n    props.onCompositionend?.(String(innerValue.value), { e });\n  };\n\n  const onHandleCompositionstart = (e: CompositionEvent) => {\n    isComposition.value = true;\n    const {\n      currentTarget: { value },\n    }: any = e;\n    compositionValue.value = value;\n    props.onCompositionstart?.(String(innerValue.value), { e });\n  };\n\n  const onRootClick = (e: MouseEvent) => {\n    inputRef.value?.focus();\n    props.onClick?.({ e });\n  };\n\n  watch(\n    () => props.autofocus,\n    (value) => {\n      if (value === true) {\n        nextTick(() => {\n          inputRef.value?.focus();\n        });\n      }\n    },\n    { immediate: true },\n  );\n\n  watch(\n    innerValue,\n    (val, oldVal) => {\n      const isNumberType = props.type === 'number';\n      // 初始化时，如果有 format 函数，需要对 value 进行格式化\n      if (oldVal === undefined && props.format && typeof val !== 'number' && !isNumberType) {\n        inputValue.value = props.format(val);\n      } else {\n        inputValue.value = val;\n      }\n      // limit props value\n      const newVal = typeof val === 'number' ? val : getValueByLimitNumber(val);\n      if (newVal !== val && !isNumberType) {\n        setInnerValue(newVal, { trigger: 'initial' });\n      }\n    },\n    { immediate: true },\n  );\n\n  watch(\n    () => props.type,\n    (v) => {\n      renderType.value = v;\n    },\n    { immediate: true },\n  );\n\n  expose({\n    inputRef,\n    focus,\n    blur,\n  });\n\n  return {\n    isHover,\n    focused,\n    renderType,\n    showClear,\n    inputRef,\n    clearIconRef,\n    inputValue,\n    isComposition,\n    compositionValue,\n    limitNumber,\n    tStatus,\n    emitFocus,\n    formatAndEmitBlur,\n    onHandleCompositionend,\n    onHandleCompositionstart,\n    onRootClick,\n    emitPassword,\n    handleInput,\n    emitClear,\n    onClearIconMousedown,\n    innerValue,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}