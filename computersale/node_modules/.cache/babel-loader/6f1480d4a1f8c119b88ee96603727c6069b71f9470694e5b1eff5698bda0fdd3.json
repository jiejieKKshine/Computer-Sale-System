{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nvar props = {\n  animation: {\n    type: String,\n    \"default\": \"slide\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"slide\", \"fade\"].includes(val);\n    }\n  },\n  autoplay: {\n    type: Boolean,\n    \"default\": true\n  },\n  current: {\n    type: Number,\n    \"default\": 0\n  },\n  defaultCurrent: {\n    type: Number,\n    \"default\": 0\n  },\n  direction: {\n    type: String,\n    \"default\": \"horizontal\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"horizontal\", \"vertical\"].includes(val);\n    }\n  },\n  duration: {\n    type: Number,\n    \"default\": 300\n  },\n  height: {\n    type: Number\n  },\n  interval: {\n    type: Number,\n    \"default\": 5e3\n  },\n  loop: {\n    type: Boolean,\n    \"default\": true\n  },\n  navigation: {\n    type: [Object, Function]\n  },\n  stopOnHover: {\n    type: Boolean,\n    \"default\": true\n  },\n  theme: {\n    type: String,\n    \"default\": \"light\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"light\", \"dark\"].includes(val);\n    }\n  },\n  trigger: {\n    type: String,\n    \"default\": \"hover\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"hover\", \"click\"].includes(val);\n    }\n  },\n  type: {\n    type: String,\n    \"default\": \"default\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"default\", \"card\"].includes(val);\n    }\n  },\n  onChange: Function\n};\nexport { props as default };","map":{"version":3,"names":["props","animation","type","String","validator","val","includes","autoplay","Boolean","current","Number","defaultCurrent","direction","duration","height","interval","loop","navigation","Object","Function","stopOnHover","theme","trigger","onChange"],"sources":["../../src/swiper/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * updated at 2021-12-12 19:17:30\n * */\n\nimport { TdSwiperProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 轮播切换动画效果类型：滑动、淡入淡出等 */\n  animation: {\n    type: String as PropType<TdSwiperProps['animation']>,\n    default: 'slide' as TdSwiperProps['animation'],\n    validator(val: TdSwiperProps['animation']): boolean {\n      if (!val) return true;\n      return ['slide', 'fade'].includes(val);\n    },\n  },\n  /** 是否自动播放 */\n  autoplay: {\n    type: Boolean,\n    default: true,\n  },\n  /** 当前轮播在哪一项（下标） */\n  current: {\n    type: Number,\n    default: 0,\n  },\n  /** 当前轮播在哪一项（下标），非受控属性 */\n  defaultCurrent: {\n    type: Number,\n    default: 0,\n  },\n  /** 轮播滑动方向，包括横向滑动和纵向滑动两个方向 */\n  direction: {\n    type: String as PropType<TdSwiperProps['direction']>,\n    default: 'horizontal' as TdSwiperProps['direction'],\n    validator(val: TdSwiperProps['direction']): boolean {\n      if (!val) return true;\n      return ['horizontal', 'vertical'].includes(val);\n    },\n  },\n  /** 滑动动画时长 */\n  duration: {\n    type: Number,\n    default: 300,\n  },\n  /** 当使用垂直方向滚动时的高度 */\n  height: {\n    type: Number,\n  },\n  /** 轮播间隔时间 */\n  interval: {\n    type: Number,\n    default: 5000,\n  },\n  /** 是否循环播放 */\n  loop: {\n    type: Boolean,\n    default: true,\n  },\n  /** 导航器全部配置 */\n  navigation: {\n    type: [Object, Function] as PropType<TdSwiperProps['navigation']>,\n  },\n  /** 是否悬浮时停止轮播 */\n  stopOnHover: {\n    type: Boolean,\n    default: true,\n  },\n  /** 深色模式和浅色模式 */\n  theme: {\n    type: String as PropType<TdSwiperProps['theme']>,\n    default: 'light' as TdSwiperProps['theme'],\n    validator(val: TdSwiperProps['theme']): boolean {\n      if (!val) return true;\n      return ['light', 'dark'].includes(val);\n    },\n  },\n  /** 触发切换的方式：悬浮、点击等 */\n  trigger: {\n    type: String as PropType<TdSwiperProps['trigger']>,\n    default: 'hover' as TdSwiperProps['trigger'],\n    validator(val: TdSwiperProps['trigger']): boolean {\n      if (!val) return true;\n      return ['hover', 'click'].includes(val);\n    },\n  },\n  /** 样式类型：默认样式、卡片样式 */\n  type: {\n    type: String as PropType<TdSwiperProps['type']>,\n    default: 'default' as TdSwiperProps['type'],\n    validator(val: TdSwiperProps['type']): boolean {\n      if (!val) return true;\n      return ['default', 'card'].includes(val);\n    },\n  },\n  /** 轮播切换时触发 */\n  onChange: Function as PropType<TdSwiperProps['onChange']>,\n};\n"],"mappings":";;;;;;AAUA,IAAAA,KAAA,GAAe;EAEbC,SAAW;IACTC,IAAM,EAAAC,MAAA;IACN,WAAS;IACTC,SAAA,WAAAA,UAAUC,GAA0C;MAClD,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,SAAS,MAAM,EAAEC,QAAA,CAASD,GAAG;IACvC;GACF;EAEAE,QAAU;IACRL,IAAM,EAAAM,OAAA;IACN,SAAS;GACX;EAEAC,OAAS;IACPP,IAAM,EAAAQ,MAAA;IACN,SAAS;GACX;EAEAC,cAAgB;IACdT,IAAM,EAAAQ,MAAA;IACN,SAAS;GACX;EAEAE,SAAW;IACTV,IAAM,EAAAC,MAAA;IACN,WAAS;IACTC,SAAA,WAAAA,UAAUC,GAA0C;MAClD,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,cAAc,UAAU,EAAEC,QAAA,CAASD,GAAG;IAChD;GACF;EAEAQ,QAAU;IACRX,IAAM,EAAAQ,MAAA;IACN,SAAS;GACX;EAEAI,MAAQ;IACNZ,IAAM,EAAAQ;GACR;EAEAK,QAAU;IACRb,IAAM,EAAAQ,MAAA;IACN,SAAS;GACX;EAEAM,IAAM;IACJd,IAAM,EAAAM,OAAA;IACN,SAAS;GACX;EAEAS,UAAY;IACVf,IAAA,EAAM,CAACgB,MAAA,EAAQC,QAAQ;GACzB;EAEAC,WAAa;IACXlB,IAAM,EAAAM,OAAA;IACN,SAAS;GACX;EAEAa,KAAO;IACLnB,IAAM,EAAAC,MAAA;IACN,WAAS;IACTC,SAAA,WAAAA,UAAUC,GAAsC;MAC9C,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,SAAS,MAAM,EAAEC,QAAA,CAASD,GAAG;IACvC;GACF;EAEAiB,OAAS;IACPpB,IAAM,EAAAC,MAAA;IACN,WAAS;IACTC,SAAA,WAAAA,UAAUC,GAAwC;MAChD,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,SAAS,OAAO,EAAEC,QAAA,CAASD,GAAG;IACxC;GACF;EAEAH,IAAM;IACJA,IAAM,EAAAC,MAAA;IACN,WAAS;IACTC,SAAA,WAAAA,UAAUC,GAAqC;MAC7C,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,WAAW,MAAM,EAAEC,QAAA,CAASD,GAAG;IACzC;GACF;EAEAkB,QAAU,EAAAJ;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}