{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\n/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport { _ as _slicedToArray } from '../../_chunks/dep-5efe53d1.mjs';\nimport { _ as _toConsumableArray } from '../../_chunks/dep-4a990ea3.mjs';\nimport { _ as _defineProperty } from '../../_chunks/dep-fa52aa21.mjs';\nimport { toRefs, ref, computed, h, watch } from 'vue';\nimport Sortable from 'sortablejs';\nimport { i as isFunction_1 } from '../../_chunks/dep-06dcbf4c.mjs';\nimport useClassName from './useClassName.mjs';\nimport '../../_common/js/log/index.mjs';\nimport { hasClass } from '../../utils/dom.mjs';\nimport swapDragArrayElement from '../../_common/js/utils/swapDragArrayElement.mjs';\nimport { getColumnDataByKey, getColumnIndexByKey } from '../../_common/js/table/utils.mjs';\nimport log from '../../_common/js/log/log.mjs';\nimport '../../_chunks/dep-593f2b67.mjs';\nimport '../../_chunks/dep-4659d73b.mjs';\nimport '../../_chunks/dep-eca422c3.mjs';\nimport '../../_chunks/dep-bf7257e7.mjs';\nimport '../../_chunks/dep-2b09875b.mjs';\nimport '../../_chunks/dep-cda4f568.mjs';\nimport '../../hooks/useConfig.mjs';\nimport '../../config-provider/useConfig.mjs';\nimport '../../_chunks/dep-bb899bfd.mjs';\nimport '../../_chunks/dep-5922c8f3.mjs';\nimport '../../_chunks/dep-92f86d1d.mjs';\nimport '../../_chunks/dep-6ab5363f.mjs';\nimport '../../_chunks/dep-6dc3d0e1.mjs';\nimport '../../_chunks/dep-76958824.mjs';\nimport '../../_chunks/dep-e9841b9e.mjs';\nimport '../../_chunks/dep-1a4bb2f2.mjs';\nimport '../../_chunks/dep-cc8ebcde.mjs';\nimport '../../_chunks/dep-29ef8419.mjs';\nimport '../../_chunks/dep-f5579c03.mjs';\nimport '../../_chunks/dep-49aeee3c.mjs';\nimport '../../_chunks/dep-b5bf85f5.mjs';\nimport '../../_chunks/dep-3c65fae8.mjs';\nimport '../../_chunks/dep-eae2a67e.mjs';\nimport '../../_chunks/dep-626c497d.mjs';\nimport '../../_chunks/dep-ec0bbd9f.mjs';\nimport '../../_chunks/dep-1b78414a.mjs';\nimport '../../_chunks/dep-d84f19b3.mjs';\nimport '../../_chunks/dep-732f0b7d.mjs';\nimport '../../_chunks/dep-03a7fb6c.mjs';\nimport '../../_chunks/dep-1b9718a2.mjs';\nimport '../../_chunks/dep-e065dc25.mjs';\nimport '../../_chunks/dep-400ec705.mjs';\nimport '../../_chunks/dep-02f9394e.mjs';\nimport '../../_chunks/dep-1725b1c7.mjs';\nimport '../../_chunks/dep-532409c5.mjs';\nimport '../../_common/js/global-config/default-config.mjs';\nimport '../../_common/js/global-config/locale/zh_CN.mjs';\nimport '../../_chunks/dep-9ed7da3e.mjs';\nimport '../../_chunks/dep-7f65fc46.mjs';\nimport '../../_chunks/dep-4f2cabb0.mjs';\nimport '../../config-provider/type.mjs';\nimport '../../utils/easing.mjs';\nimport '../../_chunks/dep-889e457b.mjs';\nimport '../../_chunks/dep-ae202bc0.mjs';\nimport '../../_chunks/dep-aeaef131.mjs';\nimport '../../_chunks/dep-ab4bb9b8.mjs';\nimport '../../_chunks/dep-7932c2e8.mjs';\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction removeNode(node) {\n  if (node.parentElement !== null) {\n    node.parentElement.removeChild(node);\n  }\n}\nfunction insertNodeAt(fatherNode, node, position) {\n  var refNode = position === 0 ? fatherNode.children[0] : fatherNode.children[position - 1].nextSibling;\n  fatherNode.insertBefore(node, refNode);\n}\nfunction useDragSort(props, context, params) {\n  var _toRefs = toRefs(props),\n    sortOnRowDraggable = _toRefs.sortOnRowDraggable,\n    dragSort = _toRefs.dragSort,\n    data = _toRefs.data;\n  var innerPagination = ref(props.pagination);\n  var _useClassName = useClassName(),\n    tableDraggableClasses = _useClassName.tableDraggableClasses,\n    tableBaseClass = _useClassName.tableBaseClass,\n    tableFullRowClasses = _useClassName.tableFullRowClasses,\n    tableExpandClasses = _useClassName.tableExpandClasses;\n  var columns = ref(props.columns || []);\n  var primaryTableRef = ref(null);\n  var dragCol = computed(function () {\n    return columns.value.find(function (item) {\n      return item.colKey === \"drag\";\n    });\n  });\n  var isRowDraggable = computed(function () {\n    return sortOnRowDraggable.value || [\"row\", \"row-handler-col\"].includes(dragSort.value);\n  });\n  var isRowHandlerDraggable = computed(function () {\n    return [\"row-handler\", \"row-handler-col\"].includes(dragSort.value) && !!dragCol.value;\n  });\n  var isColDraggable = computed(function () {\n    return [\"col\", \"row-handler-col\"].includes(dragSort.value);\n  });\n  if (props.sortOnRowDraggable) {\n    log.error(\"Table\", \"`sortOnRowDraggable` is going to be deprecated, use dragSort='row' instead.\");\n  }\n  function getDataPageIndex(index, pagination) {\n    var _pagination$current, _pagination$pageSize;\n    var current = (_pagination$current = pagination.current) !== null && _pagination$current !== void 0 ? _pagination$current : pagination.defaultCurrent;\n    var pageSize = (_pagination$pageSize = pagination.pageSize) !== null && _pagination$pageSize !== void 0 ? _pagination$pageSize : pagination.defaultPageSize;\n    if (!props.disableDataPage && pagination && data.value.length > pageSize) {\n      return pageSize * (current - 1) + index;\n    }\n    return index;\n  }\n  var registerRowDragEvent = function registerRowDragEvent(element) {\n    if (!isRowHandlerDraggable.value && !isRowDraggable.value) return;\n    var dragContainer = element === null || element === void 0 ? void 0 : element.querySelector(\"tbody\");\n    if (!dragContainer) {\n      console.error(\"tbody does not exist.\");\n      return null;\n    }\n    var baseOptions = _objectSpread({\n      animation: 150,\n      ghostClass: tableDraggableClasses.ghost,\n      chosenClass: tableDraggableClasses.chosen,\n      dragClass: tableDraggableClasses.dragging,\n      filter: \".\".concat(tableFullRowClasses.base, \",.\").concat(tableExpandClasses.row),\n      onMove: function onMove(evt) {\n        return !hasClass(evt.related, tableFullRowClasses.base);\n      },\n      onEnd: function onEnd(evt) {\n        var _props$onDragSort;\n        if (evt.newIndex === evt.oldIndex) return;\n        removeNode(evt.item);\n        insertNodeAt(evt.from, evt.item, evt.oldIndex);\n        var currentIndex = evt.oldIndex,\n          targetIndex = evt.newIndex;\n        if (isFunction_1(props.firstFullRow) && props.firstFullRow(h) || context.slots.firstFullRow || context.slots[\"first-full-row\"]) {\n          currentIndex -= 1;\n          targetIndex -= 1;\n        }\n        if (innerPagination.value) {\n          currentIndex = getDataPageIndex(currentIndex, innerPagination.value);\n          targetIndex = getDataPageIndex(targetIndex, innerPagination.value);\n        }\n        var params2 = {\n          data: data.value,\n          currentIndex: currentIndex,\n          current: data.value[currentIndex],\n          targetIndex: targetIndex,\n          target: data.value[targetIndex],\n          newData: swapDragArrayElement(_toConsumableArray(props.data), currentIndex, targetIndex),\n          e: evt,\n          sort: \"row\"\n        };\n        params2.currentData = params2.newData;\n        (_props$onDragSort = props.onDragSort) === null || _props$onDragSort === void 0 || _props$onDragSort.call(props, params2);\n      }\n    }, props.dragSortOptions);\n    if (!dragContainer) return;\n    if (isRowDraggable.value) {\n      new Sortable(dragContainer, _objectSpread({}, baseOptions));\n    } else {\n      new Sortable(dragContainer, _objectSpread(_objectSpread({}, baseOptions), {}, {\n        handle: \".\".concat(tableDraggableClasses.handle)\n      }));\n    }\n  };\n  var registerOneLevelColDragEvent = function registerOneLevelColDragEvent(container, recover) {\n    var options = _objectSpread({\n      animation: 150,\n      dataIdAttr: \"data-colkey\",\n      direction: \"vertical\",\n      ghostClass: tableDraggableClasses.ghost,\n      chosenClass: tableDraggableClasses.chosen,\n      dragClass: tableDraggableClasses.dragging,\n      handle: \".\".concat(tableBaseClass.thCellInner),\n      onEnd: function onEnd(evt) {\n        var _props$onDragSort2;\n        if (evt.newIndex === evt.oldIndex) return;\n        if (recover) {\n          removeNode(evt.item);\n          insertNodeAt(evt.from, evt.item, evt.oldIndex);\n        }\n        var oldIndex = evt.oldIndex,\n          newIndex = evt.newIndex,\n          targetElement = evt.target;\n        var currentIndex = recover ? oldIndex : newIndex;\n        var targetIndex = recover ? newIndex : oldIndex;\n        var oldElement = targetElement.children[currentIndex];\n        var newElement = targetElement.children[targetIndex];\n        var current = getColumnDataByKey(columns.value, oldElement.dataset.colkey);\n        var target = getColumnDataByKey(columns.value, newElement.dataset.colkey);\n        if (!current || !current.colKey) {\n          log.error(\"Table\", \"colKey is missing in \".concat(JSON.stringify(current)));\n        }\n        if (!target || !target.colKey) {\n          log.error(\"Table\", \"colKey is missing in \".concat(JSON.stringify(target)));\n        }\n        currentIndex = getColumnIndexByKey(props.columns, current.colKey);\n        targetIndex = getColumnIndexByKey(props.columns, target.colKey);\n        var params2 = {\n          data: columns.value,\n          currentIndex: currentIndex,\n          current: current,\n          targetIndex: targetIndex,\n          target: target,\n          newData: swapDragArrayElement(_toConsumableArray(props.columns), currentIndex, targetIndex),\n          e: evt,\n          sort: \"col\"\n        };\n        params2.currentData = params2.newData;\n        (_props$onDragSort2 = props.onDragSort) === null || _props$onDragSort2 === void 0 || _props$onDragSort2.call(props, params2);\n      }\n    }, props.dragSortOptions);\n    if (!container) return;\n    new Sortable(container, options);\n  };\n  var registerColDragEvent = function registerColDragEvent(tableElement) {\n    if (!isColDraggable.value || !tableElement) return;\n    var trList = tableElement.querySelectorAll(\"thead > tr\");\n    if (trList.length <= 1) {\n      var _trList = _slicedToArray(trList, 1),\n        container = _trList[0];\n      registerOneLevelColDragEvent(container, true);\n    } else {\n      trList === null || trList === void 0 || trList.forEach(function (container) {\n        registerOneLevelColDragEvent(container, false);\n      });\n    }\n  };\n  function setDragSortPrimaryTableRef(primaryTableElement) {\n    primaryTableRef.value = primaryTableElement;\n  }\n  function setDragSortColumns(val) {\n    columns.value = val;\n  }\n  watch([primaryTableRef, columns, dragSort, params], function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 4),\n      val = _ref2[0],\n      columns2 = _ref2[1],\n      dragSort2 = _ref2[2],\n      params2 = _ref2[3];\n    register(val, params2);\n  });\n  function register(val, params2) {\n    var primaryTableCmp = val;\n    if (!val || !primaryTableCmp.$el || !params2.showElement) return;\n    var timerA = setTimeout(function () {\n      registerRowDragEvent(primaryTableCmp.$el);\n      registerColDragEvent(primaryTableCmp.$el);\n      var timer = setTimeout(function () {\n        if (primaryTableCmp.$refs.affixHeaderRef) {\n          registerColDragEvent(primaryTableCmp.$refs.affixHeaderRef);\n        }\n        clearTimeout(timer);\n      });\n      clearTimeout(timerA);\n    }, 60);\n  }\n  return {\n    innerPagination: innerPagination,\n    isRowDraggable: isRowDraggable,\n    isRowHandlerDraggable: isRowHandlerDraggable,\n    isColDraggable: isColDraggable,\n    setDragSortPrimaryTableRef: setDragSortPrimaryTableRef,\n    setDragSortColumns: setDragSortColumns\n  };\n}\nexport { useDragSort as default };","map":{"version":3,"names":["removeNode","node","parentElement","removeChild","insertNodeAt","fatherNode","position","refNode","children","nextSibling","insertBefore","useDragSort","props","context","params","_toRefs","toRefs","sortOnRowDraggable","dragSort","data","innerPagination","ref","pagination","_useClassName","useClassName","tableDraggableClasses","tableBaseClass","tableFullRowClasses","tableExpandClasses","columns","primaryTableRef","dragCol","computed","value","find","item","colKey","isRowDraggable","includes","isRowHandlerDraggable","isColDraggable","log","error","getDataPageIndex","index","_pagination$current","_pagination$pageSize","current","defaultCurrent","pageSize","defaultPageSize","disableDataPage","length","registerRowDragEvent","element","dragContainer","querySelector","console","baseOptions","_objectSpread","animation","ghostClass","ghost","chosenClass","chosen","dragClass","dragging","filter","concat","base","row","onMove","evt","hasClass","related","onEnd","_props$onDragSort","newIndex","oldIndex","from","currentIndex","targetIndex","isFunction_1","firstFullRow","h","slots","params2","target","newData","swapDragArrayElement","_toConsumableArray","e","sort","currentData","onDragSort","call","dragSortOptions","Sortable","handle","registerOneLevelColDragEvent","container","recover","options","dataIdAttr","direction","thCellInner","_props$onDragSort2","targetElement","oldElement","newElement","getColumnDataByKey","dataset","colkey","JSON","stringify","getColumnIndexByKey","registerColDragEvent","tableElement","trList","querySelectorAll","_trList","_slicedToArray","forEach","setDragSortPrimaryTableRef","primaryTableElement","setDragSortColumns","val","watch","_ref","_ref2","columns2","dragSort2","register","primaryTableCmp","$el","showElement","timerA","setTimeout","timer","$refs","affixHeaderRef","clearTimeout"],"sources":["../../../src/table/hooks/useDragSort.ts"],"sourcesContent":["// 表格 行拖拽 + 列拖拽功能\nimport { SetupContext, computed, toRefs, ref, watch, h, ComputedRef } from 'vue';\nimport Sortable, { SortableEvent, SortableOptions, MoveEvent } from 'sortablejs';\nimport isFunction from 'lodash/isFunction';\nimport { TableRowData, TdPrimaryTableProps, DragSortContext, PrimaryTableCol } from '../type';\nimport useClassName from './useClassName';\nimport log from '../../_common/js/log';\nimport { hasClass } from '../../utils/dom';\nimport swapDragArrayElement from '../../_common/js/utils/swapDragArrayElement';\nimport { BaseTableColumns } from '../interface';\nimport { getColumnDataByKey, getColumnIndexByKey } from '../../_common/js/table/utils';\nimport { SimplePageInfo } from '../interface';\n\nfunction removeNode(node: HTMLElement) {\n  if (node.parentElement !== null) {\n    node.parentElement.removeChild(node);\n  }\n}\n\nfunction insertNodeAt(fatherNode: HTMLElement, node: HTMLElement, position: number) {\n  const refNode = position === 0 ? fatherNode.children[0] : fatherNode.children[position - 1].nextSibling;\n  fatherNode.insertBefore(node, refNode);\n}\n\nexport default function useDragSort(\n  props: TdPrimaryTableProps,\n  context: SetupContext,\n  params: ComputedRef<{\n    showElement: boolean;\n  }>,\n) {\n  const { sortOnRowDraggable, dragSort, data } = toRefs(props);\n  const innerPagination = ref(props.pagination);\n  const { tableDraggableClasses, tableBaseClass, tableFullRowClasses, tableExpandClasses } = useClassName();\n  const columns = ref<PrimaryTableCol[]>(props.columns || []);\n  const primaryTableRef = ref(null);\n  // @ts-ignore 判断是否有拖拽列\n  const dragCol = computed(() => columns.value.find((item) => item.colKey === 'drag'));\n  // 行拖拽判断条件\n  const isRowDraggable = computed(\n    () => sortOnRowDraggable.value || ['row', 'row-handler-col'].includes(dragSort.value),\n  );\n  // 行拖拽判断条件-手柄列\n  const isRowHandlerDraggable = computed(\n    () => ['row-handler', 'row-handler-col'].includes(dragSort.value) && !!dragCol.value,\n  );\n  // 列拖拽判断条件\n  const isColDraggable = computed(() => ['col', 'row-handler-col'].includes(dragSort.value));\n\n  if (props.sortOnRowDraggable) {\n    log.error('Table', \"`sortOnRowDraggable` is going to be deprecated, use dragSort='row' instead.\");\n  }\n\n  // 本地分页的表格，index 不同，需加上分页计数\n  function getDataPageIndex(index: number, pagination: SimplePageInfo) {\n    const current = pagination.current ?? pagination.defaultCurrent;\n    const pageSize = pagination.pageSize ?? pagination.defaultPageSize;\n    // 开启本地分页的场景\n    if (!props.disableDataPage && pagination && data.value.length > pageSize) {\n      return pageSize * (current - 1) + index;\n    }\n    return index;\n  }\n\n  // 行拖拽排序\n  const registerRowDragEvent = (element: HTMLDivElement): void => {\n    if (!isRowHandlerDraggable.value && !isRowDraggable.value) return;\n    const dragContainer = element?.querySelector('tbody');\n    if (!dragContainer) {\n      console.error('tbody does not exist.');\n      return null;\n    }\n    const baseOptions: SortableOptions = {\n      animation: 150,\n      ghostClass: tableDraggableClasses.ghost,\n      chosenClass: tableDraggableClasses.chosen,\n      dragClass: tableDraggableClasses.dragging,\n      // 过滤首行尾行固定，过滤展开行\n      filter: `.${tableFullRowClasses.base},.${tableExpandClasses.row}`,\n      onMove: (evt: MoveEvent) => !hasClass(evt.related, tableFullRowClasses.base),\n      onEnd(evt: SortableEvent) {\n        if (evt.newIndex === evt.oldIndex) return;\n        // 处理受控：拖拽列表恢复原始排序\n        removeNode(evt.item);\n        insertNodeAt(evt.from, evt.item, evt.oldIndex);\n        let { oldIndex: currentIndex, newIndex: targetIndex } = evt;\n        if (\n          (isFunction(props.firstFullRow) && props.firstFullRow(h)) ||\n          context.slots.firstFullRow ||\n          context.slots['first-full-row']\n        ) {\n          currentIndex -= 1;\n          targetIndex -= 1;\n        }\n        if (innerPagination.value) {\n          currentIndex = getDataPageIndex(currentIndex, innerPagination.value);\n          targetIndex = getDataPageIndex(targetIndex, innerPagination.value);\n        }\n        const params: DragSortContext<TableRowData> = {\n          data: data.value,\n          currentIndex,\n          current: data.value[currentIndex],\n          targetIndex,\n          target: data.value[targetIndex],\n          newData: swapDragArrayElement([...props.data], currentIndex, targetIndex),\n          e: evt,\n          sort: 'row',\n        };\n        // currentData is going to be deprecated\n        params.currentData = params.newData;\n        props.onDragSort?.(params);\n      },\n      ...props.dragSortOptions,\n    };\n\n    if (!dragContainer) return;\n    if (isRowDraggable.value) {\n      new Sortable(dragContainer, { ...baseOptions });\n    } else {\n      new Sortable(dragContainer, {\n        ...baseOptions,\n        handle: `.${tableDraggableClasses.handle}`,\n      });\n    }\n  };\n\n  const registerOneLevelColDragEvent = (container: HTMLElement, recover: boolean) => {\n    const options: SortableOptions = {\n      animation: 150,\n      dataIdAttr: 'data-colkey',\n      direction: 'vertical',\n      ghostClass: tableDraggableClasses.ghost,\n      chosenClass: tableDraggableClasses.chosen,\n      dragClass: tableDraggableClasses.dragging,\n      handle: `.${tableBaseClass.thCellInner}`,\n      // 存在类名：t-table__th--drag-sort 的列才允许拖拽调整顺序（注意：添加 draggable 之后，固定列的表头 和 吸顶表头 位置顺序会错位，暂时注释）\n      // draggable: `th.${tableDraggableClasses.dragSortTh}`,\n      onEnd: (evt: SortableEvent) => {\n        if (evt.newIndex === evt.oldIndex) return;\n        if (recover) {\n          // 处理受控：拖拽列表恢复原始排序，等待外部数据 data 变化，更新最终顺序\n          removeNode(evt.item);\n          insertNodeAt(evt.from, evt.item, evt.oldIndex);\n        }\n        const { oldIndex, newIndex, target: targetElement } = evt;\n        let currentIndex = recover ? oldIndex : newIndex;\n        let targetIndex = recover ? newIndex : oldIndex;\n        const oldElement = targetElement.children[currentIndex] as HTMLElement;\n        const newElement = targetElement.children[targetIndex] as HTMLElement;\n        const current = getColumnDataByKey(columns.value, oldElement.dataset.colkey);\n        const target = getColumnDataByKey(columns.value, newElement.dataset.colkey);\n        if (!current || !current.colKey) {\n          log.error('Table', `colKey is missing in ${JSON.stringify(current)}`);\n        }\n        if (!target || !target.colKey) {\n          log.error('Table', `colKey is missing in ${JSON.stringify(target)}`);\n        }\n        // 寻找外部数据 props.columns 中的真正下标\n        currentIndex = getColumnIndexByKey(props.columns, current.colKey);\n        targetIndex = getColumnIndexByKey(props.columns, target.colKey);\n        const params: DragSortContext<TableRowData> = {\n          data: columns.value,\n          currentIndex,\n          current,\n          targetIndex,\n          target,\n          newData: swapDragArrayElement([...props.columns], currentIndex, targetIndex),\n          e: evt,\n          sort: 'col',\n        };\n        // currentData is going to be deprecated\n        params.currentData = params.newData;\n        props.onDragSort?.(params);\n      },\n      ...props.dragSortOptions,\n    };\n    if (!container) return;\n    new Sortable(container, options);\n  };\n\n  // 列拖拽排序：涉及到多级表头、自定义显示列 等综合场景\n  const registerColDragEvent = (tableElement: HTMLElement) => {\n    if (!isColDraggable.value || !tableElement) return;\n    const trList = tableElement.querySelectorAll('thead > tr');\n    if (trList.length <= 1) {\n      const [container] = trList;\n      registerOneLevelColDragEvent(container as HTMLElement, true);\n    } else {\n      // 多级表头只抛出事件，不处理其他未知逻辑（如多层表头之间具体如何交换）\n      trList?.forEach((container) => {\n        registerOneLevelColDragEvent(container as HTMLElement, false);\n      });\n    }\n  };\n\n  function setDragSortPrimaryTableRef(primaryTableElement: any) {\n    primaryTableRef.value = primaryTableElement;\n  }\n\n  function setDragSortColumns(val: BaseTableColumns) {\n    // @ts-ignore\n    columns.value = val;\n  }\n\n  // eslint-disable-next-line\n  watch([primaryTableRef, columns, dragSort, params], ([val, columns, dragSort, params]) => {\n    register(val, params);\n  });\n\n  function register(val: any, params: any) {\n    const primaryTableCmp = val as any;\n    if (!val || !primaryTableCmp.$el || !params.showElement) return;\n    // register after table tr rendered\n    const timerA = setTimeout(() => {\n      registerRowDragEvent(primaryTableCmp.$el);\n      registerColDragEvent(primaryTableCmp.$el);\n      /** 待表头节点准备完成后 */\n      const timer = setTimeout(() => {\n        if (primaryTableCmp.$refs.affixHeaderRef) {\n          registerColDragEvent(primaryTableCmp.$refs.affixHeaderRef);\n        }\n        clearTimeout(timer);\n      });\n\n      clearTimeout(timerA);\n    }, 60);\n  }\n\n  return {\n    innerPagination,\n    isRowDraggable,\n    isRowHandlerDraggable,\n    isColDraggable,\n    setDragSortPrimaryTableRef,\n    setDragSortColumns,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}