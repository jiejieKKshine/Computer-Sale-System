{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport { CHECKED_CODE_REG } from '../../_common/js/common.mjs';\nfunction useKeyboardEvent(handleChange) {\n  var keyboardEventListener = function keyboardEventListener(e) {\n    var isCheckedCode = CHECKED_CODE_REG.test(e.key) || CHECKED_CODE_REG.test(e.code);\n    if (isCheckedCode) {\n      e.preventDefault();\n      var _e$currentTarget$quer = e.currentTarget.querySelector(\"input\"),\n        disabled = _e$currentTarget$quer.disabled;\n      !disabled && handleChange(e);\n    }\n  };\n  var onCheckboxFocus = function onCheckboxFocus(e) {\n    e.currentTarget.addEventListener(\"keydown\", keyboardEventListener);\n  };\n  var onCheckboxBlur = function onCheckboxBlur(e) {\n    e.currentTarget.removeEventListener(\"keydown\", keyboardEventListener);\n  };\n  return {\n    onCheckboxFocus: onCheckboxFocus,\n    onCheckboxBlur: onCheckboxBlur\n  };\n}\nexport { useKeyboardEvent as default, useKeyboardEvent };","map":{"version":3,"names":["useKeyboardEvent","handleChange","keyboardEventListener","e","isCheckedCode","CHECKED_CODE_REG","test","key","code","preventDefault","_e$currentTarget$quer","currentTarget","querySelector","disabled","onCheckboxFocus","addEventListener","onCheckboxBlur","removeEventListener"],"sources":["../../../src/checkbox/hooks/useKeyboardEvent.ts"],"sourcesContent":["import { CHECKED_CODE_REG } from '../../_common/js/common';\n\nexport function useKeyboardEvent(handleChange: (e: Event) => void) {\n  const keyboardEventListener = (e: KeyboardEvent) => {\n    const isCheckedCode = CHECKED_CODE_REG.test(e.key) || CHECKED_CODE_REG.test(e.code);\n    if (isCheckedCode) {\n      e.preventDefault();\n      const { disabled } = (e.currentTarget as HTMLElement).querySelector('input');\n      !disabled && handleChange(e);\n    }\n  };\n\n  const onCheckboxFocus = (e: FocusEvent) => {\n    e.currentTarget.addEventListener('keydown', keyboardEventListener);\n  };\n\n  const onCheckboxBlur = (e: FocusEvent) => {\n    e.currentTarget.removeEventListener('keydown', keyboardEventListener);\n  };\n\n  return {\n    onCheckboxFocus,\n    onCheckboxBlur,\n  };\n}\n\nexport default useKeyboardEvent;\n"],"mappings":";;;;;;;AAEO,SAASA,iBAAiBC,YAAkC;EAC3D,IAAAC,qBAAA,GAAwB,SAAxBA,sBAAyBC,CAAqB;IAC5C,IAAAC,aAAA,GAAgBC,gBAAA,CAAiBC,IAAK,CAAAH,CAAA,CAAEI,GAAG,CAAK,IAAAF,gBAAA,CAAiBC,IAAK,CAAAH,CAAA,CAAEK,IAAI;IAClF,IAAIJ,aAAe;MACjBD,CAAA,CAAEM,cAAe;MACjB,IAAAC,qBAAA,GAAsBP,CAAE,CAAAQ,aAAA,CAA8BC,aAAA,CAAc,OAAO;QAAnEC,QAAS,GAAAH,qBAAA,CAATG,QAAS;MAChB,CAAAA,QAAA,IAAYZ,YAAA,CAAaE,CAAC;IAC7B;GACF;EAEM,IAAAW,eAAA,GAAkB,SAAlBA,gBAAmBX,CAAkB;IACvCA,CAAA,CAAAQ,aAAA,CAAcI,gBAAiB,YAAWb,qBAAqB;GACnE;EAEM,IAAAc,cAAA,GAAiB,SAAjBA,eAAkBb,CAAkB;IACtCA,CAAA,CAAAQ,aAAA,CAAcM,mBAAoB,YAAWf,qBAAqB;GACtE;EAEO;IACLY,eAAA,EAAAA,eAAA;IACAE,cAAA,EAAAA;GACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}