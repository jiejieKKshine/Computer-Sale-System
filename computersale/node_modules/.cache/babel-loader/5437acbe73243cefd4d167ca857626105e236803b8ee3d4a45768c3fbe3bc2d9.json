{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\n/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport { getCurrentInstance, h } from 'vue';\nimport { i as isFunction_1 } from '../_chunks/dep-06dcbf4c.mjs';\nimport { c as camelCase_1 } from '../_chunks/dep-03ad9cda.mjs';\nimport { k as kebabCase_1 } from '../_chunks/dep-bad871d5.mjs';\nimport { getParams, getDefaultNode, getSlotFirst } from '../utils/render-tnode.mjs';\nimport '../_chunks/dep-eca422c3.mjs';\nimport '../_chunks/dep-bf7257e7.mjs';\nimport '../_chunks/dep-4659d73b.mjs';\nimport '../_chunks/dep-2b09875b.mjs';\nimport '../_chunks/dep-cda4f568.mjs';\nimport '../_chunks/dep-7932c2e8.mjs';\nimport '../_chunks/dep-eae2a67e.mjs';\nimport '../_chunks/dep-626c497d.mjs';\nimport '../_chunks/dep-ab4bb9b8.mjs';\nimport '../_chunks/dep-29ef8419.mjs';\nimport '../_chunks/dep-d8a34055.mjs';\nimport '../_chunks/dep-2f6e28a0.mjs';\nimport '../_chunks/dep-5a17bf21.mjs';\nimport '../_chunks/dep-b91a8171.mjs';\nimport '../_chunks/dep-1b78414a.mjs';\nimport '../_chunks/dep-1a4bb2f2.mjs';\nimport '../_chunks/dep-cc8ebcde.mjs';\nimport '../_chunks/dep-76958824.mjs';\nimport '../_chunks/dep-f5579c03.mjs';\nimport '../_chunks/dep-6dc3d0e1.mjs';\nimport '../_chunks/dep-d84f19b3.mjs';\nimport '../_chunks/dep-3c65fae8.mjs';\nimport '../_chunks/dep-03a7fb6c.mjs';\nfunction handleSlots(instance, name, params) {\n  var _instance$slots$camel, _instance$slots, _instance$slots$kebab, _instance$slots2;\n  var node = (_instance$slots$camel = (_instance$slots = instance.slots)[camelCase_1(name)]) === null || _instance$slots$camel === void 0 ? void 0 : _instance$slots$camel.call(_instance$slots, params);\n  if (node && node.filter(function (t) {\n    return t.type.toString() !== \"Symbol(v-cmt)\";\n  }).length) return node;\n  node = (_instance$slots$kebab = (_instance$slots2 = instance.slots)[kebabCase_1(name)]) === null || _instance$slots$kebab === void 0 ? void 0 : _instance$slots$kebab.call(_instance$slots2, params);\n  if (node && node.filter(function (t) {\n    return t.type.toString() !== \"Symbol(v-cmt)\";\n  }).length) return node;\n  return null;\n}\nfunction isEmptyNode(node) {\n  if ([void 0, null, \"\"].includes(node)) return true;\n  var innerNodes = node instanceof Array ? node : [node];\n  var r = innerNodes.filter(function (node2) {\n    var _node2$type;\n    return (node2 === null || node2 === void 0 || (_node2$type = node2.type) === null || _node2$type === void 0 ? void 0 : _node2$type.toString()) !== \"Symbol(Comment)\";\n  });\n  return !r.length;\n}\nvar useTNodeJSX = function useTNodeJSX() {\n  var instance = getCurrentInstance();\n  return function (name, options) {\n    var params = getParams(options);\n    var defaultNode = getDefaultNode(options);\n    var slotFirst = getSlotFirst(options);\n    var propsNode;\n    if (Object.keys(instance.props).includes(name)) {\n      propsNode = instance.props[name];\n    }\n    if (propsNode === false || propsNode === null) return;\n    if (propsNode === true) {\n      return handleSlots(instance, name, params) || defaultNode;\n    }\n    if (isFunction_1(propsNode)) return propsNode(h, params);\n    var isPropsEmpty = [void 0, params, \"\"].includes(propsNode);\n    if ((isPropsEmpty || slotFirst) && (instance.slots[camelCase_1(name)] || instance.slots[kebabCase_1(name)])) {\n      return handleSlots(instance, name, params);\n    }\n    return propsNode;\n  };\n};\nvar useTNodeDefault = function useTNodeDefault() {\n  var renderTNodeJSX = useTNodeJSX();\n  return function (name, options) {\n    var defaultNode = getDefaultNode(options);\n    return renderTNodeJSX(name, options) || defaultNode;\n  };\n};\nvar useContent = function useContent() {\n  var renderTNodeJSX = useTNodeJSX();\n  return function (name1, name2, options) {\n    var params = getParams(options);\n    var defaultNode = getDefaultNode(options);\n    var toParams = params ? {\n      params: params\n    } : void 0;\n    var node1 = renderTNodeJSX(name1, toParams);\n    var node2 = renderTNodeJSX(name2, toParams);\n    var res = isEmptyNode(node1) ? node2 : node1;\n    return isEmptyNode(res) ? defaultNode : res;\n  };\n};\nexport { useContent, useTNodeDefault, useTNodeJSX };","map":{"version":3,"names":["handleSlots","instance","name","params","_instance$slots$camel","_instance$slots","_instance$slots$kebab","_instance$slots2","node","slots","camelCase_1","call","filter","t","type","toString","length","kebabCase_1","isEmptyNode","includes","innerNodes","Array","r","node2","_node2$type","useTNodeJSX","getCurrentInstance","options","getParams","defaultNode","getDefaultNode","slotFirst","getSlotFirst","propsNode","Object","keys","props","isFunction_1","h","isPropsEmpty","useTNodeDefault","renderTNodeJSX","useContent","name1","name2","toParams","node1","res"],"sources":["../../src/hooks/tnode.ts"],"sourcesContent":["import { h, getCurrentInstance, ComponentInternalInstance, VNode } from 'vue';\nimport isFunction from 'lodash/isFunction';\nimport camelCase from 'lodash/camelCase';\nimport kebabCase from 'lodash/kebabCase';\nimport { getDefaultNode, getParams, OptionsType, JSXRenderContext, getSlotFirst } from '../utils/render-tnode';\n\n// 兼容处理插槽名称，同时支持驼峰命名和中划线命名，示例：value-display 和 valueDisplay\nfunction handleSlots(instance: ComponentInternalInstance, name: string, params: Record<string, any>) {\n  // 2023-08 new Function 触发部分使用场景安全策略问题（Chrome插件/eletron等）\n  // // 每个 slots 需要单独的 h 函数 否则直接assign会重复把不同 slots 的 params 都注入\n  // const finalParams = new Function('return ' + h.toString())();\n  // if (params) {\n  //   Object.assign(finalParams, params);\n  // }\n\n  // 检查是否存在 驼峰命名 的插槽（过滤注释节点）\n  let node = instance.slots[camelCase(name)]?.(params);\n  if (node && node.filter((t) => t.type.toString() !== 'Symbol(v-cmt)').length) return node;\n  // 检查是否存在 中划线命名 的插槽\n  node = instance.slots[kebabCase(name)]?.(params);\n  if (node && node.filter((t) => t.type.toString() !== 'Symbol(v-cmt)').length) return node;\n  return null;\n}\n\n/**\n * 是否为空节点，需要过滤掉注释节点。注释节点也会被认为是空节点\n */\nfunction isEmptyNode(node: any) {\n  if ([undefined, null, ''].includes(node)) return true;\n  const innerNodes = node instanceof Array ? node : [node];\n  const r = innerNodes.filter((node) => node?.type?.toString() !== 'Symbol(Comment)');\n  return !r.length;\n}\n\n/**\n * 通过 JSX 的方式渲染 TNode，props 和 插槽同时处理，也能处理默认值为 true 则渲染默认节点的情况\n * 优先级：Props 大于插槽\n * 如果 props 值为 true ，则使用插槽渲染。如果也没有插槽的情况下，则使用 defaultNode 渲染\n * @example const renderTNodeJSX = useTNodeJSX()\n * @return () => {}\n * @param name 插槽和属性名称\n * @param options 值可能为默认渲染节点，也可能是默认渲染节点和参数的集合\n * @example renderTNodeJSX('closeBtn')  优先级 props function 大于 插槽\n * @example renderTNodeJSX('closeBtn', <close-icon />)。 当属性值为 true 时则渲染 <close-icon />\n * @example renderTNodeJSX('closeBtn', { defaultNode: <close-icon />, params })。 params 为渲染节点时所需的参数\n */\nexport const useTNodeJSX = () => {\n  const instance = getCurrentInstance();\n  return function (name: string, options?: OptionsType) {\n    // assemble params && defaultNode\n    const params = getParams(options);\n    const defaultNode = getDefaultNode(options);\n    const slotFirst = getSlotFirst(options);\n\n    // 处理 props 类型的Node\n    let propsNode;\n    if (Object.keys(instance.props).includes(name)) {\n      propsNode = instance.props[name];\n    }\n\n    // 是否静默日志\n    // const isSilent = Boolean(isObject(options) && 'silent' in options && options.silent);\n    // // 同名插槽和属性同时存在，则提醒用户只需要选择一种方式即可\n    // if (instance.slots[name] && propsNode && propsNode !== true && !isSilent) {\n    //   log.warn('', `Both slots.${name} and props.${name} exist, props.${name} is preferred`);\n    // }\n    // propsNode 为 false 不渲染\n    if (propsNode === false || propsNode === null) return;\n    if (propsNode === true) {\n      return handleSlots(instance, name, params) || defaultNode;\n    }\n\n    // 同名 props 和 slot 优先处理 props\n    if (isFunction(propsNode)) return propsNode(h, params);\n    const isPropsEmpty = [undefined, params, ''].includes(propsNode);\n    if ((isPropsEmpty || slotFirst) && (instance.slots[camelCase(name)] || instance.slots[kebabCase(name)])) {\n      return handleSlots(instance, name, params);\n    }\n    return propsNode;\n  };\n};\n\n/**\n * 在setup中，通过JSX的方式 TNode，props 和 插槽同时处理。与 renderTNodeJSX 区别在于属性值为 undefined 时会渲染默认节点\n * @example const renderTNodeJSXDefault = useTNodeDefault()\n * @return () => {}\n * @param name 插槽和属性名称\n * @example renderTNodeJSXDefault('closeBtn')\n * @example renderTNodeJSXDefault('closeBtn', <close-icon />) closeBtn 为空时，则兜底渲染 <close-icon />\n * @example renderTNodeJSXDefault('closeBtn', { defaultNode: <close-icon />, params }) 。params 为渲染节点时所需的参数\n */\nexport const useTNodeDefault = () => {\n  const renderTNodeJSX = useTNodeJSX();\n  return function (name: string, options?: VNode | JSXRenderContext) {\n    const defaultNode = getDefaultNode(options);\n    return renderTNodeJSX(name, options) || defaultNode;\n  };\n};\n\n/**\n * 在setup中，用于处理相同名称的 TNode 渲染\n * @example const renderContent = useContent()\n * @return () => {}\n * @param name1 第一个名称，优先级高于 name2\n * @param name2 第二个名称\n * @param defaultNode 默认渲染内容：当 name1 和 name2 都为空时会启动默认内容渲染\n * @example renderContent('default', 'content')\n * @example renderContent('default', 'content', '我是默认内容')\n * @example renderContent('default', 'content', { defaultNode: '我是默认内容', params })\n */\nexport const useContent = () => {\n  const renderTNodeJSX = useTNodeJSX();\n  return function (name1: string, name2: string, options?: VNode | JSXRenderContext) {\n    // assemble params && defaultNode\n    const params = getParams(options);\n    const defaultNode = getDefaultNode(options);\n\n    const toParams = params ? { params } : undefined;\n\n    const node1 = renderTNodeJSX(name1, toParams);\n    const node2 = renderTNodeJSX(name2, toParams);\n\n    const res = isEmptyNode(node1) ? node2 : node1;\n    return isEmptyNode(res) ? defaultNode : res;\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}