{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nvar props = {\n  beforeChange: {\n    type: Function\n  },\n  customValue: {\n    type: Array\n  },\n  disabled: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  label: {\n    type: [Array, Function],\n    \"default\": function _default() {\n      return [];\n    }\n  },\n  loading: Boolean,\n  size: {\n    type: String,\n    \"default\": \"medium\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"small\", \"medium\", \"large\"].includes(val);\n    }\n  },\n  value: {\n    type: [String, Number, Boolean],\n    \"default\": void 0\n  },\n  modelValue: {\n    type: [String, Number, Boolean],\n    \"default\": void 0\n  },\n  defaultValue: {\n    type: [String, Number, Boolean]\n  },\n  onChange: Function\n};\nexport { props as default };","map":{"version":3,"names":["props","beforeChange","type","Function","customValue","Array","disabled","Boolean","label","_default","loading","size","String","validator","val","includes","value","Number","modelValue","defaultValue","onChange"],"sources":["../../src/switch/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdSwitchProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** Switch 切换状态前的回调方法，常用于需要发起异步请求的场景，回调返回值支持布尔和 Promise 类型，返回`false`或 Promise reject不继续执行change，否则则继续执行。 */\n  beforeChange: {\n    type: Function as PropType<TdSwitchProps['beforeChange']>,\n  },\n  /** 用于自定义开关的值，[打开时的值，关闭时的值]。默认为 [true, false]。示例：[1, 0]、['open', 'close'] */\n  customValue: {\n    type: Array as PropType<TdSwitchProps['customValue']>,\n  },\n  /** 是否禁用组件。优先级：Switch.disabled > Form.disabled */\n  disabled: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 开关内容，[开启时内容，关闭时内容]。示例：['开', '关'] 或 (value) => value ? '开' : '关' */\n  label: {\n    type: [Array, Function] as PropType<TdSwitchProps['label']>,\n    default: (): TdSwitchProps['label'] => [] as TdSwitchProps['label'],\n  },\n  /** 是否处于加载中状态 */\n  loading: Boolean,\n  /** 开关尺寸 */\n  size: {\n    type: String as PropType<TdSwitchProps['size']>,\n    default: 'medium' as TdSwitchProps['size'],\n    validator(val: TdSwitchProps['size']): boolean {\n      if (!val) return true;\n      return ['small', 'medium', 'large'].includes(val);\n    },\n  },\n  /** 开关值 */\n  value: {\n    type: [String, Number, Boolean] as PropType<TdSwitchProps['value']>,\n    default: undefined as TdSwitchProps['value'],\n  },\n  modelValue: {\n    type: [String, Number, Boolean] as PropType<TdSwitchProps['value']>,\n    default: undefined as TdSwitchProps['value'],\n  },\n  /** 开关值，非受控属性 */\n  defaultValue: {\n    type: [String, Number, Boolean] as PropType<TdSwitchProps['defaultValue']>,\n  },\n  /** 数据发生变化时触发 */\n  onChange: Function as PropType<TdSwitchProps['onChange']>,\n};\n"],"mappings":";;;;;;AASA,IAAAA,KAAA,GAAe;EAEbC,YAAc;IACZC,IAAM,EAAAC;GACR;EAEAC,WAAa;IACXF,IAAM,EAAAG;GACR;EAEAC,QAAU;IACRJ,IAAM,EAAAK,OAAA;IACN,WAAS;GACX;EAEAC,KAAO;IACLN,IAAA,EAAM,CAACG,KAAA,EAAOF,QAAQ;IACtB,SAAS,WAATM,SAAA;MAAA,OAAuC,EAAC;IAAA;GAC1C;EAEAC,OAAS,EAAAH,OAAA;EAETI,IAAM;IACJT,IAAM,EAAAU,MAAA;IACN,WAAS;IACTC,SAAA,WAAAA,UAAUC,GAAqC;MAC7C,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,OAAS,YAAU,OAAO,EAAEC,QAAA,CAASD,GAAG;IAClD;GACF;EAEAE,KAAO;IACLd,IAAM,GAACU,MAAQ,EAAAK,MAAA,EAAQV,OAAO;IAC9B,WAAS;GACX;EACAW,UAAY;IACVhB,IAAM,GAACU,MAAQ,EAAAK,MAAA,EAAQV,OAAO;IAC9B,WAAS;GACX;EAEAY,YAAc;IACZjB,IAAM,GAACU,MAAQ,EAAAK,MAAA,EAAQV,OAAO;GAChC;EAEAa,QAAU,EAAAjB;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}