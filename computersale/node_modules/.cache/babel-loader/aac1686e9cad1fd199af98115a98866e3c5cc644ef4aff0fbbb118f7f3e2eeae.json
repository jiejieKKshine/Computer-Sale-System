{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nvar props = {\n  colon: Boolean,\n  data: {\n    type: Object,\n    \"default\": function _default() {\n      return {};\n    }\n  },\n  disabled: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  errorMessage: {\n    type: Object\n  },\n  formControlledComponents: {\n    type: Array\n  },\n  id: {\n    type: String,\n    \"default\": void 0\n  },\n  labelAlign: {\n    type: String,\n    \"default\": \"right\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"left\", \"right\", \"top\"].includes(val);\n    }\n  },\n  labelWidth: {\n    type: [String, Number],\n    \"default\": \"100px\"\n  },\n  layout: {\n    type: String,\n    \"default\": \"vertical\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"vertical\", \"inline\"].includes(val);\n    }\n  },\n  preventSubmitDefault: {\n    type: Boolean,\n    \"default\": true\n  },\n  readonly: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  requiredMark: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  resetType: {\n    type: String,\n    \"default\": \"empty\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"empty\", \"initial\"].includes(val);\n    }\n  },\n  rules: {\n    type: Object\n  },\n  scrollToFirstError: {\n    type: String,\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"\", \"smooth\", \"auto\"].includes(val);\n    }\n  },\n  showErrorMessage: {\n    type: Boolean,\n    \"default\": true\n  },\n  statusIcon: {\n    type: [Boolean, Function],\n    \"default\": void 0\n  },\n  submitWithWarningMessage: Boolean,\n  onReset: Function,\n  onSubmit: Function,\n  onValidate: Function\n};\nexport { props as default };","map":{"version":3,"names":["props","colon","Boolean","data","type","Object","_default","disabled","errorMessage","formControlledComponents","Array","id","String","labelAlign","validator","val","includes","labelWidth","Number","layout","preventSubmitDefault","readonly","requiredMark","resetType","rules","scrollToFirstError","showErrorMessage","statusIcon","Function","submitWithWarningMessage","onReset","onSubmit","onValidate"],"sources":["../../src/form/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdFormProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 是否在表单标签字段右侧显示冒号 */\n  colon: Boolean,\n  /** 表单数据 */\n  data: {\n    type: Object as PropType<TdFormProps['data']>,\n    default: () => ({}),\n  },\n  /** 是否禁用整个表单 */\n  disabled: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 表单错误信息配置，示例：`{ idcard: '请输入正确的身份证号码', max: '字符长度不能超过 ${max}' }` */\n  errorMessage: {\n    type: Object as PropType<TdFormProps['errorMessage']>,\n  },\n  /** 允许表单统一控制禁用状态的自定义组件名称列表。默认会有组件库的全部输入类组件：TInput、TInputNumber、TCascader、TSelect、TOption、TSwitch、TCheckbox、TCheckboxGroup、TRadio、TRadioGroup、TTreeSelect、TDatePicker、TTimePicker、TUpload、TTransfer、TSlider。对于自定义组件，组件内部需要包含可以控制表单禁用状态的变量 `formDisabled`。示例：`['CustomUpload', 'CustomInput']` */\n  formControlledComponents: {\n    type: Array as PropType<TdFormProps['formControlledComponents']>,\n  },\n  /** 表单原生的id属性，支持用于配合非表单内的按钮通过form属性来触发表单事件 */\n  id: {\n    type: String,\n    default: undefined,\n  },\n  /** 表单字段标签对齐方式：左对齐、右对齐、顶部对齐 */\n  labelAlign: {\n    type: String as PropType<TdFormProps['labelAlign']>,\n    default: 'right' as TdFormProps['labelAlign'],\n    validator(val: TdFormProps['labelAlign']): boolean {\n      if (!val) return true;\n      return ['left', 'right', 'top'].includes(val);\n    },\n  },\n  /** 可以整体设置label标签宽度，默认为100px */\n  labelWidth: {\n    type: [String, Number] as PropType<TdFormProps['labelWidth']>,\n    default: '100px' as TdFormProps['labelWidth'],\n  },\n  /** 表单布局，有两种方式：纵向布局 和 行内布局 */\n  layout: {\n    type: String as PropType<TdFormProps['layout']>,\n    default: 'vertical' as TdFormProps['layout'],\n    validator(val: TdFormProps['layout']): boolean {\n      if (!val) return true;\n      return ['vertical', 'inline'].includes(val);\n    },\n  },\n  /** 是否阻止表单提交默认事件（表单提交默认事件会刷新页面），设置为 `true` 可以避免刷新 */\n  preventSubmitDefault: {\n    type: Boolean,\n    default: true,\n  },\n  /** 是否整个表单只读 */\n  readonly: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 是否显示必填符号（*），默认显示 */\n  requiredMark: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 重置表单的方式，值为 empty 表示重置表单为空，值为 initial 表示重置表单数据为初始值 */\n  resetType: {\n    type: String as PropType<TdFormProps['resetType']>,\n    default: 'empty' as TdFormProps['resetType'],\n    validator(val: TdFormProps['resetType']): boolean {\n      if (!val) return true;\n      return ['empty', 'initial'].includes(val);\n    },\n  },\n  /** 表单字段校验规则 */\n  rules: {\n    type: Object as PropType<TdFormProps['rules']>,\n  },\n  /** 表单校验不通过时，是否自动滚动到第一个校验不通过的字段，平滑滚动或是瞬间直达。值为空则表示不滚动 */\n  scrollToFirstError: {\n    type: String as PropType<TdFormProps['scrollToFirstError']>,\n    validator(val: TdFormProps['scrollToFirstError']): boolean {\n      if (!val) return true;\n      return ['', 'smooth', 'auto'].includes(val);\n    },\n  },\n  /** 校验不通过时，是否显示错误提示信息，统一控制全部表单项。如果希望控制单个表单项，请给 FormItem 设置该属性 */\n  showErrorMessage: {\n    type: Boolean,\n    default: true,\n  },\n  /** 校验状态图标，值为 `true` 显示默认图标，默认图标有 成功、失败、警告 等，不同的状态图标不同。`statusIcon` 值为 `false`，不显示图标。`statusIcon` 值类型为渲染函数，则可以自定义右侧状态图标 */\n  statusIcon: {\n    type: [Boolean, Function] as PropType<TdFormProps['statusIcon']>,\n    default: undefined as TdFormProps['statusIcon'],\n  },\n  /** 【讨论中】当校验结果只有告警信息时，是否触发 `submit` 提交事件 */\n  submitWithWarningMessage: Boolean,\n  /** 表单重置时触发 */\n  onReset: Function as PropType<TdFormProps['onReset']>,\n  /** 表单提交时触发。其中 `context.validateResult` 表示校验结果，`context.firstError` 表示校验不通过的第一个规则提醒。`context.validateResult` 值为 `true` 表示校验通过；如果校验不通过，`context.validateResult` 值为校验结果列表。<br />【注意】⚠️ 默认情况，输入框按下 Enter 键会自动触发提交事件，如果希望禁用这个默认行为，可以给输入框添加  enter 事件，并在事件中设置 `e.preventDefault()` */\n  onSubmit: Function as PropType<TdFormProps['onSubmit']>,\n  /** 校验结束后触发，result 值为 true 表示校验通过；如果校验不通过，result 值为校验结果列表 */\n  onValidate: Function as PropType<TdFormProps['onValidate']>,\n};\n"],"mappings":";;;;;;AASA,IAAAA,KAAA,GAAe;EAEbC,KAAO,EAAAC,OAAA;EAEPC,IAAM;IACJC,IAAM,EAAAC,MAAA;IACN,SAAS,WAATC,SAAA;MAAA,OAAgB,EAAC;IAAA;GACnB;EAEAC,QAAU;IACRH,IAAM,EAAAF,OAAA;IACN,WAAS;GACX;EAEAM,YAAc;IACZJ,IAAM,EAAAC;GACR;EAEAI,wBAA0B;IACxBL,IAAM,EAAAM;GACR;EAEAC,EAAI;IACFP,IAAM,EAAAQ,MAAA;IACN,WAAS;GACX;EAEAC,UAAY;IACVT,IAAM,EAAAQ,MAAA;IACN,WAAS;IACTE,SAAA,WAAAA,UAAUC,GAAyC;MACjD,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,MAAQ,WAAS,KAAK,EAAEC,QAAA,CAASD,GAAG;IAC9C;GACF;EAEAE,UAAY;IACVb,IAAA,EAAM,CAACQ,MAAA,EAAQM,MAAM;IACrB,SAAS;GACX;EAEAC,MAAQ;IACNf,IAAM,EAAAQ,MAAA;IACN,WAAS;IACTE,SAAA,WAAAA,UAAUC,GAAqC;MAC7C,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,YAAY,QAAQ,EAAEC,QAAA,CAASD,GAAG;IAC5C;GACF;EAEAK,oBAAsB;IACpBhB,IAAM,EAAAF,OAAA;IACN,SAAS;GACX;EAEAmB,QAAU;IACRjB,IAAM,EAAAF,OAAA;IACN,WAAS;GACX;EAEAoB,YAAc;IACZlB,IAAM,EAAAF,OAAA;IACN,WAAS;GACX;EAEAqB,SAAW;IACTnB,IAAM,EAAAQ,MAAA;IACN,WAAS;IACTE,SAAA,WAAAA,UAAUC,GAAwC;MAChD,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,SAAS,SAAS,EAAEC,QAAA,CAASD,GAAG;IAC1C;GACF;EAEAS,KAAO;IACLpB,IAAM,EAAAC;GACR;EAEAoB,kBAAoB;IAClBrB,IAAM,EAAAQ,MAAA;IACNE,SAAA,WAAAA,UAAUC,GAAiD;MACzD,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,EAAI,YAAU,MAAM,EAAEC,QAAA,CAASD,GAAG;IAC5C;GACF;EAEAW,gBAAkB;IAChBtB,IAAM,EAAAF,OAAA;IACN,SAAS;GACX;EAEAyB,UAAY;IACVvB,IAAA,EAAM,CAACF,OAAA,EAAS0B,QAAQ;IACxB,WAAS;GACX;EAEAC,wBAA0B,EAAA3B,OAAA;EAE1B4B,OAAS,EAAAF,QAAA;EAETG,QAAU,EAAAH,QAAA;EAEVI,UAAY,EAAAJ;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}