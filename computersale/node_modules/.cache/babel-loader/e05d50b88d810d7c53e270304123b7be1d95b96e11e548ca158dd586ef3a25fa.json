{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport { _ as _defineProperty } from '../_chunks/dep-931ef437.js';\nimport { h } from 'vue';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction camel2Kebab(camelString) {\n  var covertArr = [\"fillOpacity\", \"fillRule\", \"clipRule\"];\n  if (covertArr.includes(camelString)) {\n    return camelString.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, \"$1-$2\").toLowerCase();\n  }\n  return camelString;\n}\nfunction renderFn(node, props) {\n  var kebabAttrs = Object.keys(node.attrs).reduce((result, key) => {\n    result[camel2Kebab(key)] = node.attrs[key];\n    return result;\n  }, {});\n  return h(node.tag, _objectSpread(_objectSpread({}, kebabAttrs), props), (node.children || []).map(child => renderFn(child, {})));\n}\nexport default renderFn;","map":{"version":3,"names":["camel2Kebab","camelString","covertArr","includes","replace","toLowerCase","renderFn","node","props","kebabAttrs","Object","keys","attrs","reduce","result","key","h","tag","_objectSpread","children","map","child"],"sources":["../../src/utils/render-fn.ts"],"sourcesContent":["import { VNode, h } from 'vue';\nimport { SVGJson } from './types';\n\nfunction camel2Kebab(camelString:string) {\n  const covertArr = ['fillOpacity', 'fillRule', 'clipRule'];\n  if (covertArr.includes(camelString)) { return camelString.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2').toLowerCase(); }\n  return camelString;\n}\n\nfunction renderFn(node: SVGJson, props:Record<string, any>): VNode {\n  const kebabAttrs = Object.keys(node.attrs).reduce((result, key) => {\n    // eslint-disable-next-line no-param-reassign\n    result[camel2Kebab(key)] = node.attrs[key];\n    return result;\n  }, {});\n  return h(\n    node.tag,\n    {\n      ...kebabAttrs,\n      ...props,\n    },\n    (node.children || []).map((child: SVGJson) => renderFn(child, {})),\n  );\n}\n\nexport default renderFn;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,SAAAA,YAAqBC,WAAA,EAAoB;MACjCC,SAAA,GAAY,CAAC,eAAe,YAAY;MAC1CA,SAAA,CAAUC,QAAA,CAASF,WAAA,GAAc;WAASA,WAAA,CAAYG,OAAA,CAAQ,gCAAgC,SAASC,WAAA;;SACpGJ,WAAA;AAAA;AAGT,SAAAK,SAAkBC,IAAA,EAAeC,KAAA,EAAkC;MAC3DC,UAAA,GAAaC,MAAA,CAAOC,IAAA,CAAKJ,IAAA,CAAKK,KAAA,EAAOC,MAAA,CAAO,CAACC,MAAA,EAAQC,GAAA,KAAQ;WAE1Df,WAAA,CAAYe,GAAA,KAAQR,IAAA,CAAKK,KAAA,CAAMG,GAAA;WAC/BD,MAAA;KACN;SACIE,CAAA,CACLT,IAAA,CAAKU,GAAA,EAAAC,aAAA,CAAAA,aAAA,KAEAT,UAAA,GACAD,KAAA,GAEJ,CAAAD,IAAA,CAAKY,QAAA,IAAY,IAAIC,GAAA,CAAKC,KAAA,IAAmBf,QAAA,CAASe,KAAA,EAAO;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}