{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport './dep-eca422c3.mjs';\nimport { t as toString_1 } from './dep-7932c2e8.mjs';\nimport { a as _castSlice, _ as _hasUnicode, b as _stringToArray } from './dep-d8a34055.mjs';\nimport { _ as _createCompounder } from './dep-5a17bf21.mjs';\nvar castSlice = _castSlice,\n  hasUnicode = _hasUnicode,\n  stringToArray = _stringToArray,\n  toString$1 = toString_1;\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst$1(methodName) {\n  return function (string) {\n    string = toString$1(string);\n    var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined;\n    var chr = strSymbols ? strSymbols[0] : string.charAt(0);\n    var trailing = strSymbols ? castSlice(strSymbols, 1).join('') : string.slice(1);\n    return chr[methodName]() + trailing;\n  };\n}\nvar _createCaseFirst = createCaseFirst$1;\nvar createCaseFirst = _createCaseFirst;\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst$1 = createCaseFirst('toUpperCase');\nvar upperFirst_1 = upperFirst$1;\nvar toString = toString_1,\n  upperFirst = upperFirst_1;\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize$1(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\nvar capitalize_1 = capitalize$1;\nvar capitalize = capitalize_1,\n  createCompounder = _createCompounder;\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function (result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\nvar camelCase_1 = camelCase;\nexport { camelCase_1 as c, upperFirst_1 as u };","map":{"version":3,"names":["castSlice","_castSlice","hasUnicode","_hasUnicode","stringToArray","_stringToArray","toString$1","toString_1","createCaseFirst$1","methodName","string","strSymbols","undefined","chr","charAt","trailing","join","slice","_createCaseFirst","createCaseFirst","upperFirst$1","upperFirst_1","toString","upperFirst","capitalize$1","toLowerCase","capitalize_1","capitalize","createCompounder","_createCompounder","camelCase","result","word","index","camelCase_1"],"sources":["../../node_modules/lodash/_createCaseFirst.js","../../node_modules/lodash/upperFirst.js","../../node_modules/lodash/capitalize.js","../../node_modules/lodash/camelCase.js"],"sourcesContent":["var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","var capitalize = require('./capitalize'),\n    createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\n\nmodule.exports = camelCase;\n"],"mappings":";;;;;;;;;;AAAA,IAAIA,SAAS,GAAGC,UAAuB;EACnCC,UAAU,GAAGC,WAAwB;EACrCC,aAAa,GAAGC,cAA2B;EAC3CC,UAAQ,GAAGC,UAAqB;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,iBAAeA,CAACC,UAAU,EAAE;EACnC,OAAO,UAASC,MAAM,EAAE;IACtBA,MAAM,GAAGJ,UAAQ,CAACI,MAAM,CAAC;IAEzB,IAAIC,UAAU,GAAGT,UAAU,CAACQ,MAAM,CAAC,GAC/BN,aAAa,CAACM,MAAM,CAAC,GACrBE,SAAS;IAEb,IAAIC,GAAG,GAAGF,UAAU,GAChBA,UAAU,CAAC,CAAC,CAAC,GACbD,MAAM,CAACI,MAAM,CAAC,CAAC,CAAC;IAEpB,IAAIC,QAAQ,GAAGJ,UAAU,GACrBX,SAAS,CAACW,UAAU,EAAE,CAAC,CAAC,CAACK,IAAI,CAAC,EAAE,CAAC,GACjCN,MAAM,CAACO,KAAK,CAAC,CAAC,CAAC;IAEnB,OAAOJ,GAAG,CAACJ,UAAU,CAAC,EAAE,GAAGM,QAAQ;GACpC;AACH;AAEA,IAAAG,gBAAc,GAAGV,iBAAe;AChChC,IAAIW,eAAe,GAAGD,gBAA6B;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIE,YAAU,GAAGD,eAAe,CAAC,aAAa,CAAC;AAE/C,IAAAE,YAAc,GAAGD,YAAA;ACrBjB,IAAIE,QAAQ,GAAGf,UAAqB;EAChCgB,UAAU,GAAGF,YAAuB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,YAAUA,CAACd,MAAM,EAAE;EAC1B,OAAOa,UAAU,CAACD,QAAQ,CAACZ,MAAM,CAAC,CAACe,WAAW,EAAE,CAAC;AACnD;AAEA,IAAAC,YAAc,GAAGF,YAAU;ACtB3B,IAAIG,UAAU,GAAGD,YAAuB;EACpCE,gBAAgB,GAAGC,iBAA8B;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,SAAS,GAAGF,gBAAgB,CAAC,UAASG,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAE;EAC7DD,IAAI,GAAGA,IAAI,CAACP,WAAW,EAAE;EACzB,OAAOM,MAAM,IAAIE,KAAK,GAAGN,UAAU,CAACK,IAAI,CAAC,GAAGA,IAAI,CAAC;AACnD,CAAC,CAAC;AAEF,IAAAE,WAAc,GAAGJ,SAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}