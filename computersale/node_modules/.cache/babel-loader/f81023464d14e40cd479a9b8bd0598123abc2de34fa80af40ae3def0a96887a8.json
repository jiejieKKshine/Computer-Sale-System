{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\n/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport { _ as _typeof } from '../_chunks/dep-4659d73b.mjs';\nimport { i as isFunction_1 } from '../_chunks/dep-06dcbf4c.mjs';\nimport { g as get_1 } from '../_chunks/dep-ae202bc0.mjs';\nimport { i as isObject_1 } from '../_chunks/dep-2b09875b.mjs';\nimport '../_chunks/dep-eca422c3.mjs';\nimport '../_chunks/dep-bf7257e7.mjs';\nimport '../_chunks/dep-cda4f568.mjs';\nimport '../_chunks/dep-aeaef131.mjs';\nimport '../_chunks/dep-eae2a67e.mjs';\nimport '../_chunks/dep-626c497d.mjs';\nimport '../_chunks/dep-ab4bb9b8.mjs';\nimport '../_chunks/dep-29ef8419.mjs';\nimport '../_chunks/dep-6ab5363f.mjs';\nimport '../_chunks/dep-6dc3d0e1.mjs';\nimport '../_chunks/dep-76958824.mjs';\nimport '../_chunks/dep-e9841b9e.mjs';\nimport '../_chunks/dep-7932c2e8.mjs';\nfunction toString(obj) {\n  return Object.prototype.toString.call(obj).slice(8, -1).toLowerCase();\n}\nfunction debounce(fn) {\n  var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 200;\n  var timer;\n  return function newFn() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var context = this;\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      fn.apply(context, args);\n    }, delay);\n  };\n}\nfunction formatRowAttributes(attributes, params) {\n  if (!attributes) return void 0;\n  var attrList = attributes instanceof Array ? attributes : [attributes];\n  var result = {};\n  for (var i = 0; i < attrList.length; i++) {\n    var attrItem = attrList[i];\n    if (!attrItem) continue;\n    var attrProperty = isFunction_1(attrItem) ? attrItem(params) : attrItem;\n    result = attrProperty instanceof Array ? formatRowAttributes(attrProperty, params) : Object.assign(result, attrProperty);\n  }\n  return result;\n}\nfunction formatRowClassNames(rowClassNames, params, rowKey) {\n  var rowClassList = rowClassNames instanceof Array ? rowClassNames : [rowClassNames];\n  var row = params.row,\n    rowIndex = params.rowIndex;\n  var customClasses = [];\n  for (var i = 0, len = rowClassList.length; i < len; i++) {\n    var rName = rowClassList[i];\n    var tClass = isFunction_1(rName) ? rName(params) : rName;\n    if (isObject_1(tClass) && !(tClass instanceof Array)) {\n      tClass[rowIndex] && (tClass = tClass[rowIndex]);\n      var rowId = get_1(row, rowKey || \"id\");\n      tClass[rowId] && (tClass = tClass[rowId]);\n    } else if (tClass instanceof Array) {\n      tClass = formatRowClassNames(tClass, params, rowKey);\n    }\n    customClasses = customClasses.concat(tClass);\n  }\n  return customClasses;\n}\nfunction formatClassNames(classNames, params) {\n  var classes = classNames instanceof Array ? classNames : [classNames];\n  var arr = [];\n  for (var i = 0, len = classes.length; i < len; i++) {\n    var cls = classes[i];\n    if (isFunction_1(cls)) {\n      arr.push(cls(params));\n    } else {\n      arr.push(cls);\n    }\n  }\n  return arr;\n}\nvar INNER_PRE_NAME = \"@@inner-\";\nfunction getCurrentRowByKey(columns, key) {\n  if (!columns || !key) return;\n  var col = columns === null || columns === void 0 ? void 0 : columns.find(function (t) {\n    return t.colKey === key;\n  });\n  if (col) return col;\n  for (var i = 0, len = columns.length; i < len; i++) {\n    var _columns$i;\n    if ((_columns$i = columns[i]) !== null && _columns$i !== void 0 && (_columns$i = _columns$i.children) !== null && _columns$i !== void 0 && _columns$i.length) {\n      var _columns$i2;\n      return getCurrentRowByKey((_columns$i2 = columns[i]) === null || _columns$i2 === void 0 ? void 0 : _columns$i2.children, key);\n    }\n  }\n}\nfunction getAffixProps(mainAffixProps, subAffixProps) {\n  if (_typeof(mainAffixProps) === \"object\") return mainAffixProps;\n  if (_typeof(subAffixProps) === \"object\") return subAffixProps;\n  return {};\n}\nexport { INNER_PRE_NAME, debounce, formatClassNames, formatRowAttributes, formatRowClassNames, getAffixProps, getCurrentRowByKey, toString };","map":{"version":3,"names":["toString","obj","Object","prototype","call","slice","toLowerCase","debounce","fn","delay","arguments","length","undefined","timer","newFn","_len","args","Array","_key","context","clearTimeout","setTimeout","apply","formatRowAttributes","attributes","params","attrList","result","i","attrItem","attrProperty","isFunction_1","assign","formatRowClassNames","rowClassNames","rowKey","rowClassList","row","rowIndex","customClasses","len","rName","tClass","isObject_1","rowId","get_1","concat","formatClassNames","classNames","classes","arr","cls","push","INNER_PRE_NAME","getCurrentRowByKey","columns","key","col","find","t","colKey","_columns$i","children","_columns$i2","getAffixProps","mainAffixProps","subAffixProps","_typeof"],"sources":["../../src/table/utils.ts"],"sourcesContent":["import isFunction from 'lodash/isFunction';\nimport get from 'lodash/get';\nimport isObject from 'lodash/isObject';\nimport { CellData, RowClassNameParams, TableColumnClassName, TableRowData, TdBaseTableProps } from './type';\nimport { ClassName, HTMLElementAttributes } from '../common';\nimport { AffixProps } from '../affix';\n\nexport function toString(obj: any): string {\n  return Object.prototype.toString.call(obj).slice(8, -1).toLowerCase();\n}\n\nexport function debounce<T = any>(fn: Function, delay = 200): () => void {\n  let timer: ReturnType<typeof setTimeout>;\n  return function newFn(this: T, ...args: Array<any>): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const context = this;\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      fn.apply(context, args);\n    }, delay);\n  };\n}\n\nexport interface FormatRowAttributesParams {\n  row: TableRowData;\n  rowIndex: number;\n  type: 'body' | 'foot';\n}\n\n// 行属性\nexport function formatRowAttributes(attributes: TdBaseTableProps['rowAttributes'], params: FormatRowAttributesParams) {\n  if (!attributes) return undefined;\n  const attrList = attributes instanceof Array ? attributes : [attributes];\n  let result: HTMLElementAttributes = {};\n  for (let i = 0; i < attrList.length; i++) {\n    const attrItem = attrList[i];\n    if (!attrItem) continue;\n    const attrProperty = isFunction(attrItem) ? attrItem(params) : attrItem;\n    result =\n      attrProperty instanceof Array ? formatRowAttributes(attrProperty, params) : Object.assign(result, attrProperty);\n  }\n  return result;\n}\n\n// 行类名，['A', 'B']，[() => 'A', () => 'B']\nexport function formatRowClassNames(\n  rowClassNames: TdBaseTableProps['rowClassName'],\n  params: RowClassNameParams<TableRowData>,\n  rowKey: string,\n) {\n  const rowClassList = rowClassNames instanceof Array ? rowClassNames : [rowClassNames];\n  const { row, rowIndex } = params;\n  // 自定义行类名\n  let customClasses: ClassName = [];\n  for (let i = 0, len = rowClassList.length; i < len; i++) {\n    const rName = rowClassList[i];\n    let tClass = isFunction(rName) ? rName(params) : rName;\n    if (isObject(tClass) && !(tClass instanceof Array)) {\n      // 根据下标设置行类名\n      tClass[rowIndex] && (tClass = tClass[rowIndex]);\n      // 根据行唯一标识设置行类名\n      const rowId = get(row, rowKey || 'id');\n      tClass[rowId] && (tClass = tClass[rowId]);\n    } else if (tClass instanceof Array) {\n      tClass = formatRowClassNames(tClass, params, rowKey);\n    }\n    customClasses = customClasses.concat(tClass);\n  }\n  return customClasses;\n}\n\nexport function formatClassNames(\n  classNames: TableColumnClassName<TableRowData> | TableColumnClassName<TableRowData>[],\n  params: CellData<TableRowData>,\n) {\n  const classes = classNames instanceof Array ? classNames : [classNames];\n  const arr: any[] = [];\n  for (let i = 0, len = classes.length; i < len; i++) {\n    const cls = classes[i];\n    if (isFunction(cls)) {\n      arr.push(cls(params));\n    } else {\n      arr.push(cls);\n    }\n  }\n  return arr;\n}\n\nexport const INNER_PRE_NAME = '@@inner-';\n\n// 多级表头，列配置场景，获取 currentRow\nexport function getCurrentRowByKey<T extends { colKey?: string; children?: any[] }>(columns: T[], key: string): T {\n  if (!columns || !key) return;\n  const col = columns?.find((t) => t.colKey === key);\n  if (col) return col;\n  for (let i = 0, len = columns.length; i < len; i++) {\n    if (columns[i]?.children?.length) {\n      return getCurrentRowByKey(columns[i]?.children, key);\n    }\n  }\n}\n\n/** 透传 Affix 组件全部特性 */\nexport function getAffixProps(mainAffixProps: boolean | AffixProps, subAffixProps?: AffixProps) {\n  if (typeof mainAffixProps === 'object') return mainAffixProps;\n  if (typeof subAffixProps === 'object') return subAffixProps;\n  return {};\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}