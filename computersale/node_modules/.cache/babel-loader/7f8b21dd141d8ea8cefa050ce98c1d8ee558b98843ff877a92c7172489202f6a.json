{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nvar datePickerProps = {\n  allowInput: Boolean,\n  borderless: Boolean,\n  clearable: Boolean,\n  defaultTime: {\n    type: String,\n    \"default\": \"00:00:00\"\n  },\n  disableDate: {\n    type: [Object, Array, Function]\n  },\n  disabled: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  enableTimePicker: Boolean,\n  firstDayOfWeek: {\n    type: Number,\n    validator: function validator(val) {\n      if (!val) return true;\n      return [1, 2, 3, 4, 5, 6, 7].includes(val);\n    }\n  },\n  format: {\n    type: String,\n    \"default\": void 0\n  },\n  inputProps: {\n    type: Object\n  },\n  label: {\n    type: [String, Function]\n  },\n  mode: {\n    type: String,\n    \"default\": \"date\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"year\", \"quarter\", \"month\", \"week\", \"date\"].includes(val);\n    }\n  },\n  needConfirm: {\n    type: Boolean,\n    \"default\": true\n  },\n  placeholder: {\n    type: [String, Array],\n    \"default\": void 0\n  },\n  popupProps: {\n    type: Object\n  },\n  prefixIcon: {\n    type: Function\n  },\n  presets: {\n    type: Object\n  },\n  presetsPlacement: {\n    type: String,\n    \"default\": \"bottom\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"left\", \"top\", \"right\", \"bottom\"].includes(val);\n    }\n  },\n  readonly: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  selectInputProps: {\n    type: Object\n  },\n  size: {\n    type: String,\n    \"default\": \"medium\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"small\", \"medium\", \"large\"].includes(val);\n    }\n  },\n  status: {\n    type: String,\n    \"default\": \"default\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"default\", \"success\", \"warning\", \"error\"].includes(val);\n    }\n  },\n  suffixIcon: {\n    type: Function\n  },\n  timePickerProps: {\n    type: Object\n  },\n  tips: {\n    type: [String, Function]\n  },\n  value: {\n    type: [String, Number, Array, Date],\n    \"default\": void 0\n  },\n  modelValue: {\n    type: [String, Number, Array, Date],\n    \"default\": void 0\n  },\n  defaultValue: {\n    type: [String, Number, Array, Date],\n    \"default\": \"\"\n  },\n  valueDisplay: {\n    type: [String, Function]\n  },\n  valueType: {\n    type: String,\n    \"default\": \"\"\n  },\n  onBlur: Function,\n  onChange: Function,\n  onConfirm: Function,\n  onFocus: Function,\n  onPick: Function,\n  onPresetClick: Function\n};\nexport { datePickerProps as default };","map":{"version":3,"names":["datePickerProps","allowInput","Boolean","borderless","clearable","defaultTime","type","String","disableDate","Object","Array","Function","disabled","enableTimePicker","firstDayOfWeek","Number","validator","val","includes","format","inputProps","label","mode","needConfirm","placeholder","popupProps","prefixIcon","presets","presetsPlacement","readonly","selectInputProps","size","status","suffixIcon","timePickerProps","tips","value","Date","modelValue","defaultValue","valueDisplay","valueType","onBlur","onChange","onConfirm","onFocus","onPick","onPresetClick"],"sources":["../../src/date-picker/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdDatePickerProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 是否允许输入日期 */\n  allowInput: Boolean,\n  /** 无边框模式 */\n  borderless: Boolean,\n  /** 是否显示清除按钮 */\n  clearable: Boolean,\n  /** 时间选择器默认值，当 value/defaultValue 未设置值时有效 */\n  defaultTime: {\n    type: String,\n    default: '00:00:00',\n  },\n  /** 禁用日期，示例：['A', 'B'] 表示日期 A 和日期 B 会被禁用。`{ from: 'A', to: 'B' }` 表示在 A 到 B 之间的日期会被禁用。`{ before: 'A', after: 'B' }` 表示在 A 之前和在 B 之后的日期都会被禁用。其中 A = '2021-01-01'，B = '2021-02-01'。值类型为 Function 则表示返回值为 true 的日期会被禁用 */\n  disableDate: {\n    type: [Object, Array, Function] as PropType<TdDatePickerProps['disableDate']>,\n  },\n  /** 是否禁用组件 */\n  disabled: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 是否显示时间选择 */\n  enableTimePicker: Boolean,\n  /** 第一天从星期几开始 */\n  firstDayOfWeek: {\n    type: Number,\n    validator(val: TdDatePickerProps['firstDayOfWeek']): boolean {\n      if (!val) return true;\n      return [1, 2, 3, 4, 5, 6, 7].includes(val);\n    },\n  },\n  /** 仅用于格式化日期显示的格式，不影响日期值。注意和 `valueType` 的区别，`valueType`会直接决定日期值 `value` 的格式。全局配置默认为：'YYYY-MM-DD'，[详细文档](https://day.js.org/docs/en/display/format) */\n  format: {\n    type: String,\n    default: undefined,\n  },\n  /** 透传给输入框（Input）组件的参数 */\n  inputProps: {\n    type: Object as PropType<TdDatePickerProps['inputProps']>,\n  },\n  /** 左侧文本 */\n  label: {\n    type: [String, Function] as PropType<TdDatePickerProps['label']>,\n  },\n  /** 选择器模式 */\n  mode: {\n    type: String as PropType<TdDatePickerProps['mode']>,\n    default: 'date' as TdDatePickerProps['mode'],\n    validator(val: TdDatePickerProps['mode']): boolean {\n      if (!val) return true;\n      return ['year', 'quarter', 'month', 'week', 'date'].includes(val);\n    },\n  },\n  /** 决定在日期时间选择器的场景下是否需要点击确认按钮才完成选择动作，默认为`true` */\n  needConfirm: {\n    type: Boolean,\n    default: true,\n  },\n  /** 占位符 */\n  placeholder: {\n    type: [String, Array] as PropType<TdDatePickerProps['placeholder']>,\n    default: undefined as TdDatePickerProps['placeholder'],\n  },\n  /** 透传给 popup 组件的参数 */\n  popupProps: {\n    type: Object as PropType<TdDatePickerProps['popupProps']>,\n  },\n  /** 用于自定义组件前置图标 */\n  prefixIcon: {\n    type: Function as PropType<TdDatePickerProps['prefixIcon']>,\n  },\n  /** 预设快捷日期选择，示例：`{ '元旦': '2021-01-01', '昨天':  dayjs().subtract(1, 'day').format('YYYY-MM-DD'), '特定日期': () => ['2021-02-01'] }` */\n  presets: {\n    type: Object as PropType<TdDatePickerProps['presets']>,\n  },\n  /** 预设面板展示区域（包含确定按钮） */\n  presetsPlacement: {\n    type: String as PropType<TdDatePickerProps['presetsPlacement']>,\n    default: 'bottom' as TdDatePickerProps['presetsPlacement'],\n    validator(val: TdDatePickerProps['presetsPlacement']): boolean {\n      if (!val) return true;\n      return ['left', 'top', 'right', 'bottom'].includes(val);\n    },\n  },\n  /** 只读状态 */\n  readonly: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 透传 SelectInput 筛选器输入框组件的全部属性 */\n  selectInputProps: {\n    type: Object as PropType<TdDatePickerProps['selectInputProps']>,\n  },\n  /** 输入框尺寸 */\n  size: {\n    type: String as PropType<TdDatePickerProps['size']>,\n    default: 'medium' as TdDatePickerProps['size'],\n    validator(val: TdDatePickerProps['size']): boolean {\n      if (!val) return true;\n      return ['small', 'medium', 'large'].includes(val);\n    },\n  },\n  /** 输入框状态 */\n  status: {\n    type: String as PropType<TdDatePickerProps['status']>,\n    default: 'default' as TdDatePickerProps['status'],\n    validator(val: TdDatePickerProps['status']): boolean {\n      if (!val) return true;\n      return ['default', 'success', 'warning', 'error'].includes(val);\n    },\n  },\n  /** 用于自定义组件后置图标 */\n  suffixIcon: {\n    type: Function as PropType<TdDatePickerProps['suffixIcon']>,\n  },\n  /** 透传 TimePicker 组件属性 */\n  timePickerProps: {\n    type: Object as PropType<TdDatePickerProps['timePickerProps']>,\n  },\n  /** 输入框下方提示文本，会根据不同的 `status` 呈现不同的样式 */\n  tips: {\n    type: [String, Function] as PropType<TdDatePickerProps['tips']>,\n  },\n  /** 选中值 */\n  value: {\n    type: [String, Number, Array, Date] as PropType<TdDatePickerProps['value']>,\n    default: undefined as TdDatePickerProps['value'],\n  },\n  modelValue: {\n    type: [String, Number, Array, Date] as PropType<TdDatePickerProps['value']>,\n    default: undefined as TdDatePickerProps['value'],\n  },\n  /** 选中值，非受控属性 */\n  defaultValue: {\n    type: [String, Number, Array, Date] as PropType<TdDatePickerProps['defaultValue']>,\n    default: '' as TdDatePickerProps['defaultValue'],\n  },\n  /** 自定义选中项呈现的内容 */\n  valueDisplay: {\n    type: [String, Function] as PropType<TdDatePickerProps['valueDisplay']>,\n  },\n  /** 用于格式化日期的值，仅支持部分格式，时间戳、日期等。⚠️ `YYYYMMDD` 这种格式不支持，请勿使用，如果希望支持可以给 `dayjs` 提个 PR。注意和 `format` 的区别，`format` 仅用于处理日期在页面中呈现的格式。`ValueTypeEnum` 即将废弃，请更为使用 `DatePickerValueType` */\n  valueType: {\n    type: String as PropType<TdDatePickerProps['valueType']>,\n    default: '' as TdDatePickerProps['valueType'],\n  },\n  /** 当输入框失去焦点时触发 */\n  onBlur: Function as PropType<TdDatePickerProps['onBlur']>,\n  /** 选中值发生变化时触发 */\n  onChange: Function as PropType<TdDatePickerProps['onChange']>,\n  /** 如果存在“确定”按钮，则点击“确定”按钮时触发 */\n  onConfirm: Function as PropType<TdDatePickerProps['onConfirm']>,\n  /** 输入框获得焦点时触发 */\n  onFocus: Function as PropType<TdDatePickerProps['onFocus']>,\n  /** 面板选中值后触发 */\n  onPick: Function as PropType<TdDatePickerProps['onPick']>,\n  /** 点击预设按钮后触发 */\n  onPresetClick: Function as PropType<TdDatePickerProps['onPresetClick']>,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}