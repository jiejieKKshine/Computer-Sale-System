{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nvar props = {\n  align: {\n    type: String,\n    \"default\": \"left\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"left\", \"center\", \"right\"].includes(val);\n    }\n  },\n  allowInputOverMax: Boolean,\n  autoWidth: Boolean,\n  autocomplete: {\n    type: String,\n    \"default\": void 0\n  },\n  autofocus: Boolean,\n  borderless: Boolean,\n  clearable: Boolean,\n  disabled: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  format: {\n    type: Function\n  },\n  inputClass: {\n    type: [String, Object, Array]\n  },\n  label: {\n    type: [String, Function]\n  },\n  maxcharacter: {\n    type: Number\n  },\n  maxlength: {\n    type: [String, Number]\n  },\n  name: {\n    type: String,\n    \"default\": \"\"\n  },\n  placeholder: {\n    type: String,\n    \"default\": void 0\n  },\n  prefixIcon: {\n    type: Function\n  },\n  readonly: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  showClearIconOnEmpty: Boolean,\n  showLimitNumber: Boolean,\n  size: {\n    type: String,\n    \"default\": \"medium\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"small\", \"medium\", \"large\"].includes(val);\n    }\n  },\n  spellCheck: Boolean,\n  status: {\n    type: String,\n    \"default\": \"default\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"default\", \"success\", \"warning\", \"error\"].includes(val);\n    }\n  },\n  suffix: {\n    type: [String, Function]\n  },\n  suffixIcon: {\n    type: Function\n  },\n  tips: {\n    type: [String, Function]\n  },\n  type: {\n    type: String,\n    \"default\": \"text\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"text\", \"number\", \"url\", \"tel\", \"password\", \"search\", \"submit\", \"hidden\"].includes(val);\n    }\n  },\n  value: {\n    type: [String, Number],\n    \"default\": void 0\n  },\n  modelValue: {\n    type: [String, Number],\n    \"default\": void 0\n  },\n  defaultValue: {\n    type: [String, Number]\n  },\n  onBlur: Function,\n  onChange: Function,\n  onClear: Function,\n  onClick: Function,\n  onCompositionend: Function,\n  onCompositionstart: Function,\n  onEnter: Function,\n  onFocus: Function,\n  onKeydown: Function,\n  onKeypress: Function,\n  onKeyup: Function,\n  onMouseenter: Function,\n  onMouseleave: Function,\n  onPaste: Function,\n  onValidate: Function,\n  onWheel: Function\n};\nexport { props as default };","map":{"version":3,"names":["props","align","type","String","validator","val","includes","allowInputOverMax","Boolean","autoWidth","autocomplete","autofocus","borderless","clearable","disabled","format","Function","inputClass","Object","Array","label","maxcharacter","Number","maxlength","name","placeholder","prefixIcon","readonly","showClearIconOnEmpty","showLimitNumber","size","spellCheck","status","suffix","suffixIcon","tips","value","modelValue","defaultValue","onBlur","onChange","onClear","onClick","onCompositionend","onCompositionstart","onEnter","onFocus","onKeydown","onKeypress","onKeyup","onMouseenter","onMouseleave","onPaste","onValidate","onWheel"],"sources":["../../src/input/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdInputProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 文本内容位置，居左/居中/居右 */\n  align: {\n    type: String as PropType<TdInputProps['align']>,\n    default: 'left' as TdInputProps['align'],\n    validator(val: TdInputProps['align']): boolean {\n      if (!val) return true;\n      return ['left', 'center', 'right'].includes(val);\n    },\n  },\n  /** 超出 `maxlength` 或 `maxcharacter` 之后是否允许继续输入 */\n  allowInputOverMax: Boolean,\n  /** 宽度随内容自适应 */\n  autoWidth: Boolean,\n  /** 是否开启自动填充功能，HTML5 原生属性，[点击查看详情](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete) */\n  autocomplete: {\n    type: String,\n    default: undefined,\n  },\n  /** 自动聚焦 */\n  autofocus: Boolean,\n  /** 是否开启无边框模式 */\n  borderless: Boolean,\n  /** 是否可清空 */\n  clearable: Boolean,\n  /** 是否禁用输入框 */\n  disabled: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 指定输入框展示值的格式。注意 `type=number` 时请勿使用，此功能建议更为使用 `InputNumber` 组件 */\n  format: {\n    type: Function as PropType<TdInputProps['format']>,\n  },\n  /** t-input 同级类名，示例：'name1 name2 name3' 或 `['name1', 'name2']` 或 `[{ 'name1': true }]` */\n  inputClass: {\n    type: [String, Object, Array] as PropType<TdInputProps['inputClass']>,\n  },\n  /** 左侧文本 */\n  label: {\n    type: [String, Function] as PropType<TdInputProps['label']>,\n  },\n  /** 用户最多可以输入的字符个数，一个中文汉字表示两个字符长度。`maxcharacter` 和 `maxlength` 二选一使用 */\n  maxcharacter: {\n    type: Number,\n  },\n  /** 用户最多可以输入的文本长度，一个中文等于一个计数长度。默认为空，不限制输入长度。`maxcharacter` 和 `maxlength` 二选一使用 */\n  maxlength: {\n    type: [String, Number] as PropType<TdInputProps['maxlength']>,\n  },\n  /** 名称 */\n  name: {\n    type: String,\n    default: '',\n  },\n  /** 占位符 */\n  placeholder: {\n    type: String,\n    default: undefined,\n  },\n  /** 组件前置图标 */\n  prefixIcon: {\n    type: Function as PropType<TdInputProps['prefixIcon']>,\n  },\n  /** 只读状态 */\n  readonly: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 输入框内容为空时，悬浮状态是否显示清空按钮，默认不显示 */\n  showClearIconOnEmpty: Boolean,\n  /** 是否在输入框右侧显示字数统计 */\n  showLimitNumber: Boolean,\n  /** 输入框尺寸 */\n  size: {\n    type: String as PropType<TdInputProps['size']>,\n    default: 'medium' as TdInputProps['size'],\n    validator(val: TdInputProps['size']): boolean {\n      if (!val) return true;\n      return ['small', 'medium', 'large'].includes(val);\n    },\n  },\n  /** 是否开启拼写检查，HTML5 原生属性，[点击查看详情](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/spellcheck) */\n  spellCheck: Boolean,\n  /** 输入框状态 */\n  status: {\n    type: String as PropType<TdInputProps['status']>,\n    default: 'default' as TdInputProps['status'],\n    validator(val: TdInputProps['status']): boolean {\n      if (!val) return true;\n      return ['default', 'success', 'warning', 'error'].includes(val);\n    },\n  },\n  /** 后置图标前的后置内容 */\n  suffix: {\n    type: [String, Function] as PropType<TdInputProps['suffix']>,\n  },\n  /** 组件后置图标 */\n  suffixIcon: {\n    type: Function as PropType<TdInputProps['suffixIcon']>,\n  },\n  /** 输入框下方提示文本，会根据不同的 `status` 呈现不同的样式 */\n  tips: {\n    type: [String, Function] as PropType<TdInputProps['tips']>,\n  },\n  /** 输入框类型。`type=number` 仅支持最基础的数字输入功能，更多功能建议使用 `InputNumber` 组件 */\n  type: {\n    type: String as PropType<TdInputProps['type']>,\n    default: 'text' as TdInputProps['type'],\n    validator(val: TdInputProps['type']): boolean {\n      if (!val) return true;\n      return ['text', 'number', 'url', 'tel', 'password', 'search', 'submit', 'hidden'].includes(val);\n    },\n  },\n  /** 输入框的值 */\n  value: {\n    type: [String, Number] as PropType<TdInputProps['value']>,\n    default: undefined as TdInputProps['value'],\n  },\n  modelValue: {\n    type: [String, Number] as PropType<TdInputProps['value']>,\n    default: undefined as TdInputProps['value'],\n  },\n  /** 输入框的值，非受控属性 */\n  defaultValue: {\n    type: [String, Number] as PropType<TdInputProps['defaultValue']>,\n  },\n  /** 失去焦点时触发 */\n  onBlur: Function as PropType<TdInputProps['onBlur']>,\n  /** 输入框值发生变化时触发。参数 `trigger=initial` 表示传入的数据不符合预期，组件自动处理后触发 change 告知父组件。如：初始值长度超过 `maxlength` 限制 */\n  onChange: Function as PropType<TdInputProps['onChange']>,\n  /** 清空按钮点击时触发 */\n  onClear: Function as PropType<TdInputProps['onClear']>,\n  /** 点击组件时触发 */\n  onClick: Function as PropType<TdInputProps['onClick']>,\n  /** 中文输入结束时触发 */\n  onCompositionend: Function as PropType<TdInputProps['onCompositionend']>,\n  /** 中文输入开始时触发 */\n  onCompositionstart: Function as PropType<TdInputProps['onCompositionstart']>,\n  /** 回车键按下时触发 */\n  onEnter: Function as PropType<TdInputProps['onEnter']>,\n  /** 获得焦点时触发 */\n  onFocus: Function as PropType<TdInputProps['onFocus']>,\n  /** 键盘按下时触发 */\n  onKeydown: Function as PropType<TdInputProps['onKeydown']>,\n  /** 按下字符键时触发（keydown -> keypress -> keyup） */\n  onKeypress: Function as PropType<TdInputProps['onKeypress']>,\n  /** 释放键盘时触发 */\n  onKeyup: Function as PropType<TdInputProps['onKeyup']>,\n  /** 进入输入框时触发 */\n  onMouseenter: Function as PropType<TdInputProps['onMouseenter']>,\n  /** 离开输入框时触发 */\n  onMouseleave: Function as PropType<TdInputProps['onMouseleave']>,\n  /** 粘贴事件，`pasteValue` 表示粘贴板的内容 */\n  onPaste: Function as PropType<TdInputProps['onPaste']>,\n  /** 字数超出限制时触发 */\n  onValidate: Function as PropType<TdInputProps['onValidate']>,\n  /** 输入框中滚动鼠标时触发 */\n  onWheel: Function as PropType<TdInputProps['onWheel']>,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}