{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nvar props = {\n  allowInputOverMax: Boolean,\n  autofocus: Boolean,\n  autosize: {\n    type: [Boolean, Object],\n    \"default\": false\n  },\n  disabled: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  maxcharacter: {\n    type: Number\n  },\n  maxlength: {\n    type: [String, Number]\n  },\n  name: {\n    type: String,\n    \"default\": \"\"\n  },\n  placeholder: {\n    type: String,\n    \"default\": void 0\n  },\n  readonly: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  status: {\n    type: String,\n    \"default\": \"default\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"default\", \"success\", \"warning\", \"error\"].includes(val);\n    }\n  },\n  tips: {\n    type: [String, Function]\n  },\n  value: {\n    type: [String, Number],\n    \"default\": void 0\n  },\n  modelValue: {\n    type: [String, Number],\n    \"default\": void 0\n  },\n  defaultValue: {\n    type: [String, Number]\n  },\n  onBlur: Function,\n  onChange: Function,\n  onFocus: Function,\n  onKeydown: Function,\n  onKeypress: Function,\n  onKeyup: Function,\n  onValidate: Function\n};\nexport { props as default };","map":{"version":3,"names":["props","allowInputOverMax","Boolean","autofocus","autosize","type","Object","disabled","maxcharacter","Number","maxlength","String","name","placeholder","readonly","status","validator","val","includes","tips","Function","value","modelValue","defaultValue","onBlur","onChange","onFocus","onKeydown","onKeypress","onKeyup","onValidate"],"sources":["../../src/textarea/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdTextareaProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 超出maxlength或maxcharacter之后是否还允许输入 */\n  allowInputOverMax: Boolean,\n  /** 自动聚焦，拉起键盘 */\n  autofocus: Boolean,\n  /** 高度自动撑开。 autosize = true 表示组件高度自动撑开，同时，依旧允许手动拖高度。如果设置了 autosize.maxRows 或者 autosize.minRows 则不允许手动调整高度 */\n  autosize: {\n    type: [Boolean, Object] as PropType<TdTextareaProps['autosize']>,\n    default: false as TdTextareaProps['autosize'],\n  },\n  /** 是否禁用文本框 */\n  disabled: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 用户最多可以输入的字符个数，一个中文汉字表示两个字符长度 */\n  maxcharacter: {\n    type: Number,\n  },\n  /** 用户最多可以输入的字符个数 */\n  maxlength: {\n    type: [String, Number] as PropType<TdTextareaProps['maxlength']>,\n  },\n  /** 名称，HTML 元素原生属性 */\n  name: {\n    type: String,\n    default: '',\n  },\n  /** 占位符 */\n  placeholder: {\n    type: String,\n    default: undefined,\n  },\n  /** 只读状态 */\n  readonly: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 文本框状态 */\n  status: {\n    type: String as PropType<TdTextareaProps['status']>,\n    default: 'default' as TdTextareaProps['status'],\n    validator(val: TdTextareaProps['status']): boolean {\n      if (!val) return true;\n      return ['default', 'success', 'warning', 'error'].includes(val);\n    },\n  },\n  /** 输入框下方提示文本，会根据不同的 `status` 呈现不同的样式 */\n  tips: {\n    type: [String, Function] as PropType<TdTextareaProps['tips']>,\n  },\n  /** 文本框值 */\n  value: {\n    type: [String, Number] as PropType<TdTextareaProps['value']>,\n    default: undefined as TdTextareaProps['value'],\n  },\n  modelValue: {\n    type: [String, Number] as PropType<TdTextareaProps['value']>,\n    default: undefined as TdTextareaProps['value'],\n  },\n  /** 文本框值，非受控属性 */\n  defaultValue: {\n    type: [String, Number] as PropType<TdTextareaProps['defaultValue']>,\n  },\n  /** 失去焦点时触发 */\n  onBlur: Function as PropType<TdTextareaProps['onBlur']>,\n  /** 输入内容变化时触发 */\n  onChange: Function as PropType<TdTextareaProps['onChange']>,\n  /** 获得焦点时触发 */\n  onFocus: Function as PropType<TdTextareaProps['onFocus']>,\n  /** 键盘按下时触发 */\n  onKeydown: Function as PropType<TdTextareaProps['onKeydown']>,\n  /** 按下字符键时触发（keydown -> keypress -> keyup） */\n  onKeypress: Function as PropType<TdTextareaProps['onKeypress']>,\n  /** 释放键盘时触发 */\n  onKeyup: Function as PropType<TdTextareaProps['onKeyup']>,\n  /** 字数超出限制时触发 */\n  onValidate: Function as PropType<TdTextareaProps['onValidate']>,\n};\n"],"mappings":";;;;;;AASA,IAAAA,KAAA,GAAe;EAEbC,iBAAmB,EAAAC,OAAA;EAEnBC,SAAW,EAAAD,OAAA;EAEXE,QAAU;IACRC,IAAA,EAAM,CAACH,OAAA,EAASI,MAAM;IACtB,SAAS;GACX;EAEAC,QAAU;IACRF,IAAM,EAAAH,OAAA;IACN,WAAS;GACX;EAEAM,YAAc;IACZH,IAAM,EAAAI;GACR;EAEAC,SAAW;IACTL,IAAA,EAAM,CAACM,MAAA,EAAQF,MAAM;GACvB;EAEAG,IAAM;IACJP,IAAM,EAAAM,MAAA;IACN,SAAS;GACX;EAEAE,WAAa;IACXR,IAAM,EAAAM,MAAA;IACN,WAAS;GACX;EAEAG,QAAU;IACRT,IAAM,EAAAH,OAAA;IACN,WAAS;GACX;EAEAa,MAAQ;IACNV,IAAM,EAAAM,MAAA;IACN,WAAS;IACTK,SAAA,WAAAA,UAAUC,GAAyC;MACjD,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,SAAW,aAAW,WAAW,OAAO,EAAEC,QAAA,CAASD,GAAG;IAChE;GACF;EAEAE,IAAM;IACJd,IAAA,EAAM,CAACM,MAAA,EAAQS,QAAQ;GACzB;EAEAC,KAAO;IACLhB,IAAA,EAAM,CAACM,MAAA,EAAQF,MAAM;IACrB,WAAS;GACX;EACAa,UAAY;IACVjB,IAAA,EAAM,CAACM,MAAA,EAAQF,MAAM;IACrB,WAAS;GACX;EAEAc,YAAc;IACZlB,IAAA,EAAM,CAACM,MAAA,EAAQF,MAAM;GACvB;EAEAe,MAAQ,EAAAJ,QAAA;EAERK,QAAU,EAAAL,QAAA;EAEVM,OAAS,EAAAN,QAAA;EAETO,SAAW,EAAAP,QAAA;EAEXQ,UAAY,EAAAR,QAAA;EAEZS,OAAS,EAAAT,QAAA;EAETU,UAAY,EAAAV;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}