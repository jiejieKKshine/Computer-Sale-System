{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport './dep-eca422c3.mjs';\nimport { a as _arrayPush } from './dep-732f0b7d.mjs';\nimport { a as _Symbol$1 } from './dep-bf7257e7.mjs';\nimport { i as isArguments_1 } from './dep-3c65fae8.mjs';\nimport { i as isArray_1 } from './dep-eae2a67e.mjs';\nimport './dep-626c497d.mjs';\nimport { _ as _overRest, a as _setToString } from './dep-02f9394e.mjs';\nvar _Symbol = _Symbol$1,\n  isArguments = isArguments_1,\n  isArray = isArray_1;\n\n/** Built-in value references. */\nvar spreadableSymbol = _Symbol ? _Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable$1(value) {\n  return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\nvar _isFlattenable = isFlattenable$1;\nvar arrayPush = _arrayPush,\n  isFlattenable = _isFlattenable;\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten$1(array, depth, predicate, isStrict, result) {\n  var index = -1,\n    length = array.length;\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten$1(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\nvar _baseFlatten = baseFlatten$1;\nvar baseFlatten = _baseFlatten;\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten$1(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\nvar flatten_1 = flatten$1;\nvar flatten = flatten_1,\n  overRest = _overRest,\n  setToString = _setToString;\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\nvar _flatRest = flatRest;\nexport { _flatRest as _, _baseFlatten as a };","map":{"version":3,"names":["_Symbol","_Symbol$1","isArguments","isArguments_1","isArray","isArray_1","spreadableSymbol","isConcatSpreadable","undefined","isFlattenable$1","value","_isFlattenable","arrayPush","_arrayPush","isFlattenable","baseFlatten$1","array","depth","predicate","isStrict","result","index","length","_baseFlatten","baseFlatten","flatten$1","flatten_1","flatten","overRest","_overRest","setToString","_setToString","flatRest","func","_flatRest"],"sources":["../../node_modules/lodash/_isFlattenable.js","../../node_modules/lodash/_baseFlatten.js","../../node_modules/lodash/flatten.js","../../node_modules/lodash/_flatRest.js"],"sourcesContent":["var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","var flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n"],"mappings":";;;;;;;;;;;;;AAAA,IAAIA,OAAM,GAAGC,SAAoB;EAC7BC,WAAW,GAAGC,aAAwB;EACtCC,OAAO,GAAGC,SAAoB;;AAElC;AACA,IAAIC,gBAAgB,GAAGN,OAAM,GAAGA,OAAM,CAACO,kBAAkB,GAAGC,SAAS;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,eAAaA,CAACC,KAAK,EAAE;EAC5B,OAAON,OAAO,CAACM,KAAK,CAAC,IAAIR,WAAW,CAACQ,KAAK,CAAC,IACzC,CAAC,EAAEJ,gBAAgB,IAAII,KAAK,IAAIA,KAAK,CAACJ,gBAAgB,CAAC,CAAC;AAC5D;AAEA,IAAAK,cAAc,GAAGF,eAAa;ACnB9B,IAAIG,SAAS,GAAGC,UAAuB;EACnCC,aAAa,GAAGH,cAA2B;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,aAAWA,CAACC,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAE;EAC9D,IAAIC,KAAK,GAAG,CAAC,CAAC;IACVC,MAAM,GAAGN,KAAK,CAACM,MAAM;EAEzBJ,SAAS,KAAKA,SAAS,GAAGJ,aAAa,CAAC;EACxCM,MAAM,KAAKA,MAAM,GAAG,EAAE,CAAC;EAEvB,OAAO,EAAEC,KAAK,GAAGC,MAAM,EAAE;IACvB,IAAIZ,KAAK,GAAGM,KAAK,CAACK,KAAK,CAAC;IACxB,IAAIJ,KAAK,GAAG,CAAC,IAAIC,SAAS,CAACR,KAAK,CAAC,EAAE;MACjC,IAAIO,KAAK,GAAG,CAAC,EAAE;QACrB;QACQF,aAAW,CAACL,KAAK,EAAEO,KAAK,GAAG,CAAC,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,CAAC;MAClE,CAAO,MAAM;QACLR,SAAS,CAACQ,MAAM,EAAEV,KAAK,CAAC;MACzB;IACP,CAAK,MAAM,IAAI,CAACS,QAAQ,EAAE;MACpBC,MAAM,CAACA,MAAM,CAACE,MAAM,CAAC,GAAGZ,KAAK;IAC9B;EACF;EACD,OAAOU,MAAM;AACf;AAEA,IAAAG,YAAc,GAAGR,aAAA;ACrCjB,IAAIS,WAAW,GAAGD,YAAyB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,SAAOA,CAACT,KAAK,EAAE;EACtB,IAAIM,MAAM,GAAGN,KAAK,IAAI,IAAI,GAAG,CAAC,GAAGA,KAAK,CAACM,MAAM;EAC7C,OAAOA,MAAM,GAAGE,WAAW,CAACR,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE;AAC5C;AAEA,IAAAU,SAAc,GAAGD,SAAO;ACrBxB,IAAIE,OAAO,GAAGD,SAAoB;EAC9BE,QAAQ,GAAGC,SAAsB;EACjCC,WAAW,GAAGC,YAAyB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,QAAQA,CAACC,IAAI,EAAE;EACtB,OAAOH,WAAW,CAACF,QAAQ,CAACK,IAAI,EAAEzB,SAAS,EAAEmB,OAAO,CAAC,EAAEM,IAAI,GAAG,EAAE,CAAC;AACnE;AAEA,IAAAC,SAAc,GAAGF,QAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}