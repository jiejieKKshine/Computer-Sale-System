{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport { c as commonjsGlobal } from './dep-eca422c3.mjs';\nimport { _ as _typeof } from './dep-4659d73b.mjs';\nvar freeGlobal$1 = _typeof(commonjsGlobal) == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;\nvar _freeGlobal = freeGlobal$1;\nvar freeGlobal = _freeGlobal;\n\n/** Detect free variable `self`. */\nvar freeSelf = (typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root$1 = freeGlobal || freeSelf || Function('return this')();\nvar _root = root$1;\nvar root = _root;\n\n/** Built-in value references. */\nvar _Symbol2 = root.Symbol;\nvar _Symbol$2 = _Symbol2;\nvar _Symbol$1 = _Symbol$2;\n\n/** Used for built-in method references. */\nvar objectProto$1 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto$1.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString$1 = objectProto$1.toString;\n\n/** Built-in value references. */\nvar symToStringTag$1 = _Symbol$1 ? _Symbol$1.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag$1(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag$1),\n    tag = value[symToStringTag$1];\n  try {\n    value[symToStringTag$1] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n  var result = nativeObjectToString$1.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag$1] = tag;\n    } else {\n      delete value[symToStringTag$1];\n    }\n  }\n  return result;\n}\nvar _getRawTag = getRawTag$1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString$1(value) {\n  return nativeObjectToString.call(value);\n}\nvar _objectToString = objectToString$1;\nvar _Symbol = _Symbol$2,\n  getRawTag = _getRawTag,\n  objectToString = _objectToString;\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n  undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\nvar _baseGetTag = baseGetTag;\nexport { _baseGetTag as _, _Symbol$2 as a, _root as b, _freeGlobal as c };","map":{"version":3,"names":["freeGlobal$1","_typeof","commonjsGlobal","Object","_freeGlobal","freeGlobal","freeSelf","self","root$1","Function","_root","root","_Symbol2","Symbol","_Symbol$2","_Symbol$1","objectProto$1","prototype","hasOwnProperty","nativeObjectToString$1","toString","symToStringTag$1","toStringTag","undefined","getRawTag$1","value","isOwn","call","tag","unmasked","e","result","_getRawTag","objectProto","nativeObjectToString","objectToString$1","_objectToString","_Symbol","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","baseGetTag","_baseGetTag"],"sources":["../../node_modules/lodash/_freeGlobal.js","../../node_modules/lodash/_root.js","../../node_modules/lodash/_Symbol.js","../../node_modules/lodash/_getRawTag.js","../../node_modules/lodash/_objectToString.js","../../node_modules/lodash/_baseGetTag.js"],"sourcesContent":["/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}