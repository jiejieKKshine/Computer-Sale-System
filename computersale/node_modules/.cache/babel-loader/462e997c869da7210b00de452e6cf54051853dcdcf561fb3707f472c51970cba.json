{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\n/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport log from '../log/log.mjs';\nvar IMAGE_REGEXP = /(.png|.jpg|.jpeg|.jpe|.webp|.avif|.svg|.gif|.bmp)/i;\nvar IMAGE_ALL_REGEXP = /(.png|.jpg|.jpeg|.jpe|.webp|.avif|.svg|.gif|.bmp|.dwg|.dxf|.svf|.tif|.tiff|.arw)/i;\nvar FILE_PDF_REGEXP = /(.pdf)/i;\nvar FILE_EXCEL_REGEXP = /(.xlsx|.xls|.csv|.xlc|.xlm|.xlt|.xlw)/i;\nvar FILE_WORD_REGEXP = /(.dox|docx|.document|.wps|.wdb|.msword)/i;\nvar FILE_PPT_REGEXP = /(.ppt|.pptx|.key)/i;\nvar VIDEO_REGEXP = /(.avi|.mp4|.wmv|.mpg|.mpeg|.mov|.rm|.ram|.swf|.flv|.rmvb|.flash|.mid|.3gp)/i;\nvar AUDIO_REGEXP = /(.mp2|.mp3|.mp4|.ogg|.3gpp|.ac3|.au)/i;\nvar INPUT_FILE_MAP = {\n  \"audio/*\": AUDIO_REGEXP,\n  \"video/*\": VIDEO_REGEXP,\n  \"image/*\": IMAGE_ALL_REGEXP,\n  \".ico\": /image\\/vnd.microsoft.icon/i,\n  \".doc\": /application\\/msword/i,\n  \".docx\": /application\\/vnd.openxmlformats-officedocument.wordprocessingml.document/i,\n  \".xls\": /application\\/vnd.ms-excel/i,\n  \".xlsx\": /application\\/vnd.openxmlformats-officedocument.spreadsheetml.sheet/i,\n  \".ppt\": /application\\/vnd.ms-powerpoint/i,\n  \".pptx\": /application\\/vnd.openxmlformats-officedocument.presentationml.presentation/i,\n  \".vsd\": /application\\/vnd.visio/i,\n  \".txt\": /text\\/plain/i,\n  \".abw\": /application\\/x-abiword/i,\n  \".avi\": /video\\/x-msvideo/i,\n  \".azw\": /application\\/vnd.amazon.ebook/i,\n  \".bin\": /application\\/octet-stream/i,\n  \".cda\": /application\\/x-cdf/i,\n  \".mpkg\": /application\\/vnd.apple.installer+xml/i,\n  \".odp\": /application\\/vnd.oasis.opendocument.presentation/i,\n  \".ods\": /application\\/vnd.oasis.opendocument.spreadsheet/i,\n  \".odt\": /application\\/vnd.oasis.opendocument.text/i,\n  \".oga\": /audio\\/ogg/i,\n  \".ogv\": /video\\/ogg/i,\n  \".ogx\": /application\\/ogg/i\n};\nvar SIZE_MAP = {\n  B: 1,\n  KB: 1024,\n  MB: 1048576,\n  GB: 1073741824\n};\nfunction returnFileSize(number) {\n  if (number < SIZE_MAP.KB) {\n    return \"\".concat(number, \" Bytes\");\n  }\n  if (number >= SIZE_MAP.KB && number < SIZE_MAP.MB) {\n    return \"\".concat((number / SIZE_MAP.KB).toFixed(1), \" KB\");\n  }\n  if (number >= SIZE_MAP.MB && number < SIZE_MAP.GB) {\n    return \"\".concat((number / SIZE_MAP.MB).toFixed(1), \" MB\");\n  }\n  if (number >= SIZE_MAP.GB) {\n    return \"\".concat((number / SIZE_MAP.GB).toFixed(1), \" GB\");\n  }\n  return \"\";\n}\nfunction getCurrentDate() {\n  var needTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var d = new Date();\n  var month = d.getMonth() + 1;\n  month = month < 10 ? \"0\".concat(month) : month;\n  var date = \"\".concat(d.getFullYear(), \"-\").concat(month, \"-\").concat(d.getDate());\n  var time = \"\".concat(d.getHours(), \":\").concat(d.getMinutes(), \":\").concat(d.getSeconds());\n  if (needTime) return [date, time].join(\" \");\n  return date;\n}\nfunction abridgeName(inputName) {\n  var leftCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n  var rightCount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 7;\n  var name = inputName;\n  var leftLength = 0;\n  var rightLength = 0;\n  if (!name) return \"\";\n  for (var i = 0; i < name.length; i++) {\n    var w = name[i];\n    var isCn = escape(w).indexOf(\"%u\") === 0;\n    if (i < leftCount * 2 && leftLength < leftCount) {\n      isCn ? leftLength += 1 : leftLength += 2;\n    } else if (i > i - rightCount && rightLength < rightCount) {\n      isCn ? rightLength += 1 : rightLength += 2;\n    }\n  }\n  return name.replace(new RegExp(\"^(.{\".concat(leftLength, \"})(.+)(.{\").concat(rightLength, \"})$\")), \"$1\\u2026$3\");\n}\nfunction getFileSizeText(number) {\n  if (number < 1024) {\n    return \"\".concat(number, \" Bytes\");\n  }\n  if (number >= 1024 && number < 1048576) {\n    return \"\".concat((number / 1024).toFixed(1), \" KB\");\n  }\n  if (number >= 1048576) {\n    return \"\".concat((number / 1048576).toFixed(1), \" MB\");\n  }\n  return \"\";\n}\nfunction isOverSizeLimit(fileSize, sizeLimit, unit) {\n  var units = [\"B\", \"KB\", \"MB\", \"GB\"];\n  var KBIndex = 1;\n  var index = units.indexOf(unit);\n  if (index === -1) {\n    log.warn(\"Upload\", \"`sizeLimit.unit` can only be one of \".concat(units.join()));\n    index = KBIndex;\n  }\n  var num = SIZE_MAP[unit];\n  return fileSize > sizeLimit * num;\n}\nfunction isOverSizeLimit1(fileSize, sizeLimit, unit) {\n  var units = [\"B\", \"KB\", \"MB\", \"GB\"];\n  var KBIndex = 1;\n  var index = units.indexOf(unit);\n  if (index === -1) {\n    console.warn(\"TDesign Upload Warn: `sizeLimit.unit` can only be one of \".concat(units.join()));\n    index = KBIndex;\n  }\n  var num = SIZE_MAP[unit];\n  var limit = index < KBIndex ? sizeLimit / num : sizeLimit * num;\n  return fileSize <= limit;\n}\nvar urlCreator = function urlCreator() {\n  return window.webkitURL || window.URL;\n};\nfunction getFileUrlByFileRaw(fileRaw) {\n  return new Promise(function (resolve) {\n    if (!fileRaw) {\n      resolve(\"\");\n      return;\n    }\n    var reader = new FileReader();\n    reader.readAsDataURL(fileRaw);\n    reader.onload = function (event) {\n      var _event$target;\n      resolve((_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.result);\n    };\n  });\n}\nfunction validateFileType(accept, fileType, fileName) {\n  var tmpFileType = fileType || fileName;\n  if (!accept) return true;\n  if (!tmpFileType) return false;\n  var acceptList = accept.split(\",\").map(function (v) {\n    return v.trim();\n  });\n  for (var i = 0, len = acceptList.length; i < len; i++) {\n    var oneRule = acceptList[i];\n    if (INPUT_FILE_MAP[oneRule] && INPUT_FILE_MAP[oneRule].test(tmpFileType)) {\n      return true;\n    }\n    var regExp = new RegExp(oneRule, \"i\");\n    if (regExp.test(tmpFileType)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction getFileList(files) {\n  var accept = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  var fileList = [];\n  for (var i = 0; i < files.length; i++) {\n    if (validateFileType(accept, files[i].type, files[i].name)) {\n      fileList.push(files[i]);\n    }\n  }\n  return fileList;\n}\nexport { AUDIO_REGEXP, FILE_EXCEL_REGEXP, FILE_PDF_REGEXP, FILE_PPT_REGEXP, FILE_WORD_REGEXP, IMAGE_ALL_REGEXP, IMAGE_REGEXP, SIZE_MAP, VIDEO_REGEXP, abridgeName, getCurrentDate, getFileList, getFileSizeText, getFileUrlByFileRaw, isOverSizeLimit, isOverSizeLimit1, returnFileSize, urlCreator, validateFileType };","map":{"version":3,"names":["IMAGE_REGEXP","IMAGE_ALL_REGEXP","FILE_PDF_REGEXP","FILE_EXCEL_REGEXP","FILE_WORD_REGEXP","FILE_PPT_REGEXP","VIDEO_REGEXP","AUDIO_REGEXP","INPUT_FILE_MAP","SIZE_MAP","B","KB","MB","GB","returnFileSize","number","concat","toFixed","getCurrentDate","needTime","arguments","length","undefined","d","Date","month","getMonth","date","getFullYear","getDate","time","getHours","getMinutes","getSeconds","join","abridgeName","inputName","leftCount","rightCount","name","leftLength","rightLength","i","w","isCn","escape","indexOf","replace","RegExp","getFileSizeText","isOverSizeLimit","fileSize","sizeLimit","unit","units","KBIndex","index","log","warn","num","isOverSizeLimit1","console","limit","urlCreator","window","webkitURL","URL","getFileUrlByFileRaw","fileRaw","Promise","resolve","reader","FileReader","readAsDataURL","onload","event","_event$target","target","result","validateFileType","accept","fileType","fileName","tmpFileType","acceptList","split","map","v","trim","len","oneRule","test","regExp","getFileList","files","fileList","type","push"],"sources":["../../../../src/_common/js/upload/utils.ts"],"sourcesContent":["import { SizeUnit } from './types';\nimport log from '../log/log';\n\nexport const IMAGE_REGEXP = /(.png|.jpg|.jpeg|.jpe|.webp|.avif|.svg|.gif|.bmp)/i;\nexport const IMAGE_ALL_REGEXP = /(.png|.jpg|.jpeg|.jpe|.webp|.avif|.svg|.gif|.bmp|.dwg|.dxf|.svf|.tif|.tiff|.arw)/i;\nexport const FILE_PDF_REGEXP = /(.pdf)/i;\nexport const FILE_EXCEL_REGEXP = /(.xlsx|.xls|.csv|.xlc|.xlm|.xlt|.xlw)/i;\nexport const FILE_WORD_REGEXP = /(.dox|docx|.document|.wps|.wdb|.msword)/i;\nexport const FILE_PPT_REGEXP = /(.ppt|.pptx|.key)/i;\nexport const VIDEO_REGEXP = /(.avi|.mp4|.wmv|.mpg|.mpeg|.mov|.rm|.ram|.swf|.flv|.rmvb|.flash|.mid|.3gp)/i;\nexport const AUDIO_REGEXP = /(.mp2|.mp3|.mp4|.ogg|.3gpp|.ac3|.au)/i;\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\n */\nconst INPUT_FILE_MAP = {\n  'audio/*': AUDIO_REGEXP,\n  'video/*': VIDEO_REGEXP,\n  'image/*': IMAGE_ALL_REGEXP,\n  '.ico': /image\\/vnd.microsoft.icon/i,\n  '.doc': /application\\/msword/i,\n  '.docx': /application\\/vnd.openxmlformats-officedocument.wordprocessingml.document/i,\n  '.xls': /application\\/vnd.ms-excel/i,\n  '.xlsx': /application\\/vnd.openxmlformats-officedocument.spreadsheetml.sheet/i,\n  '.ppt': /application\\/vnd.ms-powerpoint/i,\n  '.pptx': /application\\/vnd.openxmlformats-officedocument.presentationml.presentation/i,\n  '.vsd': /application\\/vnd.visio/i,\n  '.txt': /text\\/plain/i,\n  '.abw': /application\\/x-abiword/i,\n  '.avi': /video\\/x-msvideo/i,\n  '.azw': /application\\/vnd.amazon.ebook/i,\n  '.bin': /application\\/octet-stream/i,\n  '.cda': /application\\/x-cdf/i,\n  '.mpkg': /application\\/vnd.apple.installer+xml/i,\n  '.odp': /application\\/vnd.oasis.opendocument.presentation/i,\n  '.ods': /application\\/vnd.oasis.opendocument.spreadsheet/i,\n  '.odt': /application\\/vnd.oasis.opendocument.text/i,\n  '.oga': /audio\\/ogg/i,\n  '.ogv': /video\\/ogg/i,\n  '.ogx': /application\\/ogg/i,\n};\n\n/**\n * 各个单位和 KB 的关系\n *\n * [*] 表示方法采用这种方式\n * [x] 表示方法不采用这种方式\n *\n * [x] bit      位              b     0 or 1\n * [*] byte     字节            B     8 bits\n * [x] kilobit  千位            kb    1000 bites\n * [*] kilobyte 千字节(二进制)   KB    1024 bytes\n * [x] kilobyte 千字节(十进制)   KB    1000 bytes\n * [x] Megabite 百万位          Mb    1000 kilobits\n * [*] Megabyte 兆字节(二进制)   KB    1024 kilobytes\n * [*] Megabyte 兆字节(十进制)   KB    1000 kilobytes\n * [x] Gigabit  万亿位          Gb    1000 Megabite\n * [*] Gigabyte 吉字节(二进制)   GB    1024 Megabytes\n * [x] Gigabyte 吉字节(十进制)   GB    1000 Megabytes\n */\nexport const SIZE_MAP = {\n  B: 1,\n  KB: 1024,\n  MB: 1048576, // 1024 * 1024\n  GB: 1073741824, // 1024 * 1024 * 1024\n};\n\nexport function returnFileSize(number: number) {\n  if (number < SIZE_MAP.KB) {\n    return `${number} Bytes`;\n  }\n  if (number >= SIZE_MAP.KB && number < SIZE_MAP.MB) {\n    return `${(number / SIZE_MAP.KB).toFixed(1)} KB`;\n  }\n  if (number >= SIZE_MAP.MB && number < SIZE_MAP.GB) {\n    return `${(number / SIZE_MAP.MB).toFixed(1)} MB`;\n  }\n\n  if (number >= SIZE_MAP.GB) {\n    return `${(number / SIZE_MAP.GB).toFixed(1)} GB`;\n  }\n  return '';\n}\n\nexport function getCurrentDate(needTime = false) {\n  const d = new Date();\n  let month: string | number = d.getMonth() + 1;\n  month = month < 10 ? `0${month}` : month;\n  const date = `${d.getFullYear()}-${month}-${d.getDate()}`;\n  const time = `${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}`;\n  if (needTime) return [date, time].join(' ');\n  return date;\n}\n\n/**\n * 缩略文件名 ABCDEFG => ABC...FG\n * @param inputName 文件名\n * @param leftCount 左边长度\n * @param rightCount 右边长度\n * @returns 缩略后的文件名\n */\nexport function abridgeName(\n  inputName: string,\n  leftCount = 5,\n  rightCount = 7\n): string {\n  const name = inputName;\n  let leftLength = 0;\n  let rightLength = 0;\n  if (!name) return '';\n  for (let i = 0; i < name.length; i++) {\n    const w = name[i];\n    const isCn = escape(w).indexOf('%u') === 0;\n    if (i < leftCount * 2 && leftLength < leftCount) {\n      // eslint-disable-next-line no-unused-expressions\n      isCn ? (leftLength += 1) : (leftLength += 2);\n    } else if (i > i - rightCount && rightLength < rightCount) {\n      // eslint-disable-next-line no-unused-expressions\n      isCn ? (rightLength += 1) : (rightLength += 2);\n    }\n  }\n  return name.replace(\n    new RegExp(`^(.{${leftLength}})(.+)(.{${rightLength}})$`),\n    '$1…$3'\n  );\n}\n\nexport function getFileSizeText(number: number) {\n  if (number < 1024) {\n    return `${number} Bytes`;\n  }\n  if (number >= 1024 && number < 1048576) {\n    return `${(number / 1024).toFixed(1)} KB`;\n  }\n  if (number >= 1048576) {\n    return `${(number / 1048576).toFixed(1)} MB`;\n  }\n  return '';\n}\n\n/**\n * 大小比较\n * @param size 文件大小，单位：B\n * @param unit 计算机计量单位\n */\nexport function isOverSizeLimit(\n  fileSize: number,\n  sizeLimit: number,\n  unit: SizeUnit\n) {\n  const units = ['B', 'KB', 'MB', 'GB'];\n  const KBIndex = 1;\n  let index = units.indexOf(unit);\n  if (index === -1) {\n    log.warn('Upload', `\\`sizeLimit.unit\\` can only be one of ${units.join()}`);\n    index = KBIndex;\n  }\n  const num = SIZE_MAP[unit];\n  return fileSize > sizeLimit * num;\n}\n\n// vue2临时使用的 sizeLimit 计算\nexport function isOverSizeLimit1(\n  fileSize: number,\n  sizeLimit: number,\n  unit: SizeUnit\n) {\n  // 以 KB 为单位进行比较\n  const units = ['B', 'KB', 'MB', 'GB'];\n  // 各个单位和 KB 的关系\n\n  const KBIndex = 1;\n  let index = units.indexOf(unit);\n  if (index === -1) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `TDesign Upload Warn: \\`sizeLimit.unit\\` can only be one of ${units.join()}`\n    );\n    index = KBIndex;\n  }\n  const num = SIZE_MAP[unit];\n  const limit = index < KBIndex ? sizeLimit / num : sizeLimit * num;\n  return fileSize <= limit;\n}\n\nexport const urlCreator = () => window.webkitURL || window.URL;\n\nexport function getFileUrlByFileRaw(fileRaw: File): Promise<string> {\n  return new Promise((resolve) => {\n    if (!fileRaw) {\n      resolve('');\n      return;\n    }\n    const reader = new FileReader();\n    reader.readAsDataURL(fileRaw);\n    reader.onload = (event: ProgressEvent<FileReader>) => {\n      resolve(event.target?.result as string);\n    };\n  });\n}\n\nexport function validateFileType(accept: string, fileType: string, fileName?: string) {\n  const tmpFileType = fileType || fileName;\n  if (!accept) return true;\n\n  if (!tmpFileType) return false;\n\n  const acceptList = accept.split(',').map((v) => v.trim());\n  for (let i = 0, len = acceptList.length; i < len; i++) {\n    const oneRule = acceptList[i];\n    if (INPUT_FILE_MAP[oneRule] && INPUT_FILE_MAP[oneRule].test(tmpFileType)) {\n      return true;\n    }\n    const regExp = new RegExp(oneRule, 'i');\n    if (regExp.test(tmpFileType)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function getFileList(files: FileList, accept: string = '') {\n  const fileList: File[] = [];\n  for (let i = 0; i < files.length; i++) {\n    if (validateFileType(accept, files[i].type, files[i].name)) {\n      fileList.push(files[i]);\n    }\n  }\n  return fileList;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}