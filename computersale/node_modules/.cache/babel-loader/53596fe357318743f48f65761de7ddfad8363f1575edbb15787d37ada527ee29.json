{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nvar props = {\n  align: {\n    type: String,\n    \"default\": \"top\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"start\", \"end\", \"center\", \"stretch\", \"baseline\", \"top\", \"middle\", \"bottom\"].includes(val);\n    }\n  },\n  gutter: {\n    type: [Number, Object, Array],\n    \"default\": 0\n  },\n  justify: {\n    type: String,\n    \"default\": \"start\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"start\", \"end\", \"center\", \"space-around\", \"space-between\"].includes(val);\n    }\n  },\n  tag: {\n    type: String,\n    \"default\": \"div\"\n  }\n};\nexport { props as default };","map":{"version":3,"names":["props","align","type","String","validator","val","includes","gutter","Number","Object","Array","justify","tag"],"sources":["../../src/grid/row-props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdRowProps } from '../grid/type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 纵向对齐方式，CSS 属性 `align-items` 值。其中 `top` 和 `start` 等效；`middle` 和 `center` 等效；`bottom` 和 `end` 等效 */\n  align: {\n    type: String as PropType<TdRowProps['align']>,\n    default: 'top' as TdRowProps['align'],\n    validator(val: TdRowProps['align']): boolean {\n      if (!val) return true;\n      return ['start', 'end', 'center', 'stretch', 'baseline', 'top', 'middle', 'bottom'].includes(val);\n    },\n  },\n  /** 栅格间隔，示例：`{ xs: 8, sm: 16, md: 24, lg: 32, xl: 32, xxl: 40 }`。当数据类型为 Number 和 Object 时，用于指定横向间隔。当数据类型为数组时，第一个参数为横向间隔，第二个参数为纵向间隔， [水平间隔, 垂直间隔] */\n  gutter: {\n    type: [Number, Object, Array] as PropType<TdRowProps['gutter']>,\n    default: 0 as TdRowProps['gutter'],\n  },\n  /** flex 布局下的水平排列方式 */\n  justify: {\n    type: String as PropType<TdRowProps['justify']>,\n    default: 'start' as TdRowProps['justify'],\n    validator(val: TdRowProps['justify']): boolean {\n      if (!val) return true;\n      return ['start', 'end', 'center', 'space-around', 'space-between'].includes(val);\n    },\n  },\n  /** 自定义元素标签 */\n  tag: {\n    type: String,\n    default: 'div',\n  },\n};\n"],"mappings":";;;;;;AASA,IAAAA,KAAA,GAAe;EAEbC,KAAO;IACLC,IAAM,EAAAC,MAAA;IACN,WAAS;IACTC,SAAA,WAAAA,UAAUC,GAAmC;MAC3C,IAAI,CAACA,GAAA,EAAY;MACV,QAAC,OAAS,SAAO,QAAU,aAAW,UAAY,SAAO,QAAU,UAAQ,CAAE,CAAAC,QAAA,CAASD,GAAG;IAClG;GACF;EAEAE,MAAQ;IACNL,IAAM,GAACM,MAAQ,EAAAC,MAAA,EAAQC,KAAK;IAC5B,SAAS;GACX;EAEAC,OAAS;IACPT,IAAM,EAAAC,MAAA;IACN,WAAS;IACTC,SAAA,WAAAA,UAAUC,GAAqC;MAC7C,IAAI,CAACA,GAAA,EAAY;MACV,QAAC,SAAS,KAAO,YAAU,gBAAgB,eAAe,EAAEC,QAAA,CAASD,GAAG;IACjF;GACF;EAEAO,GAAK;IACHV,IAAM,EAAAC,MAAA;IACN,SAAS;EACX;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}