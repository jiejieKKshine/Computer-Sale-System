{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\n/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport { _ as _classCallCheck, a as _createClass } from '../../../_chunks/dep-f909a041.mjs';\nimport { _ as _defineProperty } from '../../../_chunks/dep-fa52aa21.mjs';\nimport { i as isUndefined_1 } from '../../../_chunks/dep-58a62202.mjs';\nimport { i as isBoolean_1 } from '../../../_chunks/dep-df472119.mjs';\nimport { o as omit_1 } from '../../../_chunks/dep-88ae49da.mjs';\nimport { g as get_1 } from '../../../_chunks/dep-ae202bc0.mjs';\nimport log from '../log/log.mjs';\nimport '../../../_chunks/dep-4659d73b.mjs';\nimport '../../../_chunks/dep-eca422c3.mjs';\nimport '../../../_chunks/dep-bf7257e7.mjs';\nimport '../../../_chunks/dep-29ef8419.mjs';\nimport '../../../_chunks/dep-7932c2e8.mjs';\nimport '../../../_chunks/dep-eae2a67e.mjs';\nimport '../../../_chunks/dep-626c497d.mjs';\nimport '../../../_chunks/dep-ab4bb9b8.mjs';\nimport '../../../_chunks/dep-5922c8f3.mjs';\nimport '../../../_chunks/dep-92f86d1d.mjs';\nimport '../../../_chunks/dep-6ab5363f.mjs';\nimport '../../../_chunks/dep-6dc3d0e1.mjs';\nimport '../../../_chunks/dep-06dcbf4c.mjs';\nimport '../../../_chunks/dep-2b09875b.mjs';\nimport '../../../_chunks/dep-cda4f568.mjs';\nimport '../../../_chunks/dep-76958824.mjs';\nimport '../../../_chunks/dep-e9841b9e.mjs';\nimport '../../../_chunks/dep-1a4bb2f2.mjs';\nimport '../../../_chunks/dep-cc8ebcde.mjs';\nimport '../../../_chunks/dep-f5579c03.mjs';\nimport '../../../_chunks/dep-49aeee3c.mjs';\nimport '../../../_chunks/dep-b5bf85f5.mjs';\nimport '../../../_chunks/dep-3c65fae8.mjs';\nimport '../../../_chunks/dep-ec0bbd9f.mjs';\nimport '../../../_chunks/dep-1b78414a.mjs';\nimport '../../../_chunks/dep-d84f19b3.mjs';\nimport '../../../_chunks/dep-732f0b7d.mjs';\nimport '../../../_chunks/dep-aeaef131.mjs';\nimport '../../../_chunks/dep-88c8d9ed.mjs';\nimport '../../../_chunks/dep-2f6e28a0.mjs';\nimport '../../../_chunks/dep-1725b1c7.mjs';\nimport '../../../_chunks/dep-4ec29b23.mjs';\nimport '../../../_chunks/dep-02f9394e.mjs';\nimport '../../../_chunks/dep-400ec705.mjs';\nvar nodeKey = \"__tdesign_tree-node__\";\nvar TreeNodeModel = /*#__PURE__*/function () {\n  function TreeNodeModel(node) {\n    _classCallCheck(this, TreeNodeModel);\n    _defineProperty(this, nodeKey, void 0);\n    this[nodeKey] = node;\n  }\n  return _createClass(TreeNodeModel, [{\n    key: \"value\",\n    get: function get() {\n      var node = this[nodeKey];\n      return node.value;\n    }\n  }, {\n    key: \"label\",\n    get: function get() {\n      var node = this[nodeKey];\n      return node.label;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      var node = this[nodeKey];\n      return node.data;\n    }\n  }, {\n    key: \"actived\",\n    get: function get() {\n      var node = this[nodeKey];\n      return node.actived;\n    }\n  }, {\n    key: \"expanded\",\n    get: function get() {\n      var node = this[nodeKey];\n      return node.expanded;\n    }\n  }, {\n    key: \"checked\",\n    get: function get() {\n      var node = this[nodeKey];\n      return node.checked;\n    }\n  }, {\n    key: \"indeterminate\",\n    get: function get() {\n      var node = this[nodeKey];\n      return node.indeterminate;\n    }\n  }, {\n    key: \"loading\",\n    get: function get() {\n      var node = this[nodeKey];\n      return node.loading;\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      var node = this[nodeKey];\n      return node.isDisabled();\n    }\n  }, {\n    key: \"getLevel\",\n    value: function getLevel() {\n      var node = this[nodeKey];\n      return node.getLevel();\n    }\n  }, {\n    key: \"getIndex\",\n    value: function getIndex() {\n      var node = this[nodeKey];\n      return node.getIndex();\n    }\n  }, {\n    key: \"isFirst\",\n    value: function isFirst() {\n      var node = this[nodeKey];\n      return node.isFirst();\n    }\n  }, {\n    key: \"isLast\",\n    value: function isLast() {\n      var node = this[nodeKey];\n      return node.isLast();\n    }\n  }, {\n    key: \"isLeaf\",\n    value: function isLeaf() {\n      var node = this[nodeKey];\n      return node.isLeaf();\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(newData) {\n      var node = this[nodeKey];\n      return node.insertBefore(newData);\n    }\n  }, {\n    key: \"insertAfter\",\n    value: function insertAfter(newData) {\n      var node = this[nodeKey];\n      return node.insertAfter(newData);\n    }\n  }, {\n    key: \"appendData\",\n    value: function appendData(data) {\n      var node = this[nodeKey];\n      return node.append(data);\n    }\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      var node = this[nodeKey];\n      var nodes = node.getPath();\n      return nodes.map(function (item) {\n        return item.getModel();\n      });\n    }\n  }, {\n    key: \"getParent\",\n    value: function getParent() {\n      var _node$parent;\n      var node = this[nodeKey];\n      return (_node$parent = node.parent) === null || _node$parent === void 0 ? void 0 : _node$parent.getModel();\n    }\n  }, {\n    key: \"getParents\",\n    value: function getParents() {\n      var node = this[nodeKey];\n      var nodes = node.getParents();\n      return nodes.map(function (item) {\n        return item.getModel();\n      });\n    }\n  }, {\n    key: \"getRoot\",\n    value: function getRoot() {\n      var node = this[nodeKey];\n      var root = node.getRoot();\n      return root === null || root === void 0 ? void 0 : root.getModel();\n    }\n  }, {\n    key: \"getSiblings\",\n    value: function getSiblings() {\n      var node = this[nodeKey];\n      var nodes = node.getSiblings();\n      return nodes.map(function (item) {\n        return item.getModel();\n      });\n    }\n  }, {\n    key: \"getChildren\",\n    value: function getChildren(deep) {\n      var node = this[nodeKey];\n      var childrenModel = false;\n      var children = node.children;\n      if (Array.isArray(children)) {\n        if (children.length > 0) {\n          if (deep) {\n            var nodes = node.walk();\n            nodes.shift();\n            childrenModel = nodes.map(function (item) {\n              return item.getModel();\n            });\n          } else {\n            childrenModel = children.map(function (item) {\n              return item.getModel();\n            });\n          }\n        } else {\n          childrenModel = false;\n        }\n      } else if (isBoolean_1(children)) {\n        childrenModel = children;\n      }\n      return childrenModel;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(value) {\n      var node = this[nodeKey];\n      if (!value) {\n        node.remove();\n        return;\n      }\n      var tree = node.tree;\n      var targetNode = tree.getNode(value);\n      if (!targetNode) {\n        log.warnOnce(\"Tree\", \"`\".concat(value, \"` is not exist\"));\n        return;\n      }\n      var parents = targetNode.getParents();\n      var parentValues = parents.map(function (pnode) {\n        return pnode.value;\n      });\n      if (parentValues.indexOf(node.value) < 0) {\n        log.warnOnce(\"Tree\", \"`\".concat(value, \"` is not a childNode of current node\"));\n        return;\n      }\n      targetNode.remove();\n    }\n  }, {\n    key: \"setData\",\n    value: function setData(data) {\n      var node = this[nodeKey];\n      var syncAttrs = [\"value\", \"label\", \"disabled\"];\n      var cleanData = omit_1(data, [\"children\"].concat(syncAttrs));\n      var keys = node.tree.config.keys;\n      syncAttrs.forEach(function (attr) {\n        var dataAttrValue = get_1(data, (keys === null || keys === void 0 ? void 0 : keys[attr]) || attr);\n        if (!isUndefined_1(dataAttrValue)) cleanData[attr] = dataAttrValue;\n      });\n      Object.assign(node.data, cleanData);\n      Object.assign(node, cleanData);\n      node.update();\n    }\n  }]);\n}();\nfunction createNodeModel(node) {\n  var model = new TreeNodeModel(node);\n  return model;\n}\nexport { TreeNodeModel, createNodeModel, nodeKey };","map":{"version":3,"names":["nodeKey","TreeNodeModel","node","_classCallCheck","_defineProperty","_createClass","key","get","value","label","data","actived","expanded","checked","indeterminate","loading","isDisabled","getLevel","getIndex","isFirst","isLast","isLeaf","insertBefore","newData","insertAfter","appendData","append","getPath","nodes","map","item","getModel","getParent","_node$parent","parent","getParents","getRoot","root","getSiblings","getChildren","deep","childrenModel","children","Array","isArray","length","walk","shift","isBoolean_1","remove","tree","targetNode","getNode","log","warnOnce","concat","parents","parentValues","pnode","indexOf","setData","syncAttrs","cleanData","omit_1","keys","config","forEach","attr","dataAttrValue","get_1","isUndefined_1","Object","assign","update","createNodeModel","model"],"sources":["../../../../src/_common/js/tree/tree-node-model.ts"],"sourcesContent":["import isUndefined from 'lodash/isUndefined';\nimport isBoolean from 'lodash/isBoolean';\nimport omit from 'lodash/omit';\nimport get from 'lodash/get';\nimport { TreeNode } from './tree-node';\nimport { OptionData } from '../common';\nimport {\n  TreeNodeValue,\n  TypeTreeNodeModel,\n  TypeTreeNodeData,\n  TypeTreeItem,\n} from './types';\nimport log from '../log/log';\n\nexport const nodeKey = '__tdesign_tree-node__';\n\nexport class TreeNodeModel {\n  private [nodeKey]: TreeNode;\n\n  constructor(node: TreeNode) {\n    this[nodeKey] = node;\n  }\n\n  public get value() {\n    const node = this[nodeKey];\n    return node.value;\n  }\n\n  public get label() {\n    const node = this[nodeKey];\n    return node.label;\n  }\n\n  public get data() {\n    const node = this[nodeKey];\n    return node.data;\n  }\n\n  public get actived() {\n    const node = this[nodeKey];\n    return node.actived;\n  }\n\n  public get expanded() {\n    const node = this[nodeKey];\n    return node.expanded;\n  }\n\n  public get checked() {\n    const node = this[nodeKey];\n    return node.checked;\n  }\n\n  public get indeterminate() {\n    const node = this[nodeKey];\n    return node.indeterminate;\n  }\n\n  public get loading() {\n    const node = this[nodeKey];\n    return node.loading;\n  }\n\n  public get disabled() {\n    const node = this[nodeKey];\n    return node.isDisabled();\n  }\n\n  /**\n   * 获取节点所处层级\n   * @return number 节点层级序号\n   */\n  public getLevel() {\n    const node = this[nodeKey];\n    return node.getLevel();\n  }\n\n  /**\n   * 获取节点在父节点的子节点列表中的位置\n   * - 如果没有父节点，则获取节点在根节点列表的位置\n   * @return number 节点位置序号\n   */\n  public getIndex() {\n    const node = this[nodeKey];\n    return node.getIndex();\n  }\n\n  /**\n   * 是否为兄弟节点中的第一个节点\n   * @return boolean 是否为第一个节点\n   */\n  public isFirst() {\n    const node = this[nodeKey];\n    return node.isFirst();\n  }\n\n  /**\n   * 是否为兄弟节点中的最后一个节点\n   * @return boolean 是否为最后一个节点\n   */\n  public isLast() {\n    const node = this[nodeKey];\n    return node.isLast();\n  }\n\n  /**\n   * 是否为叶子节点，叶子节点没有子节点\n   * @return boolean 是否为叶子节点\n   */\n  public isLeaf() {\n    const node = this[nodeKey];\n    return node.isLeaf();\n  }\n\n  /**\n   * 在当前节点之前插入节点\n   * @param {object} newData 要插入的节点或者数据\n   * @return void\n   */\n  public insertBefore(newData: TypeTreeItem) {\n    const node = this[nodeKey];\n    return node.insertBefore(newData);\n  }\n\n  /**\n   * 在当前节点之后插入节点\n   * @param {object} newData 要插入的节点或者数据\n   * @return void\n   */\n  public insertAfter(newData: TypeTreeItem) {\n    const node = this[nodeKey];\n    return node.insertAfter(newData);\n  }\n\n  /**\n   * 追加节点数据\n   * @param {object | object[]} data 节点数据\n   * @return void\n   */\n  public appendData(data: TypeTreeNodeData | TypeTreeNodeData[]) {\n    const node = this[nodeKey];\n    return node.append(data);\n  }\n\n  /**\n   * 返回路径节点\n   * - 路径节点包含自己在内\n   * - 节点顺序与父级节点顺序相反，从根到当前\n   * @return TreeNodeModel[] 路径节点数组\n   */\n  public getPath(): TypeTreeNodeModel[] {\n    const node = this[nodeKey];\n    const nodes = node.getPath();\n    return nodes.map((item: TreeNode) => item.getModel());\n  }\n\n  /**\n   * 获取本节点的父节点\n   * @return TreeNodeModel 父节点\n   */\n  public getParent(): TypeTreeNodeModel {\n    const node = this[nodeKey];\n    return node.parent?.getModel();\n  }\n\n  /**\n   * 获取所有父级节点\n   * - 顺序为从当前到根\n   * @return TreeNodeModel[] 父级节点数组\n   */\n  public getParents(): TypeTreeNodeModel[] {\n    const node = this[nodeKey];\n    const nodes = node.getParents();\n    return nodes.map((item: TreeNode) => item.getModel());\n  }\n\n  /**\n   * 获取本节点的根节点\n   * @return TreeNodeModel 根节点\n   */\n  public getRoot(): TypeTreeNodeModel {\n    const node = this[nodeKey];\n    const root = node.getRoot();\n    return root?.getModel();\n  }\n\n  /**\n   * 获取所有兄弟节点，包含自己在内\n   * @return TreeNodeModel[] 兄弟节点数组\n   */\n  public getSiblings(): TypeTreeNodeModel[] {\n    const node = this[nodeKey];\n    const nodes = node.getSiblings();\n    return nodes.map((item: TreeNode) => item.getModel());\n  }\n\n  /**\n   * 获取当前节点的子节点\n   * @param {boolean} deep 是否获取所有深层子节点\n   * @return TreeNodeModel[] 子节点数组\n   */\n  public getChildren(deep?: boolean): boolean | TypeTreeNodeModel[] {\n    const node = this[nodeKey];\n    let childrenModel: boolean | TypeTreeNodeModel[] = false;\n    const { children } = node;\n    if (Array.isArray(children)) {\n      if (children.length > 0) {\n        if (deep) {\n          const nodes = node.walk();\n          nodes.shift();\n          childrenModel = nodes.map((item) => item.getModel());\n        } else {\n          childrenModel = children.map((item) => item.getModel());\n        }\n      } else {\n        childrenModel = false;\n      }\n    } else if (isBoolean(children)) {\n      childrenModel = children;\n    }\n    return childrenModel;\n  }\n\n  /**\n   * 移除节点\n   * - 提供 value 参数，移除本节点子节点中的节点\n   * - 不提供 value 参数，移除自己\n   * @param {string} value 目标节点值\n   * @return void\n   */\n  public remove(value?: TreeNodeValue) {\n    const node = this[nodeKey];\n    if (!value) {\n      node.remove();\n      return;\n    }\n\n    const { tree } = node;\n    const targetNode = tree.getNode(value);\n    if (!targetNode) {\n      log.warnOnce('Tree', `\\`${value}\\` is not exist`);\n      return;\n    }\n\n    const parents = targetNode.getParents();\n    const parentValues = parents.map((pnode) => (pnode.value));\n    if (parentValues.indexOf(node.value) < 0) {\n      log.warnOnce('Tree', `\\`${value}\\` is not a childNode of current node`);\n      return;\n    }\n    targetNode.remove();\n  }\n\n  /**\n   * 设置本节点携带的元数据\n   * @param {object} data 节点数据\n   * @return void\n   */\n  public setData(data: OptionData) {\n    const node = this[nodeKey];\n    // syncAttrs 列举的属性，key 名称可被 tree.config.keys 定义\n    // 因此同步状态时需要读取被定义的 key 名称\n    // 详细细节可见 https://github.com/Tencent/tdesign-common/issues/655\n    const syncAttrs = [\n      'value',\n      'label',\n      'disabled',\n    ];\n    const cleanData = omit(data, ['children', ...syncAttrs]);\n    const { keys } = node.tree.config;\n    syncAttrs.forEach((attr: string) => {\n      const dataAttrValue = get(data, keys?.[attr] || attr);\n      if (!isUndefined(dataAttrValue)) cleanData[attr] = dataAttrValue;\n    });\n    Object.assign(node.data, cleanData);\n    Object.assign(node, cleanData);\n    node.update();\n  }\n}\n\n// 封装对外暴露的对象\nexport function createNodeModel(node: TreeNode): TypeTreeNodeModel {\n  const model = new TreeNodeModel(node);\n  return model as TypeTreeNodeModel;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}