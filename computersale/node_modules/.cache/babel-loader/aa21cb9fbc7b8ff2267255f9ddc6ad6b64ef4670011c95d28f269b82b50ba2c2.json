{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nvar props = {\n  autoWidth: Boolean,\n  borderless: Boolean,\n  clearable: Boolean,\n  collapsedItems: {\n    type: Function\n  },\n  disabled: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  dragSort: Boolean,\n  excessTagsDisplayType: {\n    type: String,\n    \"default\": \"break-line\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"scroll\", \"break-line\"].includes(val);\n    }\n  },\n  inputProps: {\n    type: Object\n  },\n  inputValue: {\n    type: [String, Number],\n    \"default\": void 0\n  },\n  defaultInputValue: {\n    type: [String, Number],\n    \"default\": \"\"\n  },\n  label: {\n    type: [String, Function]\n  },\n  max: {\n    type: Number\n  },\n  minCollapsedNum: {\n    type: Number,\n    \"default\": 0\n  },\n  placeholder: {\n    type: String,\n    \"default\": void 0\n  },\n  prefixIcon: {\n    type: Function\n  },\n  readonly: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  size: {\n    type: String,\n    \"default\": \"medium\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"small\", \"medium\", \"large\"].includes(val);\n    }\n  },\n  status: {\n    type: String,\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"default\", \"success\", \"warning\", \"error\"].includes(val);\n    }\n  },\n  suffix: {\n    type: [String, Function]\n  },\n  suffixIcon: {\n    type: Function\n  },\n  tag: {\n    type: [String, Function]\n  },\n  tagProps: {\n    type: Object\n  },\n  tips: {\n    type: [String, Function]\n  },\n  value: {\n    type: Array,\n    \"default\": void 0\n  },\n  modelValue: {\n    type: Array,\n    \"default\": void 0\n  },\n  defaultValue: {\n    type: Array,\n    \"default\": function _default() {\n      return [];\n    }\n  },\n  valueDisplay: {\n    type: [String, Function]\n  },\n  onBlur: Function,\n  onChange: Function,\n  onClear: Function,\n  onClick: Function,\n  onDragSort: Function,\n  onEnter: Function,\n  onFocus: Function,\n  onInputChange: Function,\n  onMouseenter: Function,\n  onMouseleave: Function,\n  onPaste: Function,\n  onRemove: Function\n};\nexport { props as default };","map":{"version":3,"names":["props","autoWidth","Boolean","borderless","clearable","collapsedItems","type","Function","disabled","dragSort","excessTagsDisplayType","String","validator","val","includes","inputProps","Object","inputValue","Number","defaultInputValue","label","max","minCollapsedNum","placeholder","prefixIcon","readonly","size","status","suffix","suffixIcon","tag","tagProps","tips","value","Array","modelValue","defaultValue","_default","valueDisplay","onBlur","onChange","onClear","onClick","onDragSort","onEnter","onFocus","onInputChange","onMouseenter","onMouseleave","onPaste","onRemove"],"sources":["../../src/tag-input/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdTagInputProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 宽度随内容自适应 */\n  autoWidth: Boolean,\n  /** 无边框模式 */\n  borderless: Boolean,\n  /** 是否可清空 */\n  clearable: Boolean,\n  /** 标签过多的情况下，折叠项内容，默认为 `+N`。如果需要悬浮就显示其他内容，可以使用 collapsedItems 自定义。`value` 表示当前存在的所有标签，`collapsedSelectedItems` 表示折叠的标签，`count` 表示折叠的数量，`onClose` 表示移除标签的事件回调 */\n  collapsedItems: {\n    type: Function as PropType<TdTagInputProps['collapsedItems']>,\n  },\n  /** 是否禁用标签输入框 */\n  disabled: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 拖拽调整标签顺序 */\n  dragSort: Boolean,\n  /** 标签超出时的呈现方式，有两种：横向滚动显示 和 换行显示 */\n  excessTagsDisplayType: {\n    type: String as PropType<TdTagInputProps['excessTagsDisplayType']>,\n    default: 'break-line' as TdTagInputProps['excessTagsDisplayType'],\n    validator(val: TdTagInputProps['excessTagsDisplayType']): boolean {\n      if (!val) return true;\n      return ['scroll', 'break-line'].includes(val);\n    },\n  },\n  /** 透传 Input 输入框组件全部属性 */\n  inputProps: {\n    type: Object as PropType<TdTagInputProps['inputProps']>,\n  },\n  /** 输入框的值 */\n  inputValue: {\n    type: [String, Number] as PropType<TdTagInputProps['inputValue']>,\n    default: undefined as TdTagInputProps['inputValue'],\n  },\n  /** 输入框的值，非受控属性 */\n  defaultInputValue: {\n    type: [String, Number] as PropType<TdTagInputProps['defaultInputValue']>,\n    default: '' as TdTagInputProps['defaultInputValue'],\n  },\n  /** 左侧文本 */\n  label: {\n    type: [String, Function] as PropType<TdTagInputProps['label']>,\n  },\n  /** 最大允许输入的标签数量 */\n  max: {\n    type: Number,\n  },\n  /** 最小折叠数量，用于标签数量过多的情况下折叠选中项，超出该数值的选中项折叠。值为 0 则表示不折叠 */\n  minCollapsedNum: {\n    type: Number,\n    default: 0,\n  },\n  /** 占位符 */\n  placeholder: {\n    type: String,\n    default: undefined,\n  },\n  /** 组件前置图标 */\n  prefixIcon: {\n    type: Function as PropType<TdTagInputProps['prefixIcon']>,\n  },\n  /** 只读状态，值为真会隐藏标签移除按钮和输入框 */\n  readonly: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 组件尺寸 */\n  size: {\n    type: String as PropType<TdTagInputProps['size']>,\n    default: 'medium' as TdTagInputProps['size'],\n    validator(val: TdTagInputProps['size']): boolean {\n      if (!val) return true;\n      return ['small', 'medium', 'large'].includes(val);\n    },\n  },\n  /** 输入框状态 */\n  status: {\n    type: String as PropType<TdTagInputProps['status']>,\n    validator(val: TdTagInputProps['status']): boolean {\n      if (!val) return true;\n      return ['default', 'success', 'warning', 'error'].includes(val);\n    },\n  },\n  /** 后置图标前的后置内容 */\n  suffix: {\n    type: [String, Function] as PropType<TdTagInputProps['suffix']>,\n  },\n  /** 组件后置图标 */\n  suffixIcon: {\n    type: Function as PropType<TdTagInputProps['suffixIcon']>,\n  },\n  /** 自定义标签的内部内容，每一个标签的当前值。注意和 `valueDisplay` 区分，`valueDisplay`  是用来定义全部标签内容，而非某一个标签 */\n  tag: {\n    type: [String, Function] as PropType<TdTagInputProps['tag']>,\n  },\n  /** 透传 Tag 组件全部属性 */\n  tagProps: {\n    type: Object as PropType<TdTagInputProps['tagProps']>,\n  },\n  /** 输入框下方提示文本，会根据不同的 `status` 呈现不同的样式 */\n  tips: {\n    type: [String, Function] as PropType<TdTagInputProps['tips']>,\n  },\n  /** 值 */\n  value: {\n    type: Array as PropType<TdTagInputProps['value']>,\n    default: undefined as TdTagInputProps['value'],\n  },\n  modelValue: {\n    type: Array as PropType<TdTagInputProps['value']>,\n    default: undefined as TdTagInputProps['value'],\n  },\n  /** 值，非受控属性 */\n  defaultValue: {\n    type: Array as PropType<TdTagInputProps['defaultValue']>,\n    default: (): TdTagInputProps['defaultValue'] => [],\n  },\n  /** 自定义值呈现的全部内容，参数为所有标签的值 */\n  valueDisplay: {\n    type: [String, Function] as PropType<TdTagInputProps['valueDisplay']>,\n  },\n  /** 失去焦点时触发 */\n  onBlur: Function as PropType<TdTagInputProps['onBlur']>,\n  /** 值变化时触发，参数 `context.trigger` 表示数据变化的触发来源；`context.index` 指当前变化项的下标；`context.item` 指当前变化项；`context.e` 表示事件参数 */\n  onChange: Function as PropType<TdTagInputProps['onChange']>,\n  /** 清空按钮点击时触发 */\n  onClear: Function as PropType<TdTagInputProps['onClear']>,\n  /** 点击组件时触发 */\n  onClick: Function as PropType<TdTagInputProps['onClick']>,\n  /** 【开发中】拖拽排序时触发 */\n  onDragSort: Function as PropType<TdTagInputProps['onDragSort']>,\n  /** 按键按下 Enter 时触发 */\n  onEnter: Function as PropType<TdTagInputProps['onEnter']>,\n  /** 聚焦时触发 */\n  onFocus: Function as PropType<TdTagInputProps['onFocus']>,\n  /** 输入框值发生变化时触发，`context.trigger` 表示触发输入框值变化的来源：文本输入触发、清除按钮触发、回车键触发等 */\n  onInputChange: Function as PropType<TdTagInputProps['onInputChange']>,\n  /** 进入输入框时触发 */\n  onMouseenter: Function as PropType<TdTagInputProps['onMouseenter']>,\n  /** 离开输入框时触发 */\n  onMouseleave: Function as PropType<TdTagInputProps['onMouseleave']>,\n  /** 粘贴事件，`pasteValue` 表示粘贴板的内容 */\n  onPaste: Function as PropType<TdTagInputProps['onPaste']>,\n  /** 移除单个标签时触发 */\n  onRemove: Function as PropType<TdTagInputProps['onRemove']>,\n};\n"],"mappings":";;;;;;AASA,IAAAA,KAAA,GAAe;EAEbC,SAAW,EAAAC,OAAA;EAEXC,UAAY,EAAAD,OAAA;EAEZE,SAAW,EAAAF,OAAA;EAEXG,cAAgB;IACdC,IAAM,EAAAC;GACR;EAEAC,QAAU;IACRF,IAAM,EAAAJ,OAAA;IACN,WAAS;GACX;EAEAO,QAAU,EAAAP,OAAA;EAEVQ,qBAAuB;IACrBJ,IAAM,EAAAK,MAAA;IACN,WAAS;IACTC,SAAA,WAAAA,UAAUC,GAAwD;MAChE,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,UAAU,YAAY,EAAEC,QAAA,CAASD,GAAG;IAC9C;GACF;EAEAE,UAAY;IACVT,IAAM,EAAAU;GACR;EAEAC,UAAY;IACVX,IAAA,EAAM,CAACK,MAAA,EAAQO,MAAM;IACrB,WAAS;GACX;EAEAC,iBAAmB;IACjBb,IAAA,EAAM,CAACK,MAAA,EAAQO,MAAM;IACrB,SAAS;GACX;EAEAE,KAAO;IACLd,IAAA,EAAM,CAACK,MAAA,EAAQJ,QAAQ;GACzB;EAEAc,GAAK;IACHf,IAAM,EAAAY;GACR;EAEAI,eAAiB;IACfhB,IAAM,EAAAY,MAAA;IACN,SAAS;GACX;EAEAK,WAAa;IACXjB,IAAM,EAAAK,MAAA;IACN,WAAS;GACX;EAEAa,UAAY;IACVlB,IAAM,EAAAC;GACR;EAEAkB,QAAU;IACRnB,IAAM,EAAAJ,OAAA;IACN,WAAS;GACX;EAEAwB,IAAM;IACJpB,IAAM,EAAAK,MAAA;IACN,WAAS;IACTC,SAAA,WAAAA,UAAUC,GAAuC;MAC/C,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,OAAS,YAAU,OAAO,EAAEC,QAAA,CAASD,GAAG;IAClD;GACF;EAEAc,MAAQ;IACNrB,IAAM,EAAAK,MAAA;IACNC,SAAA,WAAAA,UAAUC,GAAyC;MACjD,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,SAAW,aAAW,WAAW,OAAO,EAAEC,QAAA,CAASD,GAAG;IAChE;GACF;EAEAe,MAAQ;IACNtB,IAAA,EAAM,CAACK,MAAA,EAAQJ,QAAQ;GACzB;EAEAsB,UAAY;IACVvB,IAAM,EAAAC;GACR;EAEAuB,GAAK;IACHxB,IAAA,EAAM,CAACK,MAAA,EAAQJ,QAAQ;GACzB;EAEAwB,QAAU;IACRzB,IAAM,EAAAU;GACR;EAEAgB,IAAM;IACJ1B,IAAA,EAAM,CAACK,MAAA,EAAQJ,QAAQ;GACzB;EAEA0B,KAAO;IACL3B,IAAM,EAAA4B,KAAA;IACN,WAAS;GACX;EACAC,UAAY;IACV7B,IAAM,EAAA4B,KAAA;IACN,WAAS;GACX;EAEAE,YAAc;IACZ9B,IAAM,EAAA4B,KAAA;IACN,SAAS,WAATG,SAAA;MAAA,OAAgD,EAAC;IAAA;GACnD;EAEAC,YAAc;IACZhC,IAAA,EAAM,CAACK,MAAA,EAAQJ,QAAQ;GACzB;EAEAgC,MAAQ,EAAAhC,QAAA;EAERiC,QAAU,EAAAjC,QAAA;EAEVkC,OAAS,EAAAlC,QAAA;EAETmC,OAAS,EAAAnC,QAAA;EAEToC,UAAY,EAAApC,QAAA;EAEZqC,OAAS,EAAArC,QAAA;EAETsC,OAAS,EAAAtC,QAAA;EAETuC,aAAe,EAAAvC,QAAA;EAEfwC,YAAc,EAAAxC,QAAA;EAEdyC,YAAc,EAAAzC,QAAA;EAEd0C,OAAS,EAAA1C,QAAA;EAET2C,QAAU,EAAA3C;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}