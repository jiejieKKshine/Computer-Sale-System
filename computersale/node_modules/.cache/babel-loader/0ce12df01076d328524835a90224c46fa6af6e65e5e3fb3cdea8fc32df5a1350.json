{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\n/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport { _ as _defineProperty } from '../_chunks/dep-fa52aa21.mjs';\nimport { isVNode, defineComponent, createVNode, TransitionGroup } from 'vue';\nimport { i as isFunction_1 } from '../_chunks/dep-06dcbf4c.mjs';\nimport { u as upperFirst_1 } from '../_chunks/dep-03ad9cda.mjs';\nimport { renderTNodeJSX } from '../utils/render-tnode.mjs';\nimport { getCreateElement, getScopedSlots } from './adapt.mjs';\nimport useDragHandle from './hooks/useDragHandle.mjs';\nimport useTreeAction from './hooks/useTreeAction.mjs';\nimport useTreeNodes from './hooks/useTreeNodes.mjs';\nimport useTreeScroll from './hooks/useTreeScroll.mjs';\nimport useTreeState from './hooks/useTreeState.mjs';\nimport useTreeStore from './hooks/useTreeStore.mjs';\nimport useTreeStyles from './hooks/useTreeStyles.mjs';\nimport props from './props.mjs';\nimport { getNode } from './util.mjs';\nimport { useConfig } from '../config-provider/useConfig.mjs';\nimport { usePrefixClass } from '../hooks/useConfig.mjs';\nimport '../_chunks/dep-4659d73b.mjs';\nimport '../_chunks/dep-eca422c3.mjs';\nimport '../_chunks/dep-bf7257e7.mjs';\nimport '../_chunks/dep-2b09875b.mjs';\nimport '../_chunks/dep-cda4f568.mjs';\nimport '../_chunks/dep-7932c2e8.mjs';\nimport '../_chunks/dep-eae2a67e.mjs';\nimport '../_chunks/dep-626c497d.mjs';\nimport '../_chunks/dep-ab4bb9b8.mjs';\nimport '../_chunks/dep-29ef8419.mjs';\nimport '../_chunks/dep-d8a34055.mjs';\nimport '../_chunks/dep-2f6e28a0.mjs';\nimport '../_chunks/dep-5a17bf21.mjs';\nimport '../_chunks/dep-b91a8171.mjs';\nimport '../_chunks/dep-1b78414a.mjs';\nimport '../_chunks/dep-1a4bb2f2.mjs';\nimport '../_chunks/dep-cc8ebcde.mjs';\nimport '../_chunks/dep-76958824.mjs';\nimport '../_chunks/dep-f5579c03.mjs';\nimport '../_chunks/dep-6dc3d0e1.mjs';\nimport '../_chunks/dep-d84f19b3.mjs';\nimport '../_chunks/dep-3c65fae8.mjs';\nimport '../_chunks/dep-03a7fb6c.mjs';\nimport '../_chunks/dep-bad871d5.mjs';\nimport '../utils/withInstall.mjs';\nimport '../hooks/useVModel.mjs';\nimport '../hooks/useDefaultValue.mjs';\nimport 'tdesign-icons-vue-next';\nimport '../checkbox/index.mjs';\nimport '../checkbox/checkbox.mjs';\nimport '../_chunks/dep-5efe53d1.mjs';\nimport '../_chunks/dep-593f2b67.mjs';\nimport '../checkbox/props.mjs';\nimport '../hooks/useRipple.mjs';\nimport '../hooks/useKeepAnimation.mjs';\nimport '../_chunks/dep-1b9718a2.mjs';\nimport '../_chunks/dep-92f86d1d.mjs';\nimport '../_chunks/dep-6ab5363f.mjs';\nimport '../_chunks/dep-e9841b9e.mjs';\nimport '../_chunks/dep-49aeee3c.mjs';\nimport '../_chunks/dep-b5bf85f5.mjs';\nimport '../_chunks/dep-ec0bbd9f.mjs';\nimport '../_chunks/dep-e065dc25.mjs';\nimport '../_chunks/dep-400ec705.mjs';\nimport '../_chunks/dep-02f9394e.mjs';\nimport '../_chunks/dep-1725b1c7.mjs';\nimport '../_chunks/dep-532409c5.mjs';\nimport '../_common/js/global-config/default-config.mjs';\nimport '../_common/js/global-config/locale/zh_CN.mjs';\nimport '../_chunks/dep-9ed7da3e.mjs';\nimport '../_chunks/dep-7f65fc46.mjs';\nimport '../_chunks/dep-4f2cabb0.mjs';\nimport '../utils/set-style.mjs';\nimport '../hooks/tnode.mjs';\nimport '../checkbox/constants.mjs';\nimport '../checkbox/hooks/useCheckboxLazyLoad.mjs';\nimport '../_common/js/utils/observe.mjs';\nimport '../checkbox/hooks/useKeyboardEvent.mjs';\nimport '../_common/js/common.mjs';\nimport '../hooks/useDisabled.mjs';\nimport '../_chunks/dep-df472119.mjs';\nimport '../hooks/useReadonly.mjs';\nimport '../_chunks/dep-bb899bfd.mjs';\nimport '../_chunks/dep-5922c8f3.mjs';\nimport '../_chunks/dep-732f0b7d.mjs';\nimport '../config-provider/type.mjs';\nimport '../checkbox/group.mjs';\nimport '../_chunks/dep-4a990ea3.mjs';\nimport '../_chunks/dep-64c2053b.mjs';\nimport '../_chunks/dep-4d4e2af1.mjs';\nimport '../_chunks/dep-3c4e4325.mjs';\nimport '../_chunks/dep-58a62202.mjs';\nimport '../checkbox/checkbox-group-props.mjs';\nimport '../hooks/slot.mjs';\nimport './style/css.mjs';\nimport '../checkbox/type.mjs';\nimport '../loading/index.mjs';\nimport '../_chunks/dep-bff7e93a.mjs';\nimport '../_chunks/dep-0b414bea.mjs';\nimport '../_chunks/dep-fbd4eddb.mjs';\nimport '../_chunks/dep-ae202bc0.mjs';\nimport '../_chunks/dep-aeaef131.mjs';\nimport '../_chunks/dep-69e0f6fc.mjs';\nimport '../_chunks/dep-ea20409b.mjs';\nimport '../loading/plugin.mjs';\nimport '../loading/loading.mjs';\nimport '../loading/icon/gradient.mjs';\nimport '../_common/js/loading/circle-adapter.mjs';\nimport '../_common/js/utils/set-style.mjs';\nimport '../_common/js/utils/helper.mjs';\nimport '../_chunks/dep-5d3f7c0e.mjs';\nimport '../_chunks/dep-73384992.mjs';\nimport '../_chunks/dep-889e457b.mjs';\nimport '../utils/dom.mjs';\nimport '../utils/easing.mjs';\nimport '../loading/props.mjs';\nimport '../hooks/useTeleport.mjs';\nimport '../loading/type.mjs';\nimport '../hooks/useGlobalIcon.mjs';\nimport '../hooks/useLazyLoad.mjs';\nimport '../hooks/useVirtualScrollNew.mjs';\nimport '../hooks/useResizeObserver.mjs';\nimport '../_chunks/dep-525a54df.mjs';\nimport '../_chunks/dep-5993931e.mjs';\nimport '../_chunks/dep-8dfc9324.mjs';\nimport '../_common/js/tree/tree-node.mjs';\nimport '../_chunks/dep-0d047dce.mjs';\nimport '../_chunks/dep-f909a041.mjs';\nimport '../_chunks/dep-e4a8ef7d.mjs';\nimport '../_chunks/dep-d2f4e062.mjs';\nimport '../_common/js/tree/tree-node-model.mjs';\nimport '../_chunks/dep-88ae49da.mjs';\nimport '../_chunks/dep-88c8d9ed.mjs';\nimport '../_chunks/dep-4ec29b23.mjs';\nimport '../_common/js/log/log.mjs';\nimport '../_common/js/log/index.mjs';\nimport './hooks/useDraggable.mjs';\nimport './tree-item.mjs';\nimport './hooks/useItemState.mjs';\nimport './hooks/useTreeItem.mjs';\nimport './hooks/useItemEvents.mjs';\nimport './hooks/useRenderIcon.mjs';\nimport './hooks/useRenderLabel.mjs';\nimport './hooks/useRenderLine.mjs';\nimport './hooks/useRenderOperations.mjs';\nimport './hooks/useTreeEvents.mjs';\nimport '../_chunks/dep-4de7e2ca.mjs';\nimport '../_chunks/dep-0e581ac0.mjs';\nimport '../_common/js/tree/tree-store.mjs';\nimport '../_chunks/dep-33c61f2b.mjs';\nimport '../_chunks/dep-6a7115de.mjs';\nimport 'mitt';\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _isSlot(s) {\n  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !isVNode(s);\n}\nvar _TdTree = defineComponent({\n  name: \"TTree\",\n  model: {\n    prop: \"value\",\n    event: \"change\"\n  },\n  props: _objectSpread({}, props),\n  setup: function setup(props2, context) {\n    var _useConfig = useConfig(\"tree\"),\n      t = _useConfig.t,\n      global = _useConfig.global;\n    var classPrefix = usePrefixClass();\n    var componentName = usePrefixClass(\"tree\");\n    var _useTreeState = useTreeState(props2, context),\n      state = _useTreeState.state;\n    var treeContentRef = state.treeContentRef,\n      isScrolling = state.isScrolling;\n    var _useTreeStore = useTreeStore(state),\n      store = _useTreeStore.store,\n      updateStoreConfig = _useTreeStore.updateStoreConfig,\n      rebuild = _useTreeStore.rebuild;\n    useDragHandle(state);\n    var _useTreeAction = useTreeAction(state),\n      setActived = _useTreeAction.setActived,\n      setExpanded = _useTreeAction.setExpanded,\n      setChecked = _useTreeAction.setChecked;\n    var _useTreeScroll = useTreeScroll(state),\n      onInnerVirtualScroll = _useTreeScroll.onInnerVirtualScroll,\n      virtualConfig = _useTreeScroll.virtualConfig,\n      scrollToElement = _useTreeScroll.scrollToElement;\n    var _useTreeNodes = useTreeNodes(state),\n      renderTreeNodes = _useTreeNodes.renderTreeNodes,\n      nodesEmpty = _useTreeNodes.nodesEmpty;\n    var _useTreeStyles = useTreeStyles(state),\n      treeClasses = _useTreeStyles.treeClasses,\n      treeContentStyles = _useTreeStyles.treeContentStyles,\n      scrollStyles = _useTreeStyles.scrollStyles,\n      cursorStyles = _useTreeStyles.cursorStyles;\n    return {\n      t: t,\n      global: global,\n      classPrefix: classPrefix,\n      componentName: componentName,\n      state: state,\n      store: store,\n      treeClasses: treeClasses,\n      treeContentRef: treeContentRef,\n      rebuild: rebuild,\n      updateStoreConfig: updateStoreConfig,\n      setActived: setActived,\n      setExpanded: setExpanded,\n      setChecked: setChecked,\n      renderTreeNodes: renderTreeNodes,\n      nodesEmpty: nodesEmpty,\n      isScrolling: isScrolling,\n      onInnerVirtualScroll: onInnerVirtualScroll,\n      treeContentStyles: treeContentStyles,\n      scrollStyles: scrollStyles,\n      cursorStyles: cursorStyles,\n      virtualConfig: virtualConfig,\n      scrollToElement: scrollToElement,\n      scrollTo: scrollToElement\n    };\n  },\n  watch: {\n    data: function data(list) {\n      this.rebuild(list);\n    }\n  },\n  methods: {\n    refresh: function refresh() {\n      this.store.refreshState();\n    },\n    setItem: function setItem(value, options) {\n      var _this = this;\n      var node = this.store.getNode(value);\n      var spec = options;\n      var keys = Object.keys(spec);\n      if (node && spec) {\n        [\"expanded\", \"actived\", \"checked\"].forEach(function (name) {\n          if (keys.includes(name)) {\n            var val = spec[name];\n            delete spec[name];\n            var methodName = \"set\".concat(upperFirst_1(name));\n            var setupMethod = _this[methodName];\n            if (isFunction_1(setupMethod)) {\n              setupMethod.call(_this, node, val);\n            }\n          }\n        });\n        node.set(spec);\n      }\n    },\n    getItem: function getItem(value) {\n      var node = this.store.getNode(value);\n      return node === null || node === void 0 ? void 0 : node.getModel();\n    },\n    getItems: function getItems(value) {\n      var nodes = this.store.getNodes(value);\n      return nodes.map(function (node) {\n        return node.getModel();\n      });\n    },\n    appendTo: function appendTo(para, item) {\n      var store = this.store;\n      var list = [];\n      if (Array.isArray(item)) {\n        list = item;\n      } else {\n        list = [item];\n      }\n      list.forEach(function (item2) {\n        var val = (item2 === null || item2 === void 0 ? void 0 : item2.value) || \"\";\n        var node = getNode(store, val);\n        if (node) {\n          store.appendNodes(para, node);\n        } else {\n          store.appendNodes(para, item2);\n        }\n      });\n    },\n    insertBefore: function insertBefore(value, item) {\n      var store = this.store;\n      var val = (item === null || item === void 0 ? void 0 : item.value) || \"\";\n      var node = getNode(store, val);\n      if (node) {\n        store.insertBefore(value, node);\n      } else {\n        store.insertBefore(value, item);\n      }\n    },\n    insertAfter: function insertAfter(value, item) {\n      var store = this.store;\n      var val = (item === null || item === void 0 ? void 0 : item.value) || \"\";\n      var node = getNode(store, val);\n      if (node) {\n        store.insertAfter(value, node);\n      } else {\n        store.insertAfter(value, item);\n      }\n    },\n    remove: function remove(value) {\n      return this.store.remove(value);\n    },\n    getIndex: function getIndex(value) {\n      return this.store.getNodeIndex(value);\n    },\n    getParent: function getParent(value) {\n      var node = this.store.getParent(value);\n      return node === null || node === void 0 ? void 0 : node.getModel();\n    },\n    getParents: function getParents(value) {\n      var nodes = this.store.getParents(value);\n      return nodes.map(function (node) {\n        return node.getModel();\n      });\n    },\n    getPath: function getPath(value) {\n      var node = this.store.getNode(value);\n      var pathNodes = [];\n      if (node) {\n        pathNodes = node.getPath().map(function (node2) {\n          return node2.getModel();\n        });\n      }\n      return pathNodes;\n    },\n    getTreeData: function getTreeData(value) {\n      var list = [];\n      if (value) {\n        var node = this.store.getNode(value);\n        if (!node) return [];\n        list = this.store.getNodes(value);\n      } else {\n        list = this.store.getNodes();\n      }\n      var nodeMap = {};\n      var treeNodes = [];\n      list.forEach(function (item) {\n        var value2 = item.value;\n        var itemData = _objectSpread(_objectSpread({}, item.data), {}, {\n          value: value2\n        });\n        if (itemData.children !== true) {\n          delete itemData.children;\n        }\n        nodeMap[value2] = itemData;\n        var parent = item.getParent();\n        if (!parent) {\n          treeNodes.push(itemData);\n        } else {\n          var parentData = nodeMap[parent.value];\n          if (!parentData) {\n            treeNodes.push(itemData);\n          } else {\n            if (!Array.isArray(parentData.children)) {\n              parentData.children = [];\n            }\n            parentData.children.push(itemData);\n          }\n        }\n      });\n      return treeNodes;\n    }\n  },\n  render: function render(h) {\n    var _allNodes$value$filte, _allNodes$value, _refProps$scroll$valu, _refProps$scroll$valu2;\n    var state = this.state,\n      treeClasses = this.treeClasses,\n      updateStoreConfig = this.updateStoreConfig,\n      renderTreeNodes = this.renderTreeNodes,\n      nodesEmpty = this.nodesEmpty,\n      isScrolling = this.isScrolling,\n      virtualConfig = this.virtualConfig,\n      treeContentStyles = this.treeContentStyles,\n      scrollStyles = this.scrollStyles,\n      cursorStyles = this.cursorStyles;\n    var createElement = getCreateElement(h);\n    var scope = state.scope,\n      allNodes = state.allNodes,\n      refProps = state.refProps;\n    scope.scopedSlots = getScopedSlots(this);\n    updateStoreConfig();\n    var treeNodeViews = renderTreeNodes(createElement);\n    var cname = this.componentName;\n    var isVirtual = virtualConfig.isVirtualScroll.value;\n    var emptyNode = null;\n    if (nodesEmpty) {\n      var useLocale = !this.empty && !this.$slots.empty;\n      var emptyContent = useLocale ? this.t(this.global.empty) : renderTNodeJSX(this, \"empty\");\n      emptyNode = createVNode(\"div\", {\n        \"class\": \"\".concat(cname, \"__empty\")\n      }, [emptyContent]);\n    } else if (treeNodeViews.length <= 0) {\n      emptyNode = createVNode(\"div\", null, null);\n    }\n    var $props = this.$props;\n    var transition = $props.transition;\n    var treeNodeList = null;\n    if (!transition || isVirtual && isScrolling) {\n      treeNodeList = createVNode(\"div\", {\n        \"class\": \"\".concat(cname, \"__list\"),\n        \"style\": scrollStyles\n      }, [treeNodeViews]);\n    } else {\n      treeNodeList = createVNode(TransitionGroup, {\n        \"tag\": \"div\",\n        \"class\": \"\".concat(cname, \"__list\"),\n        \"enter-active-class\": \"\".concat(cname, \"__item--enter-active\"),\n        \"leave-active-class\": \"\".concat(cname, \"__item--leave-active\"),\n        \"style\": scrollStyles\n      }, _isSlot(treeNodeViews) ? treeNodeViews : {\n        \"default\": function _default() {\n          return [treeNodeViews];\n        }\n      });\n    }\n    var topValue = ((_allNodes$value$filte = (_allNodes$value = allNodes.value) === null || _allNodes$value === void 0 ? void 0 : _allNodes$value.filter(function (node) {\n      return node.visible;\n    }).length) !== null && _allNodes$value$filte !== void 0 ? _allNodes$value$filte : 0) * ((_refProps$scroll$valu = (_refProps$scroll$valu2 = refProps.scroll.value) === null || _refProps$scroll$valu2 === void 0 ? void 0 : _refProps$scroll$valu2.rowHeight) !== null && _refProps$scroll$valu !== void 0 ? _refProps$scroll$valu : 34);\n    var placeholderStyles = {\n      width: \"1px\",\n      height: \"1px\",\n      opacity: 0,\n      pointerEvents: \"none\",\n      position: \"absolute\",\n      left: 0,\n      top: \"\".concat(topValue, \"px\")\n    };\n    var placeholderEl = createVNode(\"div\", {\n      \"style\": placeholderStyles\n    }, null);\n    var treeNode = createVNode(\"div\", {\n      \"class\": treeClasses,\n      \"ref\": \"treeContentRef\",\n      \"onScroll\": this.onInnerVirtualScroll,\n      \"style\": treeContentStyles\n    }, [isVirtual && createVNode(\"div\", {\n      \"class\": \"\".concat(cname, \"__vscroll-cursor\"),\n      \"style\": cursorStyles\n    }, null), emptyNode || treeNodeList, isVirtual && placeholderEl]);\n    return treeNode;\n  }\n});\nexport { _TdTree as default };","map":{"version":3,"names":["_isSlot","s","Object","prototype","toString","call","isVNode","_TdTree","defineComponent","name","model","prop","event","props","_objectSpread","setup","props2","context","_useConfig","useConfig","t","global","classPrefix","usePrefixClass","componentName","_useTreeState","useTreeState","state","treeContentRef","isScrolling","_useTreeStore","useTreeStore","store","updateStoreConfig","rebuild","useDragHandle","_useTreeAction","useTreeAction","setActived","setExpanded","setChecked","_useTreeScroll","useTreeScroll","onInnerVirtualScroll","virtualConfig","scrollToElement","_useTreeNodes","useTreeNodes","renderTreeNodes","nodesEmpty","_useTreeStyles","useTreeStyles","treeClasses","treeContentStyles","scrollStyles","cursorStyles","scrollTo","watch","data","list","methods","refresh","refreshState","setItem","value","options","_this","node","getNode","spec","keys","forEach","includes","val","methodName","concat","upperFirst_1","setupMethod","isFunction_1","set","getItem","getModel","getItems","nodes","getNodes","map","appendTo","para","item","Array","isArray","item2","appendNodes","insertBefore","insertAfter","remove","getIndex","getNodeIndex","getParent","getParents","getPath","pathNodes","node2","getTreeData","nodeMap","treeNodes","value2","itemData","children","parent","push","parentData","render","h","_allNodes$value$filte","_allNodes$value","_refProps$scroll$valu","_refProps$scroll$valu2","createElement","getCreateElement","scope","allNodes","refProps","scopedSlots","getScopedSlots","treeNodeViews","cname","isVirtual","isVirtualScroll","emptyNode","useLocale","empty","$slots","emptyContent","renderTNodeJSX","createVNode","length","$props","transition","treeNodeList","TransitionGroup","topValue","filter","visible","scroll","rowHeight","placeholderStyles","width","height","opacity","pointerEvents","position","left","top","placeholderEl","treeNode"],"sources":["../../src/tree/tree.tsx"],"sourcesContent":["import isFunction from 'lodash/isFunction';\nimport upperFirst from 'lodash/upperFirst';\nimport { renderTNodeJSX } from '../utils/render-tnode';\nimport {\n  defineComponent,\n  getCreateElement,\n  getScopedSlots,\n  TransitionGroup,\n  TreeNode,\n  TypeCreateElement,\n  TypeStyles,\n  TypeTNodeReturnValue,\n  TypeTreeOptionData,\n  useConfig,\n  usePrefixClass,\n} from './adapt';\nimport useDragHandle from './hooks/useDragHandle';\nimport useTreeAction from './hooks/useTreeAction';\nimport useTreeNodes from './hooks/useTreeNodes';\nimport useTreeScroll from './hooks/useTreeScroll';\nimport useTreeState from './hooks/useTreeState';\nimport useTreeStore from './hooks/useTreeStore';\nimport useTreeStyles from './hooks/useTreeStyles';\nimport props from './props';\nimport { TreeNodeState, TreeNodeValue, TypeTreeNodeModel } from './tree-types';\nimport { getNode } from './util';\n\n// 2022.11.02 tabliang 备注\n// 之前尝试实现了嵌套布局，原本预期嵌套布局能够提升大数据量下，全部渲染节点时的性能表现\n// 实测性能提升有限，不如使用虚拟滚动的收益高，反而导致了组件的维护困难与混乱\n// 自 2022 年初首次提出嵌套布局要求，大半年以来，对嵌套布局的需求也不是很高\n// 因此废弃嵌套布局方案，之后重点解决虚拟滚动能力\n\nexport default defineComponent({\n  name: 'TTree',\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n\n  props: {\n    ...props,\n  },\n\n  setup(props, context) {\n    const { t, global } = useConfig('tree');\n    const classPrefix = usePrefixClass();\n    const componentName = usePrefixClass('tree');\n\n    // 用于 hooks 传递数据\n    const { state } = useTreeState(props, context);\n    const { treeContentRef, isScrolling } = state;\n    const { store, updateStoreConfig, rebuild } = useTreeStore(state);\n\n    useDragHandle(state);\n    const { setActived, setExpanded, setChecked } = useTreeAction(state);\n    const { onInnerVirtualScroll, virtualConfig, scrollToElement } = useTreeScroll(state);\n    const { renderTreeNodes, nodesEmpty } = useTreeNodes(state);\n    const { treeClasses, treeContentStyles, scrollStyles, cursorStyles } = useTreeStyles(state);\n\n    // 不想暴露给用户的属性与方法，统一挂载到 setup 返回的对象上\n    // 实例上无法直接访问这些方法与属性\n    return {\n      t,\n      global,\n      classPrefix,\n      componentName,\n      state,\n      store,\n      treeClasses,\n      treeContentRef,\n\n      rebuild,\n      updateStoreConfig,\n      setActived,\n      setExpanded,\n      setChecked,\n      renderTreeNodes,\n      nodesEmpty,\n\n      isScrolling,\n      onInnerVirtualScroll,\n      treeContentStyles,\n      scrollStyles,\n      cursorStyles,\n      virtualConfig,\n      scrollToElement: scrollToElement, // deprecated\n      scrollTo: scrollToElement,\n    };\n  },\n\n  watch: {\n    // 实测发现，composition api 中的 refsProps watch ，回调时间迟于 $nextTick 回调\n    // 因此改为在这里绑定 data 属性监听，实测这里的 watch 回调，早于 $nextTick 回调发生\n    data(list) {\n      this.rebuild(list);\n    },\n  },\n  // 在 methods 提供公共方法\n  // 实例上可以直接访问\n  methods: {\n    // 刷新树节点状态\n    refresh(): void {\n      this.store.refreshState();\n    },\n    // 设置目标节点状态\n    setItem(value: TreeNodeValue, options: TreeNodeState): void {\n      const node: TreeNode = this.store.getNode(value);\n      const spec = options;\n      const keys = Object.keys(spec);\n      if (node && spec) {\n        ['expanded', 'actived', 'checked'].forEach((name) => {\n          if (keys.includes(name)) {\n            const val = spec[name];\n            delete spec[name];\n            const methodName = `set${upperFirst(name)}`;\n            const setupMethod = this[methodName];\n            if (isFunction(setupMethod)) {\n              setupMethod.call(this, node, val);\n            }\n          }\n        });\n        node.set(spec);\n      }\n    },\n    // 获取目标节点\n    getItem(value: TreeNodeValue): TypeTreeNodeModel {\n      const node: TreeNode = this.store.getNode(value);\n      return node?.getModel();\n    },\n    // 无 value 参数: 获取 tree 所有节点，一维结构\n    // 传递 value 参数: 获取节点值对应的目标节点下，包含自己在内的所有子节点\n    getItems(value?: TreeNodeValue): TypeTreeNodeModel[] {\n      const nodes = this.store.getNodes(value);\n      return nodes.map((node: TreeNode) => node.getModel());\n    },\n    // 将节点数据插入到目标节点\n    // 无目标节点，则插入为根节点\n    appendTo(para?: TreeNodeValue, item?: TypeTreeOptionData | TypeTreeOptionData[]) {\n      const { store } = this;\n      let list = [];\n      if (Array.isArray(item)) {\n        list = item;\n      } else {\n        list = [item];\n      }\n      list.forEach((item) => {\n        const val = item?.value || '';\n        const node = getNode(store, val);\n        if (node) {\n          store.appendNodes(para, node);\n        } else {\n          store.appendNodes(para, item);\n        }\n      });\n    },\n    // 在指定节点之前插入单个节点数据\n    insertBefore(value: TreeNodeValue, item: TypeTreeOptionData) {\n      const { store } = this;\n      const val = item?.value || '';\n      const node = getNode(store, val);\n      if (node) {\n        store.insertBefore(value, node);\n      } else {\n        store.insertBefore(value, item);\n      }\n    },\n    // 在指定节点之后插入单个节点数据\n    insertAfter(value: TreeNodeValue, item: TypeTreeOptionData) {\n      const { store } = this;\n      const val = item?.value || '';\n      const node = getNode(store, val);\n      if (node) {\n        store.insertAfter(value, node);\n      } else {\n        store.insertAfter(value, item);\n      }\n    },\n    // 移除目标节点\n    remove(value?: TreeNodeValue) {\n      return this.store.remove(value);\n    },\n    // 获取节点在当前层级的 index\n    getIndex(value: TreeNodeValue): number {\n      return this.store.getNodeIndex(value);\n    },\n    // 获取父节点\n    getParent(value: TreeNodeValue): TypeTreeNodeModel {\n      const node = this.store.getParent(value);\n      return node?.getModel();\n    },\n    // 获取父节点列表\n    getParents(value: TreeNodeValue): TypeTreeNodeModel[] {\n      const nodes = this.store.getParents(value);\n      return nodes.map((node: TreeNode) => node.getModel());\n    },\n    // 获取路径节点列表\n    getPath(value: TreeNodeValue): TypeTreeNodeModel[] {\n      const node = this.store.getNode(value);\n      let pathNodes: TypeTreeNodeModel[] = [];\n      if (node) {\n        pathNodes = node.getPath().map((node: TreeNode) => node.getModel());\n      }\n      return pathNodes;\n    },\n    // 提供树结构原始数据\n    getTreeData(value?: TreeNodeValue): TypeTreeOptionData[] {\n      let list: TreeNode[] = [];\n      if (value) {\n        const node = this.store.getNode(value);\n        if (!node) return [];\n        list = this.store.getNodes(value);\n      } else {\n        list = this.store.getNodes();\n      }\n      // 一维结构树节点转树结构数据\n      const nodeMap = {};\n      const treeNodes: TypeTreeOptionData[] = [];\n      list.forEach((item: TreeNode) => {\n        const { value } = item;\n        const itemData = {\n          ...item.data,\n          value,\n        };\n        if (itemData.children !== true) {\n          delete itemData.children;\n        }\n        nodeMap[value] = itemData;\n        const parent = item.getParent();\n        if (!parent) {\n          // 是根节点\n          treeNodes.push(itemData);\n        } else {\n          const parentData = nodeMap[parent.value];\n          if (!parentData) {\n            // 为目标节点范围内的根节点\n            treeNodes.push(itemData);\n          } else {\n            if (!Array.isArray(parentData.children)) {\n              parentData.children = [];\n            }\n            parentData.children.push(itemData);\n          }\n        }\n      });\n      return treeNodes;\n    },\n  },\n  render(h: TypeCreateElement) {\n    const {\n      state,\n      treeClasses,\n      updateStoreConfig,\n      renderTreeNodes,\n      nodesEmpty,\n      isScrolling,\n      virtualConfig,\n      treeContentStyles,\n      scrollStyles,\n      cursorStyles,\n    } = this;\n\n    const createElement = getCreateElement(h);\n\n    const { scope, allNodes, refProps } = state;\n    // 更新 scopedSlots\n    scope.scopedSlots = getScopedSlots(this);\n\n    updateStoreConfig();\n\n    const treeNodeViews = renderTreeNodes(createElement);\n    const cname = this.componentName;\n    const isVirtual = virtualConfig.isVirtualScroll.value;\n\n    // 空数据判定\n    let emptyNode: TypeTNodeReturnValue = null;\n    if (nodesEmpty) {\n      const useLocale = !this.empty && !this.$slots.empty;\n      const emptyContent = useLocale ? this.t(this.global.empty) : renderTNodeJSX(this, 'empty');\n      emptyNode = <div class={`${cname}__empty`}>{emptyContent}</div>;\n    } else if (treeNodeViews.length <= 0) {\n      // 数据切换时，有闪现的缓存节点呈现\n      // 用这个替换内容置空\n      emptyNode = <div></div>;\n    }\n\n    // 构造列表\n    const { $props } = this;\n    const { transition } = $props;\n\n    let treeNodeList = null;\n    if (!transition || (isVirtual && isScrolling)) {\n      // vue3 不使用 transition group 会导致展开收起动作异常\n      treeNodeList = (\n        <div class={`${cname}__list`} style={scrollStyles}>\n          {treeNodeViews}\n        </div>\n      );\n    } else {\n      // 启用动画时，需要确保滚动中动画样式失效\n      treeNodeList = (\n        <TransitionGroup\n          tag=\"div\"\n          class={`${cname}__list`}\n          enter-active-class={`${cname}__item--enter-active`}\n          leave-active-class={`${cname}__item--leave-active`}\n          style={scrollStyles}\n        >\n          {treeNodeViews}\n        </TransitionGroup>\n      );\n    }\n\n    const topValue =\n      (allNodes.value?.filter((node) => node.visible).length ?? 0) * (refProps.scroll.value?.rowHeight ?? 34);\n    const placeholderStyles: TypeStyles = {\n      width: '1px',\n      height: '1px',\n      opacity: 0,\n      pointerEvents: 'none',\n      position: 'absolute',\n      left: 0,\n      top: `${topValue}px`,\n    };\n\n    const placeholderEl = <div style={placeholderStyles} />;\n\n    const treeNode = (\n      <div class={treeClasses} ref=\"treeContentRef\" onScroll={this.onInnerVirtualScroll} style={treeContentStyles}>\n        {isVirtual && <div class={`${cname}__vscroll-cursor`} style={cursorStyles} />}\n        {emptyNode || treeNodeList}\n        {isVirtual && placeholderEl}\n      </div>\n    );\n\n    return treeNode;\n  },\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBwB,SAAAA,QAAAC,CAAA;EAAA,cAAAA,CAAA,mBAAAC,MAAA,CAAAC,SAAA,CAAAC,QAAA,CAAAC,IAAA,CAAAJ,CAAA,4BAAAK,OAAA,CAAAL,CAAA;AAAA;AAQxB,IAAAM,OAAA,GAAeC,eAAgB;EAC7BC,IAAM;EACNC,KAAO;IACLC,IAAM;IACNC,KAAO;GACT;EAEAC,KAAO,EAAAC,aAAA,CACF,IAAAD,KAAA,CACL;EAEAE,KAAA,WAAAA,MAAMC,MAAA,EAAOC,OAAS;IACpB,IAAAC,UAAA,GAAsBC,SAAA,CAAU,MAAM;MAA9BC,CAAA,GAAAF,UAAA,CAAAE,CAAA;MAAGC,MAAO,GAAAH,UAAA,CAAPG,MAAO;IAClB,IAAMC,WAAA,GAAcC,cAAe;IAC7B,IAAAC,aAAA,GAAgBD,cAAA,CAAe,MAAM;IAG3C,IAAAE,aAAA,GAAkBC,YAAA,CAAaV,MAAA,EAAOC,OAAO;MAArCU,KAAA,GAAAF,aAAA,CAAAE,KAAA;IACF,IAAEC,cAAgB,GAAgBD,KAAA,CAAhCC,cAAgB;MAAAC,WAAA,GAAgBF,KAAA,CAAhBE,WAAA;IACxB,IAAAC,aAAA,GAA8CC,YAAA,CAAaJ,KAAK;MAAxDK,KAAO,GAAAF,aAAA,CAAPE,KAAO;MAAAC,iBAAA,GAAAH,aAAA,CAAAG,iBAAA;MAAmBC,OAAQ,GAAAJ,aAAA,CAARI,OAAQ;IAE1CC,aAAA,CAAcR,KAAK;IACnB,IAAAS,cAAA,GAAgDC,aAAA,CAAcV,KAAK;MAA3DW,UAAY,GAAAF,cAAA,CAAZE,UAAY;MAAAC,WAAA,GAAAH,cAAA,CAAAG,WAAA;MAAaC,UAAW,GAAAJ,cAAA,CAAXI,UAAW;IAC5C,IAAAC,cAAA,GAAiEC,aAAA,CAAcf,KAAK;MAA5EgB,oBAAsB,GAAAF,cAAA,CAAtBE,oBAAsB;MAAAC,aAAA,GAAAH,cAAA,CAAAG,aAAA;MAAeC,eAAgB,GAAAJ,cAAA,CAAhBI,eAAgB;IAC7D,IAAAC,aAAA,GAAwCC,YAAA,CAAapB,KAAK;MAAlDqB,eAAA,GAAAF,aAAA,CAAAE,eAAA;MAAiBC,UAAW,GAAAH,aAAA,CAAXG,UAAW;IACpC,IAAAC,cAAA,GAAuEC,aAAA,CAAcxB,KAAK;MAAlFyB,WAAa,GAAAF,cAAA,CAAbE,WAAa;MAAAC,iBAAA,GAAAH,cAAA,CAAAG,iBAAA;MAAmBC,YAAA,GAAAJ,cAAA,CAAAI,YAAA;MAAcC,YAAa,GAAAL,cAAA,CAAbK,YAAa;IAI5D;MACLnC,CAAA,EAAAA,CAAA;MACAC,MAAA,EAAAA,MAAA;MACAC,WAAA,EAAAA,WAAA;MACAE,aAAA,EAAAA,aAAA;MACAG,KAAA,EAAAA,KAAA;MACAK,KAAA,EAAAA,KAAA;MACAoB,WAAA,EAAAA,WAAA;MACAxB,cAAA,EAAAA,cAAA;MAEAM,OAAA,EAAAA,OAAA;MACAD,iBAAA,EAAAA,iBAAA;MACAK,UAAA,EAAAA,UAAA;MACAC,WAAA,EAAAA,WAAA;MACAC,UAAA,EAAAA,UAAA;MACAQ,eAAA,EAAAA,eAAA;MACAC,UAAA,EAAAA,UAAA;MAEApB,WAAA,EAAAA,WAAA;MACAc,oBAAA,EAAAA,oBAAA;MACAU,iBAAA,EAAAA,iBAAA;MACAC,YAAA,EAAAA,YAAA;MACAC,YAAA,EAAAA,YAAA;MACAX,aAAA,EAAAA,aAAA;MACAC,eAAA,EAAAA,eAAA;MACAW,QAAU,EAAAX;KACZ;GACF;EAEAY,KAAO;IAGLC,IAAA,WAAAA,KAAKC,IAAM;MACT,KAAKzB,OAAA,CAAQyB,IAAI;IACnB;GACF;EAGAC,OAAS;IAEPC,OAAgB,WAAhBA,OAAgBA,CAAA;MACd,KAAK7B,KAAA,CAAM8B,YAAa;KAC1B;IAEAC,OAAA,WAAAA,QAAQC,KAAA,EAAsBC,OAA8B;MAAA,IAAAC,KAAA;MAC1D,IAAMC,IAAiB,QAAKnC,KAAM,CAAAoC,OAAA,CAAQJ,KAAK;MAC/C,IAAMK,IAAO,GAAAJ,OAAA;MACP,IAAAK,IAAA,GAAOpE,MAAO,CAAAoE,IAAA,CAAKD,IAAI;MAC7B,IAAIF,IAAA,IAAQE,IAAM;QAChB,CAAC,YAAY,SAAW,WAAS,CAAE,CAAAE,OAAA,CAAQ,UAAC9D,IAAS;UAC/C,IAAA6D,IAAA,CAAKE,QAAS,CAAA/D,IAAI,CAAG;YACvB,IAAMgE,GAAA,GAAMJ,IAAK,CAAA5D,IAAA;YACjB,OAAO4D,IAAK,CAAA5D,IAAA;YACN,IAAAiE,UAAA,SAAAC,MAAA,CAAmBC,YAAA,CAAWnE,IAAI;YACxC,IAAMoE,WAAA,GAAcX,KAAK,CAAAQ,UAAA;YACrB,IAAAI,YAAA,CAAWD,WAAW,CAAG;cACfA,WAAA,CAAAxE,IAAA,CAAK6D,KAAM,EAAAC,IAAA,EAAMM,GAAG;YAClC;UACF;QACF,CAAC;QACDN,IAAA,CAAKY,GAAA,CAAIV,IAAI;MACf;KACF;IAEAW,OAAA,WAAAA,QAAQhB,KAAyC;MAC/C,IAAMG,IAAiB,QAAKnC,KAAM,CAAAoC,OAAA,CAAQJ,KAAK;MAC/C,OAAOG,IAAA,aAAAA,IAAA,uBAAAA,IAAA,CAAMc,QAAS;KACxB;IAGAC,QAAA,WAAAA,SAASlB,KAA4C;MACnD,IAAMmB,KAAQ,QAAKnD,KAAM,CAAAoD,QAAA,CAASpB,KAAK;MACvC,OAAOmB,KAAA,CAAME,GAAI,WAAClB,IAAmB;QAAA,OAAAA,IAAA,CAAKc,QAAA,EAAU;OAAA;KACtD;IAGAK,QAAA,WAAAA,SAASC,IAAA,EAAsBC,IAAkD;MACzE,IAAExD,KAAA,GAAU,KAAVA,KAAA;MACR,IAAI2B,IAAA,GAAO,EAAC;MACR,IAAA8B,KAAA,CAAMC,OAAQ,CAAAF,IAAI,CAAG;QAChB7B,IAAA,GAAA6B,IAAA;MACT,CAAO;QACL7B,IAAA,GAAO,CAAC6B,IAAI;MACd;MACK7B,IAAA,CAAAY,OAAA,CAAQ,UAACoB,KAAS;QACf,IAAAlB,GAAA,GAAM,CAAAkB,KAAA,aAAAA,KAAA,uBAAAA,KAAA,CAAM3B,KAAS;QACrB,IAAAG,IAAA,GAAOC,OAAQ,CAAApC,KAAA,EAAOyC,GAAG;QAC/B,IAAIN,IAAM;UACFnC,KAAA,CAAA4D,WAAA,CAAYL,IAAA,EAAMpB,IAAI;QAC9B,CAAO;UACCnC,KAAA,CAAA4D,WAAA,CAAYL,IAAA,EAAMI,KAAI;QAC9B;MACF,CAAC;KACH;IAEAE,YAAA,WAAAA,aAAa7B,KAAA,EAAsBwB,IAA0B;MACrD,IAAExD,KAAA,GAAU,KAAVA,KAAA;MACF,IAAAyC,GAAA,GAAM,CAAAe,IAAA,aAAAA,IAAA,uBAAAA,IAAA,CAAMxB,KAAS;MACrB,IAAAG,IAAA,GAAOC,OAAQ,CAAApC,KAAA,EAAOyC,GAAG;MAC/B,IAAIN,IAAM;QACFnC,KAAA,CAAA6D,YAAA,CAAa7B,KAAA,EAAOG,IAAI;MAChC,CAAO;QACCnC,KAAA,CAAA6D,YAAA,CAAa7B,KAAA,EAAOwB,IAAI;MAChC;KACF;IAEAM,WAAA,WAAAA,YAAY9B,KAAA,EAAsBwB,IAA0B;MACpD,IAAExD,KAAA,GAAU,KAAVA,KAAA;MACF,IAAAyC,GAAA,GAAM,CAAAe,IAAA,aAAAA,IAAA,uBAAAA,IAAA,CAAMxB,KAAS;MACrB,IAAAG,IAAA,GAAOC,OAAQ,CAAApC,KAAA,EAAOyC,GAAG;MAC/B,IAAIN,IAAM;QACFnC,KAAA,CAAA8D,WAAA,CAAY9B,KAAA,EAAOG,IAAI;MAC/B,CAAO;QACCnC,KAAA,CAAA8D,WAAA,CAAY9B,KAAA,EAAOwB,IAAI;MAC/B;KACF;IAEAO,MAAA,WAAAA,OAAO/B,KAAuB;MACrB,YAAKhC,KAAM,CAAA+D,MAAA,CAAO/B,KAAK;KAChC;IAEAgC,QAAA,WAAAA,SAAShC,KAA8B;MAC9B,YAAKhC,KAAM,CAAAiE,YAAA,CAAajC,KAAK;KACtC;IAEAkC,SAAA,WAAAA,UAAUlC,KAAyC;MACjD,IAAMG,IAAO,QAAKnC,KAAM,CAAAkE,SAAA,CAAUlC,KAAK;MACvC,OAAOG,IAAA,aAAAA,IAAA,uBAAAA,IAAA,CAAMc,QAAS;KACxB;IAEAkB,UAAA,WAAAA,WAAWnC,KAA2C;MACpD,IAAMmB,KAAQ,QAAKnD,KAAM,CAAAmE,UAAA,CAAWnC,KAAK;MACzC,OAAOmB,KAAA,CAAME,GAAI,WAAClB,IAAmB;QAAA,OAAAA,IAAA,CAAKc,QAAA,EAAU;OAAA;KACtD;IAEAmB,OAAA,WAAAA,QAAQpC,KAA2C;MACjD,IAAMG,IAAO,QAAKnC,KAAM,CAAAoC,OAAA,CAAQJ,KAAK;MACrC,IAAIqC,SAAA,GAAiC,EAAC;MACtC,IAAIlC,IAAM;QACIkC,SAAA,GAAAlC,IAAA,CAAKiC,OAAA,EAAU,CAAAf,GAAA,CAAI,UAACiB,KAAmB;UAAA,OAAAA,KAAA,CAAKrB,QAAA,EAAU;SAAA;MACpE;MACO,OAAAoB,SAAA;KACT;IAEAE,WAAA,WAAAA,YAAYvC,KAA6C;MACvD,IAAIL,IAAA,GAAmB,EAAC;MACxB,IAAIK,KAAO;QACT,IAAMG,IAAO,QAAKnC,KAAM,CAAAoC,OAAA,CAAQJ,KAAK;QACrC,IAAI,CAACG,IAAA,EAAM,OAAO,EAAC;QACZR,IAAA,QAAK3B,KAAM,CAAAoD,QAAA,CAASpB,KAAK;MAClC,CAAO;QACEL,IAAA,QAAK3B,KAAA,CAAMoD,QAAS;MAC7B;MAEA,IAAMoB,OAAA,GAAU,EAAC;MACjB,IAAMC,SAAA,GAAkC,EAAC;MACpC9C,IAAA,CAAAY,OAAA,CAAQ,UAACiB,IAAmB;QACzB,IAAEkB,MAAA,GAAUlB,IAAA,CAAVxB,KAAA;QACR,IAAM2C,QAAW,GAAA7F,aAAA,CAAAA,aAAA,CACZ,IAAA0E,IAAK,CAAA9B,IAAA;UACRM,KAAA,EAAA0C;SACF;QACI,IAAAC,QAAA,CAASC,QAAA,KAAa,IAAM;UAC9B,OAAOD,QAAS,CAAAC,QAAA;QAClB;QACAJ,OAAA,CAAQE,MAAS,IAAAC,QAAA;QACX,IAAAE,MAAA,GAASrB,IAAA,CAAKU,SAAU;QAC9B,IAAI,CAACW,MAAQ;UAEXJ,SAAA,CAAUK,IAAA,CAAKH,QAAQ;QACzB,CAAO;UACC,IAAAI,UAAA,GAAaP,OAAA,CAAQK,MAAO,CAAA7C,KAAA;UAClC,IAAI,CAAC+C,UAAY;YAEfN,SAAA,CAAUK,IAAA,CAAKH,QAAQ;UACzB,CAAO;YACL,IAAI,CAAClB,KAAA,CAAMC,OAAQ,CAAAqB,UAAA,CAAWH,QAAQ,CAAG;cACvCG,UAAA,CAAWH,QAAA,GAAW,EAAC;YACzB;YACWG,UAAA,CAAAH,QAAA,CAASE,IAAA,CAAKH,QAAQ;UACnC;QACF;MACF,CAAC;MACM,OAAAF,SAAA;IACT;GACF;EACAO,MAAA,WAAAA,OAAOC,CAAsB;IAAA,IAAAC,qBAAA,EAAAC,eAAA,EAAAC,qBAAA,EAAAC,sBAAA;IACrB,IACJ1F,KAAA,GAUE,KAVFA,KAAA;MACAyB,WAAA,GASE,KATFA,WAAA;MACAnB,iBAAA,GAQE,KARFA,iBAAA;MACAe,eAAA,GAOE,KAPFA,eAAA;MACAC,UAAA,GAME,KANFA,UAAA;MACApB,WAAA,GAKE,KALFA,WAAA;MACAe,aAAA,GAIE,KAJFA,aAAA;MACAS,iBAAA,GAGE,KAHFA,iBAAA;MACAC,YAAA,GAEE,KAFFA,YAAA;MACAC,YAAA,GACE,KADFA,YAAA;IAGI,IAAA+D,aAAA,GAAgBC,gBAAA,CAAiBN,CAAC;IAExC,IAAQO,KAAA,GAA8B7F,KAAA,CAA9B6F,KAAA;MAAOC,QAAU,GAAa9F,KAAA,CAAvB8F,QAAU;MAAAC,QAAA,GAAa/F,KAAA,CAAb+F,QAAA;IAEnBF,KAAA,CAAAG,WAAA,GAAcC,cAAA,CAAe,IAAI;IAErB3F,iBAAA;IAEZ,IAAA4F,aAAA,GAAgB7E,eAAA,CAAgBsE,aAAa;IACnD,IAAMQ,KAAA,GAAQ,IAAK,CAAAtG,aAAA;IACb,IAAAuG,SAAA,GAAYnF,aAAA,CAAcoF,eAAgB,CAAAhE,KAAA;IAGhD,IAAIiE,SAAkC;IACtC,IAAIhF,UAAY;MACd,IAAMiF,SAAA,GAAY,CAAC,KAAKC,KAAS,KAAC,KAAKC,MAAO,CAAAD,KAAA;MACxC,IAAAE,YAAA,GAAeH,SAAY,QAAK9G,CAAE,MAAKC,MAAA,CAAO8G,KAAK,IAAIG,cAAe,OAAM,OAAO;MACzFL,SAAA,GAAAM,WAAA;QAAA,YAAA5D,MAAA,CAA2BmD,KAAA;MAAA,IAAiBO,YAAA,CAA/B;IACf,WAAWR,aAAc,CAAAW,MAAA,IAAU,CAAG;MAGpCP,SAAA,GAAAM,WAAA,CAAiB;IACnB;IAGM,IAAEE,MAAA,GAAW,KAAXA,MAAA;IACF,IAAEC,UAAA,GAAeD,MAAA,CAAfC,UAAA;IAER,IAAIC,YAAe;IACf,KAACD,UAAe,IAAAX,SAAA,IAAalG,WAAc;MAG3C8G,YAAA,GAAAJ,WAAA;QAAA,YAAA5D,MAAA,CAAemD,KAAA;eAAsB,EAAAxE;MAAA,IAClCuE,aAAA,CADF;IAIL,CAAO;MAELc,YAAA,GAAAJ,WAAA,CAAAK,eAAA;QAAA;QAAA,YAAAjE,MAAA,CAGcmD,KACV;QAAA,yBAAAnD,MAAA,CAAuBmD,KAAA;QAAA,yBAAAnD,MAAA,CACAmD,KAAA;QAAA,OAChB,EAAAxE;MAAA,GAAAtD,OAAA,CAEN6H,aAAA,IAAAA,aAAA;;kBAAAA,aAAA;;OAPF;IAUL;IAEA,IAAMgB,QACH,KAAA3B,qBAAA,IAAAC,eAAA,GAAAM,QAAA,CAASzD,KAAO,cAAAmD,eAAA,KAAhB,kBAAAA,eAAA,CAAgB2B,MAAA,CAAO,UAAC3E,IAAS;MAAA,OAAAA,IAAA,CAAK4E,OAAO;IAAA,GAAEP,MAAU,cAAAtB,qBAAA,cAAAA,qBAAA,UAAAE,qBAAA,IAAAC,sBAAA,GAAMK,QAAS,CAAAsB,MAAA,CAAOhF,KAAA,cAAAqD,sBAAA,uBAAhBA,sBAAA,CAAuB4B,SAAa,cAAA7B,qBAAA,cAAAA,qBAAA;IACtG,IAAM8B,iBAAgC;MACpCC,KAAO;MACPC,MAAQ;MACRC,OAAS;MACTC,aAAe;MACfC,QAAU;MACVC,IAAM;MACNC,GAAA,KAAA9E,MAAA,CAAQkE,QAAA;KACV;IAEA,IAAMa,aAAgB,GAAAnB,WAAA;MAAA,OAAY,EAAAW;KAAmB;IAE/C,IAAAS,QAAA,GAAApB,WAAA;MAAA,SACQnF,WAAA;MAAA;MAAA,UAA4C,MAAK,CAAAT,oBAAA;MAAA,OAA6B,EAAAU;KACvF,GAAA0E,SAAA,IAAAQ,WAAA;yBAA4BT,KAAA;MAAA,OAAgC,EAAAvE;KAAc,SAC1E0E,SAAa,IAAAU,YAAA,EACbZ,SAAa,IAAA2B,aAAA,CAHf;IAOI,OAAAC,QAAA;EACT;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}