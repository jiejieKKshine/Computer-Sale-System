{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nvar props = {\n  current: {\n    type: [String, Number],\n    \"default\": void 0\n  },\n  modelValue: {\n    type: [String, Number],\n    \"default\": void 0\n  },\n  defaultCurrent: {\n    type: [String, Number]\n  },\n  layout: {\n    type: String,\n    \"default\": \"horizontal\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"horizontal\", \"vertical\"].includes(val);\n    }\n  },\n  options: {\n    type: Array\n  },\n  readonly: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  separator: {\n    type: String,\n    \"default\": \"line\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"line\", \"dashed\", \"arrow\"].includes(val);\n    }\n  },\n  sequence: {\n    type: String,\n    \"default\": \"positive\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"positive\", \"reverse\"].includes(val);\n    }\n  },\n  theme: {\n    type: String,\n    \"default\": \"default\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"default\", \"dot\"].includes(val);\n    }\n  },\n  onChange: Function\n};\nexport { props as default };","map":{"version":3,"names":["props","current","type","String","Number","modelValue","defaultCurrent","layout","validator","val","includes","options","Array","readonly","Boolean","separator","sequence","theme","onChange","Function"],"sources":["../../src/steps/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdStepsProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 当前步骤，即整个步骤条进度。默认根据步骤下标判断步骤的完成状态，当前步骤为进行中，当前步骤之前的步骤为已完成，当前步骤之后的步骤为未开始。如果每个步骤没有设置 value，current 值为步骤长度则表示所有步骤已完成。如果每个步骤设置了自定义 value，则 current = 'FINISH' 表示所有状态完成 */\n  current: {\n    type: [String, Number] as PropType<TdStepsProps['current']>,\n    default: undefined as TdStepsProps['current'],\n  },\n  modelValue: {\n    type: [String, Number] as PropType<TdStepsProps['current']>,\n    default: undefined as TdStepsProps['current'],\n  },\n  /** 当前步骤，即整个步骤条进度。默认根据步骤下标判断步骤的完成状态，当前步骤为进行中，当前步骤之前的步骤为已完成，当前步骤之后的步骤为未开始。如果每个步骤没有设置 value，current 值为步骤长度则表示所有步骤已完成。如果每个步骤设置了自定义 value，则 current = 'FINISH' 表示所有状态完成，非受控属性 */\n  defaultCurrent: {\n    type: [String, Number] as PropType<TdStepsProps['defaultCurrent']>,\n  },\n  /** 步骤条方向，有两种：横向和纵向 */\n  layout: {\n    type: String as PropType<TdStepsProps['layout']>,\n    default: 'horizontal' as TdStepsProps['layout'],\n    validator(val: TdStepsProps['layout']): boolean {\n      if (!val) return true;\n      return ['horizontal', 'vertical'].includes(val);\n    },\n  },\n  /** 步骤条数据列表（作用和 StepItem 效果一样） */\n  options: {\n    type: Array as PropType<TdStepsProps['options']>,\n  },\n  /** 只读状态 */\n  readonly: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 步骤条分割符 */\n  separator: {\n    type: String as PropType<TdStepsProps['separator']>,\n    default: 'line' as TdStepsProps['separator'],\n    validator(val: TdStepsProps['separator']): boolean {\n      if (!val) return true;\n      return ['line', 'dashed', 'arrow'].includes(val);\n    },\n  },\n  /** 步骤条顺序 */\n  sequence: {\n    type: String as PropType<TdStepsProps['sequence']>,\n    default: 'positive' as TdStepsProps['sequence'],\n    validator(val: TdStepsProps['sequence']): boolean {\n      if (!val) return true;\n      return ['positive', 'reverse'].includes(val);\n    },\n  },\n  /** 步骤条风格 */\n  theme: {\n    type: String as PropType<TdStepsProps['theme']>,\n    default: 'default' as TdStepsProps['theme'],\n    validator(val: TdStepsProps['theme']): boolean {\n      if (!val) return true;\n      return ['default', 'dot'].includes(val);\n    },\n  },\n  /** 当前步骤发生变化时触发 */\n  onChange: Function as PropType<TdStepsProps['onChange']>,\n};\n"],"mappings":";;;;;;AASA,IAAAA,KAAA,GAAe;EAEbC,OAAS;IACPC,IAAA,EAAM,CAACC,MAAA,EAAQC,MAAM;IACrB,WAAS;GACX;EACAC,UAAY;IACVH,IAAA,EAAM,CAACC,MAAA,EAAQC,MAAM;IACrB,WAAS;GACX;EAEAE,cAAgB;IACdJ,IAAA,EAAM,CAACC,MAAA,EAAQC,MAAM;GACvB;EAEAG,MAAQ;IACNL,IAAM,EAAAC,MAAA;IACN,WAAS;IACTK,SAAA,WAAAA,UAAUC,GAAsC;MAC9C,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,cAAc,UAAU,EAAEC,QAAA,CAASD,GAAG;IAChD;GACF;EAEAE,OAAS;IACPT,IAAM,EAAAU;GACR;EAEAC,QAAU;IACRX,IAAM,EAAAY,OAAA;IACN,WAAS;GACX;EAEAC,SAAW;IACTb,IAAM,EAAAC,MAAA;IACN,WAAS;IACTK,SAAA,WAAAA,UAAUC,GAAyC;MACjD,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,MAAQ,YAAU,OAAO,EAAEC,QAAA,CAASD,GAAG;IACjD;GACF;EAEAO,QAAU;IACRd,IAAM,EAAAC,MAAA;IACN,WAAS;IACTK,SAAA,WAAAA,UAAUC,GAAwC;MAChD,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,YAAY,SAAS,EAAEC,QAAA,CAASD,GAAG;IAC7C;GACF;EAEAQ,KAAO;IACLf,IAAM,EAAAC,MAAA;IACN,WAAS;IACTK,SAAA,WAAAA,UAAUC,GAAqC;MAC7C,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,WAAW,KAAK,EAAEC,QAAA,CAASD,GAAG;IACxC;GACF;EAEAS,QAAU,EAAAC;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}