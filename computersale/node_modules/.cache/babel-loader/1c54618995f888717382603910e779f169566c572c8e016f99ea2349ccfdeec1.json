{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport { getCurrentInstance, ref } from 'vue';\nimport { k as kebabCase_1 } from '../_chunks/dep-bad871d5.mjs';\nimport '../_chunks/dep-eca422c3.mjs';\nimport '../_chunks/dep-5a17bf21.mjs';\nimport '../_chunks/dep-7932c2e8.mjs';\nimport '../_chunks/dep-bf7257e7.mjs';\nimport '../_chunks/dep-4659d73b.mjs';\nimport '../_chunks/dep-eae2a67e.mjs';\nimport '../_chunks/dep-626c497d.mjs';\nimport '../_chunks/dep-ab4bb9b8.mjs';\nimport '../_chunks/dep-29ef8419.mjs';\nfunction useVModel(value, modelValue, defaultValue, onChange) {\n  var propName = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"value\";\n  var _getCurrentInstance = getCurrentInstance(),\n    emit = _getCurrentInstance.emit,\n    vnode = _getCurrentInstance.vnode;\n  var internalValue = ref();\n  var vProps = vnode.props || {};\n  var isVM = Object.prototype.hasOwnProperty.call(vProps, \"modelValue\") || Object.prototype.hasOwnProperty.call(vProps, \"model-value\");\n  var isVMP = Object.prototype.hasOwnProperty.call(vProps, propName) || Object.prototype.hasOwnProperty.call(vProps, kebabCase_1(propName));\n  if (isVM) {\n    return [modelValue, function (newValue) {\n      emit(\"update:modelValue\", newValue);\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      onChange === null || onChange === void 0 || onChange.apply(void 0, [newValue].concat(args));\n    }];\n  }\n  if (isVMP) {\n    return [value, function (newValue) {\n      emit(\"update:\".concat(propName), newValue);\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n      onChange === null || onChange === void 0 || onChange.apply(void 0, [newValue].concat(args));\n    }];\n  }\n  internalValue.value = defaultValue;\n  return [internalValue, function (newValue) {\n    internalValue.value = newValue;\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n    onChange === null || onChange === void 0 || onChange.apply(void 0, [newValue].concat(args));\n  }];\n}\nexport { useVModel as default };","map":{"version":3,"names":["useVModel","value","modelValue","defaultValue","onChange","propName","arguments","length","undefined","_getCurrentInstance","getCurrentInstance","emit","vnode","internalValue","ref","vProps","props","isVM","Object","prototype","hasOwnProperty","call","isVMP","kebabCase_1","newValue","_len","args","Array","_key","apply","concat","_len2","_key2","_len3","_key3"],"sources":["../../src/hooks/useVModel.ts"],"sourcesContent":["import { ref, Ref, getCurrentInstance } from 'vue';\nimport kebabCase from 'lodash/kebabCase';\n\nexport type ChangeHandler<T, P extends any[]> = (value: T, ...args: P) => void;\n\nexport default function useVModel<T, P extends any[]>(\n  value: Ref<T>,\n  modelValue: Ref<T>,\n  defaultValue: T,\n  onChange: ChangeHandler<T, P>,\n  propName = 'value',\n): [Ref<T>, ChangeHandler<T, P>] {\n  const { emit, vnode } = getCurrentInstance();\n  const internalValue: Ref<T> = ref();\n\n  const vProps = vnode.props || {};\n  const isVM =\n    Object.prototype.hasOwnProperty.call(vProps, 'modelValue') ||\n    Object.prototype.hasOwnProperty.call(vProps, 'model-value');\n  const isVMP =\n    Object.prototype.hasOwnProperty.call(vProps, propName) ||\n    Object.prototype.hasOwnProperty.call(vProps, kebabCase(propName));\n\n  if (isVM) {\n    return [\n      modelValue,\n      (newValue, ...args) => {\n        emit('update:modelValue', newValue);\n        onChange?.(newValue, ...args);\n      },\n    ];\n  }\n\n  if (isVMP) {\n    return [\n      value,\n      (newValue, ...args) => {\n        emit(`update:${propName}`, newValue);\n        onChange?.(newValue, ...args);\n      },\n    ];\n  }\n\n  internalValue.value = defaultValue;\n  return [\n    internalValue,\n    (newValue, ...args) => {\n      internalValue.value = newValue;\n      onChange?.(newValue, ...args);\n    },\n  ];\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAKA,SAAwBA,UACtBC,KACA,EAAAC,UAAA,EACAC,YACA,EAAAC,QAAA,EAE+B;EAAA,IAD/BC,QAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAW,OACoB;EAC/B,IAAAG,mBAAA,GAAwBC,kBAAmB;IAAnCC,IAAA,GAAAF,mBAAA,CAAAE,IAAA;IAAMC,KAAM,GAAAH,mBAAA,CAANG,KAAM;EACpB,IAAMC,aAAA,GAAwBC,GAAI;EAE5B,IAAAC,MAAA,GAASH,KAAM,CAAAI,KAAA,IAAS,EAAC;EAC/B,IAAMC,IACJ,GAAAC,MAAA,CAAOC,SAAU,CAAAC,cAAA,CAAeC,IAAK,CAAAN,MAAA,EAAQ,YAAY,KACzDG,MAAO,CAAAC,SAAA,CAAUC,cAAe,CAAAC,IAAA,CAAKN,MAAA,EAAQ,aAAa;EAC5D,IAAMO,KACJ,GAAAJ,MAAA,CAAOC,SAAU,CAAAC,cAAA,CAAeC,IAAA,CAAKN,MAAQ,EAAAV,QAAQ,CACrD,IAAAa,MAAA,CAAOC,SAAA,CAAUC,cAAe,CAAAC,IAAA,CAAKN,MAAQ,EAAAQ,WAAA,CAAUlB,QAAQ,CAAC;EAElE,IAAIY,IAAM;IACD,QACLf,UAAA,EACA,UAACsB,QAAA,EAAsB;MACrBb,IAAA,CAAK,qBAAqBa,QAAQ;MAAA,SAAAC,IAAA,GAAAnB,SAAA,CAAAC,MAAA,EADtBmB,IAAS,OAAAC,KAAA,CAAAF,IAAA,OAAAA,IAAA,WAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;QAATF,IAAS,CAAAE,IAAA,QAAAtB,SAAA,CAAAsB,IAAA;MAAA;MAEVxB,QAAA,aAAAA,QAAA,eAAAA,QAAA,CAAAyB,KAAA,UAAAL,QAAA,EAAAM,MAAA,CAAaJ,IAAI;IAC9B,EACF;EACF;EAEA,IAAIJ,KAAO;IACF,QACLrB,KAAA,EACA,UAACuB,QAAA,EAAsB;MAChBb,IAAA,WAAAmB,MAAA,CAAUzB,QAAA,GAAYmB,QAAQ;MAAA,SAAAO,KAAA,GAAAzB,SAAA,CAAAC,MAAA,EADvBmB,IAAS,OAAAC,KAAA,CAAAI,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAATN,IAAS,CAAAM,KAAA,QAAA1B,SAAA,CAAA0B,KAAA;MAAA;MAEV5B,QAAA,aAAAA,QAAA,eAAAA,QAAA,CAAAyB,KAAA,UAAAL,QAAA,EAAAM,MAAA,CAAaJ,IAAI;IAC9B,EACF;EACF;EAEAb,aAAA,CAAcZ,KAAQ,GAAAE,YAAA;EACf,QACLU,aAAA,EACA,UAACW,QAAA,EAAsB;IACrBX,aAAA,CAAcZ,KAAQ,GAAAuB,QAAA;IAAA,SAAAS,KAAA,GAAA3B,SAAA,CAAAC,MAAA,EADVmB,IAAS,OAAAC,KAAA,CAAAM,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAATR,IAAS,CAAAQ,KAAA,QAAA5B,SAAA,CAAA4B,KAAA;IAAA;IAEV9B,QAAA,aAAAA,QAAA,eAAAA,QAAA,CAAAyB,KAAA,UAAAL,QAAA,EAAAM,MAAA,CAAaJ,IAAI;EAC9B,EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}