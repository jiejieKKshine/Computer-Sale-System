{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport { _ as _defineProperty } from '../_chunks/dep-fa52aa21.mjs';\nimport { defineComponent, computed, inject, ref, reactive, watchEffect, nextTick, createVNode, mergeProps } from 'vue';\nimport { Tooltip } from '../tooltip/index.mjs';\nimport { usePrefixClass } from '../hooks/useConfig.mjs';\nimport { useSliderTooltip } from './hooks/useSliderTooltip.mjs';\nimport { sliderPropsInjectKey } from './util/constants.mjs';\nimport { i as isFunction_1 } from '../_chunks/dep-06dcbf4c.mjs';\nimport '../_chunks/dep-4659d73b.mjs';\nimport '../tooltip/tooltip.mjs';\nimport '../_chunks/dep-5efe53d1.mjs';\nimport '../_chunks/dep-593f2b67.mjs';\nimport '../_chunks/dep-88ae49da.mjs';\nimport '../_chunks/dep-eca422c3.mjs';\nimport '../_chunks/dep-7932c2e8.mjs';\nimport '../_chunks/dep-bf7257e7.mjs';\nimport '../_chunks/dep-eae2a67e.mjs';\nimport '../_chunks/dep-626c497d.mjs';\nimport '../_chunks/dep-ab4bb9b8.mjs';\nimport '../_chunks/dep-29ef8419.mjs';\nimport '../_chunks/dep-5922c8f3.mjs';\nimport '../_chunks/dep-92f86d1d.mjs';\nimport '../_chunks/dep-6ab5363f.mjs';\nimport '../_chunks/dep-6dc3d0e1.mjs';\nimport '../_chunks/dep-76958824.mjs';\nimport '../_chunks/dep-2b09875b.mjs';\nimport '../_chunks/dep-cda4f568.mjs';\nimport '../_chunks/dep-e9841b9e.mjs';\nimport '../_chunks/dep-1a4bb2f2.mjs';\nimport '../_chunks/dep-cc8ebcde.mjs';\nimport '../_chunks/dep-f5579c03.mjs';\nimport '../_chunks/dep-49aeee3c.mjs';\nimport '../_chunks/dep-b5bf85f5.mjs';\nimport '../_chunks/dep-3c65fae8.mjs';\nimport '../_chunks/dep-ec0bbd9f.mjs';\nimport '../_chunks/dep-1b78414a.mjs';\nimport '../_chunks/dep-d84f19b3.mjs';\nimport '../_chunks/dep-732f0b7d.mjs';\nimport '../_chunks/dep-aeaef131.mjs';\nimport '../_chunks/dep-88c8d9ed.mjs';\nimport '../_chunks/dep-2f6e28a0.mjs';\nimport '../_chunks/dep-1725b1c7.mjs';\nimport '../_chunks/dep-4ec29b23.mjs';\nimport '../_chunks/dep-02f9394e.mjs';\nimport '../_chunks/dep-400ec705.mjs';\nimport '../tooltip/props.mjs';\nimport '../popup/props.mjs';\nimport '../popup/index.mjs';\nimport '../popup/popup.mjs';\nimport '@popperjs/core';\nimport '../_chunks/dep-5993931e.mjs';\nimport '../_chunks/dep-8dfc9324.mjs';\nimport '../_chunks/dep-03a7fb6c.mjs';\nimport '../hooks/index.mjs';\nimport '../hooks/icon.mjs';\nimport '../hooks/slot.mjs';\nimport '../utils/render-tnode.mjs';\nimport '../_chunks/dep-b91a8171.mjs';\nimport '../_chunks/dep-03ad9cda.mjs';\nimport '../_chunks/dep-d8a34055.mjs';\nimport '../_chunks/dep-5a17bf21.mjs';\nimport '../_chunks/dep-bad871d5.mjs';\nimport '../hooks/tnode.mjs';\nimport '../hooks/useCommonClassName.mjs';\nimport '../config-provider/useConfig.mjs';\nimport '../_chunks/dep-bb899bfd.mjs';\nimport '../_chunks/dep-1b9718a2.mjs';\nimport '../_chunks/dep-e065dc25.mjs';\nimport '../_chunks/dep-532409c5.mjs';\nimport '../_common/js/global-config/default-config.mjs';\nimport '../_common/js/global-config/locale/zh_CN.mjs';\nimport '../_chunks/dep-9ed7da3e.mjs';\nimport '../_chunks/dep-7f65fc46.mjs';\nimport '../_chunks/dep-4f2cabb0.mjs';\nimport '../config-provider/type.mjs';\nimport '../hooks/useDefaultValue.mjs';\nimport '../hooks/useDestroyOnClose.mjs';\nimport '../hooks/useKeepAnimation.mjs';\nimport '../hooks/useRipple.mjs';\nimport '../utils/set-style.mjs';\nimport '../hooks/useVirtualScroll.mjs';\nimport '../hooks/useVModel.mjs';\nimport '../hooks/useImagePreviewUrl.mjs';\nimport '../_common/js/upload/utils.mjs';\nimport '../_common/js/log/log.mjs';\nimport '../utils/dom.mjs';\nimport '../utils/easing.mjs';\nimport '../_common/js/utils/set-style.mjs';\nimport '../popup/container.mjs';\nimport '../_chunks/dep-4a990ea3.mjs';\nimport '../hooks/useResizeObserver.mjs';\nimport '../utils/withInstall.mjs';\nimport './style/css.mjs';\nimport '../popup/type.mjs';\nimport '../tooltip/util.mjs';\nimport '../tooltip/type.mjs';\nimport './util/common.mjs';\nvar _SliderButton = defineComponent({\n  name: \"TSliderButton\",\n  props: {\n    value: {\n      type: [Number],\n      \"default\": 0\n    },\n    vertical: {\n      type: Boolean,\n      \"default\": false\n    },\n    tooltipProps: {\n      type: [Boolean, Object],\n      \"default\": true\n    },\n    label: {\n      type: [String, Boolean, Function]\n    },\n    range: {\n      type: Boolean,\n      \"default\": false\n    },\n    position: {\n      type: String\n    }\n  },\n  emits: [\"input\", \"mouseup\"],\n  setup: function setup(props, ctx) {\n    var COMPONENT_NAME = usePrefixClass(\"slider__button\");\n    var tooltipConfig = computed(function () {\n      return props;\n    });\n    var _useSliderTooltip = useSliderTooltip(tooltipConfig),\n      tooltipRef = _useSliderTooltip.tooltipRef,\n      tooltipProps = _useSliderTooltip.tooltipProps,\n      toggleTooltip = _useSliderTooltip.toggleTooltip,\n      showTooltip = _useSliderTooltip.showTooltip;\n    var parentProps = inject(sliderPropsInjectKey);\n    var buttonRef = ref();\n    var dragged = ref(false);\n    var slideButtonProps = reactive({\n      dragging: false,\n      isClick: false,\n      startX: 0,\n      startY: 0,\n      startPos: 0,\n      newPos: null\n    });\n    var rangeDiff = computed(function () {\n      return Number(parentProps.max) - Number(parentProps.min);\n    });\n    var currentPos = computed(function () {\n      return \"\".concat((props.value - parentProps.min) / rangeDiff.value * 100, \"%\");\n    });\n    var step = computed(function () {\n      return parentProps.step;\n    });\n    var wrapperStyle = computed(function () {\n      return props.vertical ? {\n        bottom: currentPos.value\n      } : {\n        left: currentPos.value\n      };\n    });\n    watchEffect(function () {\n      parentProps.toggleDragging(slideButtonProps.dragging);\n    });\n    var setPosition = function setPosition(pos) {\n      var newPos = pos;\n      if (newPos === null || Number.isNaN(newPos)) {\n        return;\n      }\n      if (newPos > 100) {\n        newPos = 100;\n      } else if (newPos < 0) {\n        newPos = 0;\n      }\n      var perStepLen = 100 * step.value / rangeDiff.value;\n      var steps = Math.round(newPos / perStepLen);\n      var value = steps * perStepLen * rangeDiff.value * 0.01;\n      value += parentProps.min;\n      value = Number(parseFloat(\"\".concat(value)).toFixed(parentProps.precision));\n      ctx.emit(\"input\", value);\n      nextTick(function () {\n        var _tooltipRef$value$upd, _tooltipRef$value;\n        tooltipRef.value && ((_tooltipRef$value$upd = (_tooltipRef$value = tooltipRef.value).updatePopper) === null || _tooltipRef$value$upd === void 0 ? void 0 : _tooltipRef$value$upd.call(_tooltipRef$value));\n      });\n    };\n    var handleMouseEnter = function handleMouseEnter() {\n      buttonRef.value.focus();\n      toggleTooltip(true);\n    };\n    var handleMouseLeave = function handleMouseLeave() {\n      if (!slideButtonProps.dragging) {\n        toggleTooltip(false);\n      }\n    };\n    var onDragStart = function onDragStart(event) {\n      slideButtonProps.dragging = true;\n      slideButtonProps.isClick = true;\n      var type = event.type;\n      var clientY = event.clientY,\n        clientX = event.clientX;\n      if (type === \"touchstart\") {\n        var touch = event.touches;\n        var _ref = [touch[0].clientY, touch[0].clientX];\n        clientY = _ref[0];\n        clientX = _ref[1];\n      }\n      if (props.vertical) {\n        slideButtonProps.startY = clientY;\n      } else {\n        slideButtonProps.startX = clientX;\n      }\n      slideButtonProps.startPos = parseFloat(currentPos.value);\n      slideButtonProps.newPos = slideButtonProps.startPos;\n    };\n    var onDragging = function onDragging(e) {\n      var event = e;\n      if (!slideButtonProps.dragging) {\n        return;\n      }\n      dragged.value = true;\n      slideButtonProps.isClick = false;\n      if (parentProps !== null && parentProps !== void 0 && parentProps.resetSize && isFunction_1(parentProps === null || parentProps === void 0 ? void 0 : parentProps.resetSize)) {\n        parentProps.resetSize();\n      }\n      var diff = 0;\n      var parentSliderSize = parentProps.sliderSize;\n      if (props.vertical) {\n        diff = slideButtonProps.startY - event.clientY;\n      } else {\n        diff = event.clientX - slideButtonProps.startX;\n      }\n      diff = diff / parentSliderSize * 100;\n      slideButtonProps.newPos = slideButtonProps.startPos + diff;\n      setPosition(slideButtonProps.newPos);\n    };\n    var _onDragEnd = function onDragEnd() {\n      if (slideButtonProps.dragging) {\n        setTimeout(function () {\n          slideButtonProps.dragging = false;\n          toggleTooltip(false);\n          if (!slideButtonProps.isClick) {\n            setPosition(slideButtonProps.newPos);\n          }\n          dragged.value && ctx.emit(\"mouseup\");\n          dragged.value = false;\n        }, 0);\n        window.removeEventListener(\"mousemove\", onDragging);\n        window.removeEventListener(\"touchmove\", onDragging);\n        window.removeEventListener(\"mouseup\", _onDragEnd);\n        window.removeEventListener(\"touchend\", _onDragEnd);\n        window.removeEventListener(\"contextmenu\", _onDragEnd);\n      }\n    };\n    function onButtonDown(event) {\n      if (parentProps.disabled) {\n        return;\n      }\n      event.preventDefault();\n      onDragStart(event);\n      window.addEventListener(\"mousemove\", onDragging);\n      window.addEventListener(\"mouseup\", _onDragEnd);\n      window.addEventListener(\"touchmove\", onDragging);\n      window.addEventListener(\"touchend\", _onDragEnd);\n      window.addEventListener(\"contextmenu\", _onDragEnd);\n    }\n    var onKeyDown = function onKeyDown(state) {\n      if (parentProps.disabled) {\n        return;\n      }\n      var stepLength = step.value / rangeDiff.value * 100;\n      if (state === \"sub\") {\n        stepLength = -stepLength;\n      }\n      slideButtonProps.newPos = parseFloat(currentPos.value) + stepLength;\n      setPosition(slideButtonProps.newPos);\n    };\n    var onNativeKeyDown = function onNativeKeyDown(e) {\n      var code = e.code;\n      e.preventDefault();\n      if (code === \"ArrowDown\" || code === \"ArrowLeft\") {\n        onKeyDown(\"sub\");\n      }\n      if (code === \"ArrowUp\" || code === \"ArrowRight\") {\n        onKeyDown(\"add\");\n      }\n    };\n    ctx.expose({\n      setPosition: setPosition\n    });\n    return function () {\n      return createVNode(\"div\", {\n        \"ref\": buttonRef,\n        \"class\": \"\".concat(COMPONENT_NAME.value, \"-wrapper\"),\n        \"style\": wrapperStyle.value,\n        \"tabindex\": \"0\",\n        \"show-tooltip\": showTooltip.value,\n        \"disabled\": parentProps.disabled,\n        \"onmouseenter\": handleMouseEnter,\n        \"onmouseleave\": handleMouseLeave,\n        \"onmousedown\": onButtonDown,\n        \"onTouchstart\": onButtonDown,\n        \"onfocus\": handleMouseEnter,\n        \"onblur\": handleMouseLeave,\n        \"onKeydown\": onNativeKeyDown\n      }, [createVNode(Tooltip, mergeProps({\n        \"ref\": tooltipRef,\n        \"hideEmptyPopup\": true,\n        \"disabled\": !showTooltip.value\n      }, tooltipProps.value), {\n        \"default\": function _default() {\n          return [createVNode(\"div\", {\n            \"class\": [COMPONENT_NAME.value, _defineProperty({}, \"\".concat(COMPONENT_NAME.value, \"--dragging\"), slideButtonProps.dragging)]\n          }, null)];\n        }\n      })]);\n    };\n  }\n});\nexport { _SliderButton as default };","map":{"version":3,"names":["_SliderButton","defineComponent","name","props","value","type","Number","vertical","Boolean","tooltipProps","Object","label","String","Function","range","position","emits","setup","ctx","COMPONENT_NAME","usePrefixClass","tooltipConfig","computed","_useSliderTooltip","useSliderTooltip","tooltipRef","toggleTooltip","showTooltip","parentProps","inject","sliderPropsInjectKey","buttonRef","ref","dragged","slideButtonProps","reactive","dragging","isClick","startX","startY","startPos","newPos","rangeDiff","max","min","currentPos","concat","step","wrapperStyle","bottom","left","watchEffect","toggleDragging","setPosition","pos","isNaN","perStepLen","steps","Math","round","parseFloat","toFixed","precision","emit","nextTick","_tooltipRef$value$upd","_tooltipRef$value","updatePopper","call","handleMouseEnter","focus","handleMouseLeave","onDragStart","event","clientY","clientX","touch","touches","_ref","onDragging","e","resetSize","isFunction_1","diff","parentSliderSize","sliderSize","_onDragEnd","onDragEnd","setTimeout","window","removeEventListener","onButtonDown","disabled","preventDefault","addEventListener","onKeyDown","state","stepLength","onNativeKeyDown","code","expose","createVNode","Tooltip","mergeProps","_default","_defineProperty"],"sources":["../../src/slider/slider-button.tsx"],"sourcesContent":["import {\n  PropType,\n  defineComponent,\n  ComponentPublicInstance,\n  ref,\n  computed,\n  reactive,\n  nextTick,\n  watchEffect,\n  inject,\n} from 'vue';\nimport TTooltip from '../tooltip/index';\nimport { TdSliderProps } from './type';\n\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useSliderTooltip } from './hooks/useSliderTooltip';\nimport { sliderPropsInjectKey } from './util/constants';\nimport isFunction from 'lodash/isFunction';\n\nexport default defineComponent({\n  name: 'TSliderButton',\n  props: {\n    value: {\n      type: [Number],\n      default: 0,\n    },\n    vertical: {\n      type: Boolean,\n      default: false,\n    },\n    tooltipProps: {\n      type: [Boolean, Object],\n      default: true,\n    },\n    label: {\n      type: [String, Boolean, Function] as PropType<TdSliderProps['label']>,\n    },\n    range: {\n      type: Boolean,\n      default: false,\n    },\n    position: {\n      type: String,\n    },\n  },\n  emits: ['input', 'mouseup'],\n  setup(props, ctx) {\n    const COMPONENT_NAME = usePrefixClass('slider__button');\n    const tooltipConfig = computed(() => props);\n    const { tooltipRef, tooltipProps, toggleTooltip, showTooltip } = useSliderTooltip(tooltipConfig);\n    const parentProps = inject(sliderPropsInjectKey);\n    const buttonRef = ref();\n    const dragged = ref(false);\n\n    /** --------------------- slide button 相关状态start ------------------- */\n    const slideButtonProps = reactive({\n      dragging: false,\n      isClick: false,\n      startX: 0,\n      startY: 0,\n      startPos: 0,\n      newPos: null,\n    });\n\n    const rangeDiff = computed(() => {\n      return Number(parentProps.max) - Number(parentProps.min);\n    });\n\n    const currentPos = computed(() => {\n      return `${((props.value - parentProps.min) / rangeDiff.value) * 100}%`;\n    });\n\n    const step = computed(() => {\n      return parentProps.step;\n    });\n\n    const wrapperStyle = computed(() => {\n      return props.vertical ? { bottom: currentPos.value } : { left: currentPos.value };\n    });\n\n    watchEffect(() => {\n      parentProps.toggleDragging(slideButtonProps.dragging);\n    });\n    /** --------------------- slide button 相关状态end ------------------- */\n\n    /** --------------------- slide button 相关事件start ------------------- */\n    /** 设置当前位置 */\n    const setPosition = (pos: number) => {\n      let newPos = pos;\n      if (newPos === null || Number.isNaN(newPos)) {\n        return;\n      }\n\n      if (newPos > 100) {\n        newPos = 100;\n      } else if (newPos < 0) {\n        newPos = 0;\n      }\n      const perStepLen = (100 * step.value) / rangeDiff.value;\n      const steps = Math.round(newPos / perStepLen);\n      let value = steps * perStepLen * rangeDiff.value * 0.01;\n      value += parentProps.min;\n      value = Number(parseFloat(`${value}`).toFixed(parentProps.precision));\n      ctx.emit('input', value);\n      nextTick(() => {\n        tooltipRef.value && tooltipRef.value.updatePopper?.();\n      });\n    };\n\n    const handleMouseEnter = () => {\n      (buttonRef.value as ComponentPublicInstance).focus();\n      toggleTooltip(true);\n    };\n    const handleMouseLeave = () => {\n      if (!slideButtonProps.dragging) {\n        toggleTooltip(false);\n      }\n    };\n\n    const onDragStart = (event: MouseEvent | TouchEvent) => {\n      slideButtonProps.dragging = true;\n      slideButtonProps.isClick = true;\n      const { type } = event;\n      let { clientY, clientX } = event as MouseEvent;\n      if (type === 'touchstart') {\n        const touch = (event as TouchEvent).touches;\n        [clientY, clientX] = [touch[0].clientY, touch[0].clientX];\n      }\n      if (props.vertical) {\n        slideButtonProps.startY = clientY;\n      } else {\n        slideButtonProps.startX = clientX;\n      }\n      slideButtonProps.startPos = parseFloat(currentPos.value);\n      slideButtonProps.newPos = slideButtonProps.startPos;\n    };\n\n    const onDragging = (e: MouseEvent | TouchEvent) => {\n      const event = e;\n      if (!slideButtonProps.dragging) {\n        return;\n      }\n      dragged.value = true;\n      slideButtonProps.isClick = false;\n      if (parentProps?.resetSize && isFunction(parentProps?.resetSize)) {\n        parentProps.resetSize();\n      }\n      let diff = 0;\n      const parentSliderSize = parentProps.sliderSize;\n      if (props.vertical) {\n        diff = slideButtonProps.startY - (event as MouseEvent).clientY;\n      } else {\n        diff = (event as MouseEvent).clientX - slideButtonProps.startX;\n      }\n      diff = (diff / parentSliderSize) * 100;\n      slideButtonProps.newPos = slideButtonProps.startPos + diff;\n      setPosition(slideButtonProps.newPos);\n    };\n\n    const onDragEnd = () => {\n      if (slideButtonProps.dragging) {\n        setTimeout(() => {\n          slideButtonProps.dragging = false;\n          toggleTooltip(false);\n          if (!slideButtonProps.isClick) {\n            setPosition(slideButtonProps.newPos);\n          }\n          dragged.value && ctx.emit('mouseup');\n          dragged.value = false;\n        }, 0);\n        window.removeEventListener('mousemove', onDragging);\n        window.removeEventListener('touchmove', onDragging);\n        window.removeEventListener('mouseup', onDragEnd);\n        window.removeEventListener('touchend', onDragEnd);\n        window.removeEventListener('contextmenu', onDragEnd);\n      }\n    };\n\n    function onButtonDown(event: MouseEvent | TouchEvent) {\n      if (parentProps.disabled) {\n        return;\n      }\n      event.preventDefault();\n      onDragStart(event);\n      window.addEventListener('mousemove', onDragging);\n      window.addEventListener('mouseup', onDragEnd);\n      window.addEventListener('touchmove', onDragging);\n      window.addEventListener('touchend', onDragEnd);\n      window.addEventListener('contextmenu', onDragEnd);\n    }\n\n    const onKeyDown = (state: 'sub' | 'add') => {\n      if (parentProps.disabled) {\n        return;\n      }\n      let stepLength = (step.value / rangeDiff.value) * 100;\n      if (state === 'sub') {\n        stepLength = -stepLength;\n      }\n      slideButtonProps.newPos = parseFloat(currentPos.value) + stepLength;\n      setPosition(slideButtonProps.newPos);\n    };\n\n    const onNativeKeyDown = (e: KeyboardEvent) => {\n      const { code } = e;\n      e.preventDefault();\n      if (code === 'ArrowDown' || code === 'ArrowLeft') {\n        onKeyDown('sub');\n      }\n      if (code === 'ArrowUp' || code === 'ArrowRight') {\n        onKeyDown('add');\n      }\n    };\n    /** --------------------- slide button 相关事件end ------------------- */\n\n    /** 暴露设置按钮坐标方法供父组件调用 */\n    ctx.expose({\n      setPosition,\n    });\n\n    return () => (\n      <div\n        ref={buttonRef}\n        class={`${COMPONENT_NAME.value}-wrapper`}\n        style={wrapperStyle.value}\n        tabindex=\"0\"\n        show-tooltip={showTooltip.value}\n        disabled={parentProps.disabled}\n        onmouseenter={handleMouseEnter}\n        onmouseleave={handleMouseLeave}\n        onmousedown={onButtonDown}\n        onTouchstart={onButtonDown}\n        onfocus={handleMouseEnter}\n        onblur={handleMouseLeave}\n        onKeydown={onNativeKeyDown}\n      >\n        {/* hide tooltip with `hideEmptyPopup`, empty content won't show */}\n        <TTooltip ref={tooltipRef} hideEmptyPopup disabled={!showTooltip.value} {...tooltipProps.value}>\n          <div class={[COMPONENT_NAME.value, { [`${COMPONENT_NAME.value}--dragging`]: slideButtonProps.dragging }]} />\n        </TTooltip>\n      </div>\n    );\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}