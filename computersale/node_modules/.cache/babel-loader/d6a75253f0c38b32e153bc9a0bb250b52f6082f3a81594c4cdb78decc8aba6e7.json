{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport { i as isString_1 } from '../../_chunks/dep-03a7fb6c.mjs';\nimport '../../_chunks/dep-eca422c3.mjs';\nimport '../../_chunks/dep-bf7257e7.mjs';\nimport '../../_chunks/dep-4659d73b.mjs';\nimport '../../_chunks/dep-eae2a67e.mjs';\nimport '../../_chunks/dep-626c497d.mjs';\nimport '../../_chunks/dep-29ef8419.mjs';\nvar getStopStyle = function getStopStyle(position, isVertical) {\n  return isVertical ? {\n    top: \"calc(\".concat(100 - position, \"% - 1px)\")\n  } : {\n    left: \"\".concat(position, \"%\")\n  };\n};\nvar formatSliderValue = function formatSliderValue(val, type) {\n  if (type === \"first\") {\n    if (val instanceof Array) {\n      return val[0];\n    }\n    return val;\n  }\n  if (val instanceof Array) {\n    return val[1];\n  }\n  return 0;\n};\nvar formatLabel = function formatLabel(label, val) {\n  if (Boolean(label) === false) {\n    return String(val);\n  }\n  if (isString_1(label)) {\n    var text = String(val);\n    try {\n      var rule = /\\${value}%/g;\n      var enableToReplace = rule.test(label);\n      if (enableToReplace) {\n        text = label.replace(rule, String(val));\n      } else {\n        text = label;\n        throw new Error();\n      }\n    } catch (e) {\n      console.warn(\"fail to parse label prop, please pass string such as '${value}%'\");\n    }\n    return text;\n  }\n  return label;\n};\nexport { formatLabel, formatSliderValue, getStopStyle };","map":{"version":3,"names":["getStopStyle","position","isVertical","top","concat","left","formatSliderValue","val","type","Array","formatLabel","label","Boolean","String","isString_1","text","rule","enableToReplace","test","replace","Error","e","console","warn"],"sources":["../../../src/slider/util/common.ts"],"sourcesContent":["import isString from 'lodash/isString';\nimport { TNode } from '../../common';\n/**\n * 计算刻度区间值停止坐标\n * @param position 刻度坐标值 ;\n * @param isVertical 是否垂直方向\n * @returns {string} style内联样式值\n */\nexport const getStopStyle = (position: number, isVertical: boolean) => {\n  return isVertical ? { top: `calc(${100 - position}% - 1px)` } : { left: `${position}%` };\n};\n\n/**\n * 格式化返回slider初始值\n * @param val slider传入的value\n * @param type 第一个滑块or第二个滑块值\n * @returns {number}\n */\nexport const formatSliderValue = (val: number | number[], type: 'first' | 'second') => {\n  if (type === 'first') {\n    if (val instanceof Array) {\n      return val[0];\n    }\n    return val;\n  }\n  if (val instanceof Array) {\n    return val[1];\n  }\n  return 0;\n};\n\n/**\n * 格式化label参数\n * @param label slider传入的label属性\n * @param val slider传入的value\n */\nexport const formatLabel = (label: TNode | string, val: number) => {\n  if (Boolean(label) === false) {\n    return String(val);\n  }\n  if (isString(label)) {\n    let text = String(val);\n    try {\n      const rule = /\\${value}%/g;\n      const enableToReplace = rule.test(label);\n      if (enableToReplace) {\n        text = label.replace(rule, String(val));\n      } else {\n        text = label;\n        throw new Error();\n      }\n    } catch (e) {\n      console.warn(`fail to parse label prop, please pass string such as '\\${value}%'`);\n    }\n    return text;\n  }\n  return label;\n};\n"],"mappings":";;;;;;;;;;;;;AAQa,IAAAA,YAAA,GAAe,SAAfA,aAAgBC,QAAA,EAAkBC,UAAwB;EAC9D,OAAAA,UAAA,GAAa;IAAEC,GAAA,UAAAC,MAAA,CAAa,MAAMH,QAAA;EAAmB,CAAI;IAAEI,IAAM,KAAAD,MAAA,CAAGH,QAAY;GAAA;AACzF;AAQa,IAAAK,iBAAA,GAAoB,SAApBA,kBAAqBC,GAAA,EAAwBC,IAA6B;EACrF,IAAIA,IAAA,KAAS,OAAS;IACpB,IAAID,GAAA,YAAeE,KAAO;MACxB,OAAOF,GAAI;IACb;IACO,OAAAA,GAAA;EACT;EACA,IAAIA,GAAA,YAAeE,KAAO;IACxB,OAAOF,GAAI;EACb;EACO;AACT;AAOa,IAAAG,WAAA,GAAc,SAAdA,YAAeC,KAAA,EAAuBJ,GAAgB;EAC7D,IAAAK,OAAA,CAAQD,KAAK,MAAM,KAAO;IAC5B,OAAOE,MAAA,CAAON,GAAG;EACnB;EACI,IAAAO,UAAA,CAASH,KAAK,CAAG;IACf,IAAAI,IAAA,GAAOF,MAAA,CAAON,GAAG;IACjB;MACF,IAAMS,IAAO;MACP,IAAAC,eAAA,GAAkBD,IAAK,CAAAE,IAAA,CAAKP,KAAK;MACvC,IAAIM,eAAiB;QACnBF,IAAA,GAAOJ,KAAM,CAAAQ,OAAA,CAAQH,IAAM,EAAAH,MAAA,CAAON,GAAG,CAAC;MACxC,CAAO;QACEQ,IAAA,GAAAJ,KAAA;QACP,MAAM,IAAIS,KAAM;MAClB;aACOC,CAAP;MACAC,OAAA,CAAQC,IAAA,mEAAwE;IAClF;IACO,OAAAR,IAAA;EACT;EACO,OAAAJ,KAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}