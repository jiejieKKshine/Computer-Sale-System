{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\n/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport { _ as _defineProperty } from '../../_chunks/dep-fa52aa21.mjs';\nimport { _ as _slicedToArray } from '../../_chunks/dep-5efe53d1.mjs';\nimport { _ as _toConsumableArray } from '../../_chunks/dep-4a990ea3.mjs';\nimport { toRefs, ref, computed, watch, createVNode, h, mergeProps } from 'vue';\nimport { SettingIcon } from 'tdesign-icons-vue-next';\nimport { DialogPlugin } from '../../dialog/plugin.mjs';\nimport { renderTitle } from './useTableHeader.mjs';\nimport '../../hooks/useConfig.mjs';\nimport { useGlobalIcon } from '../../hooks/useGlobalIcon.mjs';\nimport useDefaultValue from '../../hooks/useDefaultValue.mjs';\nimport { getCurrentRowByKey } from '../utils.mjs';\nimport { Button } from '../../button/index.mjs';\nimport ColumnCheckboxGroup from '../column-checkbox-group.mjs';\nimport { i as isFunction_1 } from '../../_chunks/dep-06dcbf4c.mjs';\nimport '../../hooks/index.mjs';\nimport { useConfig } from '../../config-provider/useConfig.mjs';\nimport { useTNodeJSX } from '../../hooks/tnode.mjs';\nimport '../../_chunks/dep-4659d73b.mjs';\nimport '../../_chunks/dep-593f2b67.mjs';\nimport '../../dialog/dialog.mjs';\nimport '../../dialog/props.mjs';\nimport '../../dialog/hooks.mjs';\nimport '../../_chunks/dep-03a7fb6c.mjs';\nimport '../../_chunks/dep-eca422c3.mjs';\nimport '../../_chunks/dep-bf7257e7.mjs';\nimport '../../_chunks/dep-eae2a67e.mjs';\nimport '../../_chunks/dep-626c497d.mjs';\nimport '../../_chunks/dep-29ef8419.mjs';\nimport '../../_chunks/dep-2b09875b.mjs';\nimport '../../_chunks/dep-88ae49da.mjs';\nimport '../../_chunks/dep-7932c2e8.mjs';\nimport '../../_chunks/dep-ab4bb9b8.mjs';\nimport '../../_chunks/dep-5922c8f3.mjs';\nimport '../../_chunks/dep-92f86d1d.mjs';\nimport '../../_chunks/dep-6ab5363f.mjs';\nimport '../../_chunks/dep-6dc3d0e1.mjs';\nimport '../../_chunks/dep-76958824.mjs';\nimport '../../_chunks/dep-cda4f568.mjs';\nimport '../../_chunks/dep-e9841b9e.mjs';\nimport '../../_chunks/dep-1a4bb2f2.mjs';\nimport '../../_chunks/dep-cc8ebcde.mjs';\nimport '../../_chunks/dep-f5579c03.mjs';\nimport '../../_chunks/dep-49aeee3c.mjs';\nimport '../../_chunks/dep-b5bf85f5.mjs';\nimport '../../_chunks/dep-3c65fae8.mjs';\nimport '../../_chunks/dep-ec0bbd9f.mjs';\nimport '../../_chunks/dep-1b78414a.mjs';\nimport '../../_chunks/dep-d84f19b3.mjs';\nimport '../../_chunks/dep-732f0b7d.mjs';\nimport '../../_chunks/dep-aeaef131.mjs';\nimport '../../_chunks/dep-88c8d9ed.mjs';\nimport '../../_chunks/dep-2f6e28a0.mjs';\nimport '../../_chunks/dep-1725b1c7.mjs';\nimport '../../_chunks/dep-4ec29b23.mjs';\nimport '../../_chunks/dep-02f9394e.mjs';\nimport '../../_chunks/dep-400ec705.mjs';\nimport '../../hooks/useDestroyOnClose.mjs';\nimport '../../_common/js/utils/getScrollbarWidth.mjs';\nimport '../../_common/js/utils/helper.mjs';\nimport '../../_chunks/dep-5d3f7c0e.mjs';\nimport '../../_chunks/dep-73384992.mjs';\nimport '../../_chunks/dep-58a62202.mjs';\nimport '../../_chunks/dep-889e457b.mjs';\nimport '../../hooks/useTeleport.mjs';\nimport '../../utils/dom.mjs';\nimport '../../utils/easing.mjs';\nimport '../../hooks/usePopupManager.mjs';\nimport '../../_chunks/dep-f909a041.mjs';\nimport '../../button/button.mjs';\nimport '../../loading/index.mjs';\nimport '../../_chunks/dep-bff7e93a.mjs';\nimport '../../_chunks/dep-1b9718a2.mjs';\nimport '../../_chunks/dep-e065dc25.mjs';\nimport '../../_chunks/dep-532409c5.mjs';\nimport '../../_common/js/global-config/default-config.mjs';\nimport '../../_common/js/global-config/locale/zh_CN.mjs';\nimport '../../_chunks/dep-9ed7da3e.mjs';\nimport '../../_chunks/dep-7f65fc46.mjs';\nimport '../../_chunks/dep-4f2cabb0.mjs';\nimport '../../_chunks/dep-0b414bea.mjs';\nimport '../../_chunks/dep-4d4e2af1.mjs';\nimport '../../_chunks/dep-fbd4eddb.mjs';\nimport '../../_chunks/dep-ae202bc0.mjs';\nimport '../../_chunks/dep-69e0f6fc.mjs';\nimport '../../_chunks/dep-ea20409b.mjs';\nimport '../../loading/plugin.mjs';\nimport '../../loading/loading.mjs';\nimport '../../loading/icon/gradient.mjs';\nimport '../../_common/js/loading/circle-adapter.mjs';\nimport '../../_common/js/utils/set-style.mjs';\nimport '../../utils/render-tnode.mjs';\nimport '../../_chunks/dep-b91a8171.mjs';\nimport '../../_chunks/dep-03ad9cda.mjs';\nimport '../../_chunks/dep-d8a34055.mjs';\nimport '../../_chunks/dep-5a17bf21.mjs';\nimport '../../_chunks/dep-bad871d5.mjs';\nimport '../../loading/props.mjs';\nimport '../../_chunks/dep-bb899bfd.mjs';\nimport '../../config-provider/type.mjs';\nimport '../../utils/withInstall.mjs';\nimport './style/css.mjs';\nimport '../../loading/type.mjs';\nimport '../../button/props.mjs';\nimport '../../hooks/useRipple.mjs';\nimport '../../hooks/useKeepAnimation.mjs';\nimport '../../utils/set-style.mjs';\nimport '../../hooks/useDisabled.mjs';\nimport '../../_chunks/dep-df472119.mjs';\nimport '../../button/type.mjs';\nimport './useMultiHeader.mjs';\nimport './useClassName.mjs';\nimport '../ellipsis.mjs';\nimport '../../_chunks/dep-5993931e.mjs';\nimport '../../_chunks/dep-8dfc9324.mjs';\nimport '../../tooltip/index.mjs';\nimport '../../tooltip/tooltip.mjs';\nimport '../../tooltip/props.mjs';\nimport '../../popup/props.mjs';\nimport '../../popup/index.mjs';\nimport '../../popup/popup.mjs';\nimport '@popperjs/core';\nimport '../../hooks/useVModel.mjs';\nimport '../../popup/container.mjs';\nimport '../../hooks/useResizeObserver.mjs';\nimport '../../hooks/icon.mjs';\nimport '../../hooks/slot.mjs';\nimport '../../hooks/useCommonClassName.mjs';\nimport '../../hooks/useVirtualScroll.mjs';\nimport '../../hooks/useImagePreviewUrl.mjs';\nimport '../../_common/js/upload/utils.mjs';\nimport '../../_common/js/log/log.mjs';\nimport '../../popup/type.mjs';\nimport '../../tooltip/util.mjs';\nimport '../../tooltip/type.mjs';\nimport '../../checkbox/index.mjs';\nimport '../../checkbox/checkbox.mjs';\nimport '../../checkbox/props.mjs';\nimport '../../checkbox/constants.mjs';\nimport '../../checkbox/hooks/useCheckboxLazyLoad.mjs';\nimport '../../_common/js/utils/observe.mjs';\nimport '../../checkbox/hooks/useKeyboardEvent.mjs';\nimport '../../_common/js/common.mjs';\nimport '../../hooks/useReadonly.mjs';\nimport '../../checkbox/group.mjs';\nimport '../../_chunks/dep-64c2053b.mjs';\nimport '../../_chunks/dep-3c4e4325.mjs';\nimport '../../checkbox/checkbox-group-props.mjs';\nimport '../../checkbox/type.mjs';\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction getColumnKeys(columns) {\n  var keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /* @__PURE__ */new Set();\n  for (var i = 0, len = columns.length; i < len; i++) {\n    var _col$children;\n    var col = columns[i];\n    if ((_col$children = col.children) !== null && _col$children !== void 0 && _col$children.length) {\n      getColumnKeys(col.children, keys);\n    } else {\n      col.colKey && keys.add(col.colKey);\n    }\n  }\n  return keys;\n}\nfunction useColumnController(props, context) {\n  var _useConfig = useConfig(\"table\", props.locale),\n    classPrefix = _useConfig.classPrefix,\n    globalConfig = _useConfig.globalConfig;\n  var _useGlobalIcon = useGlobalIcon({\n      SettingIcon: SettingIcon\n    }),\n    SettingIcon$1 = _useGlobalIcon.SettingIcon;\n  var _toRefs = toRefs(props),\n    columns = _toRefs.columns,\n    columnController = _toRefs.columnController,\n    displayColumns = _toRefs.displayColumns,\n    columnControllerVisible = _toRefs.columnControllerVisible;\n  var dialogInstance = ref(null);\n  var renderTNodeJSX = useTNodeJSX();\n  var enabledColKeys = computed(function () {\n    var _columnController$val;\n    var arr = (((_columnController$val = columnController.value) === null || _columnController$val === void 0 ? void 0 : _columnController$val.fields) || _toConsumableArray(getColumnKeys(columns.value))).filter(function (v) {\n      return v;\n    });\n    return new Set(arr);\n  });\n  var keys = _toConsumableArray(getColumnKeys(columns.value));\n  var _useDefaultValue = useDefaultValue(displayColumns, props.defaultDisplayColumns || keys, props.onDisplayColumnsChange, \"displayColumns\"),\n    _useDefaultValue2 = _slicedToArray(_useDefaultValue, 2),\n    tDisplayColumns = _useDefaultValue2[0],\n    setTDisplayColumns = _useDefaultValue2[1];\n  var columnCheckboxKeys = ref(displayColumns.value || props.defaultDisplayColumns || keys);\n  var checkboxGroupList = computed(function () {\n    var _columnController$val2;\n    if ((_columnController$val2 = columnController.value) !== null && _columnController$val2 !== void 0 && (_columnController$val2 = _columnController$val2.groupColumns) !== null && _columnController$val2 !== void 0 && _columnController$val2.length) {\n      return getCheckboxGroupOptions(columns.value);\n    }\n    var oneItem = {\n      label: globalConfig.value.selectAllText,\n      options: getCheckboxOptions(columns.value)\n    };\n    return [oneItem];\n  });\n  watch([displayColumns], function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 1),\n      val = _ref2[0];\n    columnCheckboxKeys.value = val || props.defaultDisplayColumns || keys;\n  });\n  function getOneColumnItem(column, i) {\n    return {\n      label: function label() {\n        return renderTitle(context.slots, column, i);\n      },\n      value: column.colKey,\n      disabled: !enabledColKeys.value.has(column.colKey)\n    };\n  }\n  function getCheckboxGroupOptions(columns2) {\n    var _columnController$val3;\n    var groupColumns = (_columnController$val3 = columnController.value) === null || _columnController$val3 === void 0 ? void 0 : _columnController$val3.groupColumns;\n    if (!(groupColumns !== null && groupColumns !== void 0 && groupColumns.length)) return [];\n    var groupList = [];\n    var _loop = function loop(columns3) {\n      for (var i = 0, len = columns3.length; i < len; i++) {\n        var _column$children;\n        var column = columns3[i];\n        var oneItem = getOneColumnItem(column, i);\n        for (var j = 0, len1 = groupColumns.length; j < len1; j++) {\n          var _groupList$j;\n          var groupInfo = groupColumns[j];\n          if (!groupInfo.columns.includes(column.colKey)) continue;\n          if ((_groupList$j = groupList[j]) !== null && _groupList$j !== void 0 && (_groupList$j = _groupList$j.options) !== null && _groupList$j !== void 0 && _groupList$j.length) {\n            groupList[j].options.push(oneItem);\n          } else {\n            groupList[j] = _objectSpread(_objectSpread({}, groupColumns[j]), {}, {\n              options: [oneItem]\n            });\n          }\n        }\n        if ((_column$children = column.children) !== null && _column$children !== void 0 && _column$children.length) {\n          _loop(column.children);\n        }\n      }\n    };\n    _loop(columns2);\n    return groupList;\n  }\n  function getCheckboxOptions(columns2) {\n    var _columnController$val4;\n    var arr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    if ((_columnController$val4 = columnController.value) !== null && _columnController$val4 !== void 0 && (_columnController$val4 = _columnController$val4.groupColumns) !== null && _columnController$val4 !== void 0 && _columnController$val4.length) return [];\n    for (var i = 0, len = columns2.length; i < len; i++) {\n      var _item$children;\n      var item = columns2[i];\n      if ((_item$children = item.children) !== null && _item$children !== void 0 && _item$children.length) {\n        getCheckboxOptions(item.children, arr);\n      } else {\n        if (item.colKey) {\n          arr.push(getOneColumnItem(item, i));\n        }\n      }\n    }\n    return arr;\n  }\n  var handleCheckChange = function handleCheckChange(val, ctx) {\n    var _props$onColumnChange;\n    columnCheckboxKeys.value = val;\n    var params = {\n      columns: val,\n      type: ctx.type,\n      currentColumn: getCurrentRowByKey(columns.value, String(ctx.current)),\n      e: ctx.e\n    };\n    (_props$onColumnChange = props.onColumnChange) === null || _props$onColumnChange === void 0 || _props$onColumnChange.call(props, params);\n  };\n  var handleToggleColumnController = function handleToggleColumnController() {\n    var _columnController$val8;\n    if (dialogInstance.value) {\n      dialogInstance.value.show();\n      return;\n    }\n    dialogInstance.value = DialogPlugin.confirm(_objectSpread({\n      header: globalConfig.value.columnConfigTitleText,\n      body: function body() {\n        var _columnController$val5;\n        var widthMode = ((_columnController$val5 = columnController.value) === null || _columnController$val5 === void 0 ? void 0 : _columnController$val5.displayType) === \"fixed-width\" ? \"fixed\" : \"auto\";\n        var _ref3 = columnController.value || {},\n          columnControllerTopContent = _ref3.columnControllerTopContent,\n          columnControllerBottomContent = _ref3.columnControllerBottomContent;\n        var defaultNode = createVNode(\"div\", {\n          \"class\": [\"\".concat(classPrefix.value, \"-table__column-controller\"), \"\".concat(classPrefix.value, \"-table__column-controller--\").concat(widthMode)]\n        }, [createVNode(\"div\", {\n          \"class\": \"\".concat(classPrefix.value, \"-table__column-controller-body\")\n        }, [isFunction_1(columnControllerTopContent) ? columnControllerTopContent(h) : renderTNodeJSX(\"columnControllerTopContent\"), globalConfig.value.columnConfigDescriptionText && createVNode(\"p\", {\n          \"class\": \"\".concat(classPrefix.value, \"-table__column-controller-desc\")\n        }, [globalConfig.value.columnConfigDescriptionText]), checkboxGroupList.value.map(function (group, index) {\n          var _columnController$val6, _columnController$val7;\n          var uniqueKey = (_columnController$val6 = columnController.value) !== null && _columnController$val6 !== void 0 && (_columnController$val6 = _columnController$val6.groupColumns) !== null && _columnController$val6 !== void 0 && _columnController$val6.length ? String(group.value || index) : void 0;\n          return createVNode(ColumnCheckboxGroup, {\n            \"key\": group.value || index,\n            \"uniqueKey\": uniqueKey,\n            \"value\": columnCheckboxKeys.value,\n            \"label\": group.label,\n            \"options\": group.options,\n            \"onChange\": handleCheckChange,\n            \"checkboxProps\": (_columnController$val7 = columnController.value) === null || _columnController$val7 === void 0 ? void 0 : _columnController$val7.checkboxProps\n          }, null);\n        }), isFunction_1(columnControllerBottomContent) ? columnControllerBottomContent(h) : renderTNodeJSX(\"columnControllerBottomContent\")])]);\n        return defaultNode;\n      },\n      confirmBtn: globalConfig.value.confirmText,\n      cancelBtn: globalConfig.value.cancelText,\n      width: 612,\n      onConfirm: function onConfirm() {\n        setTDisplayColumns(_toConsumableArray(columnCheckboxKeys.value));\n        if (columnControllerVisible.value === void 0) {\n          dialogInstance.value.hide();\n        } else {\n          var _props$onColumnContro;\n          (_props$onColumnContro = props.onColumnControllerVisibleChange) === null || _props$onColumnContro === void 0 || _props$onColumnContro.call(props, false, {\n            trigger: \"confirm\"\n          });\n          context.emit(\"update:columnControllerVisible\", false);\n        }\n      },\n      onClose: function onClose() {\n        if (columnControllerVisible.value === void 0) {\n          dialogInstance.value.hide();\n        } else {\n          var _props$onColumnContro2;\n          (_props$onColumnContro2 = props.onColumnControllerVisibleChange) === null || _props$onColumnContro2 === void 0 || _props$onColumnContro2.call(props, false, {\n            trigger: \"cancel\"\n          });\n          context.emit(\"update:columnControllerVisible\", false);\n        }\n      }\n    }, ((_columnController$val8 = columnController.value) === null || _columnController$val8 === void 0 ? void 0 : _columnController$val8.dialogProps) || {}));\n  };\n  watch([columnControllerVisible], function (_ref4) {\n    var _ref5 = _slicedToArray(_ref4, 1),\n      visible = _ref5[0];\n    if (visible === void 0) return;\n    if (dialogInstance.value) {\n      visible ? dialogInstance.value.show() : dialogInstance.value.hide();\n    } else {\n      visible && handleToggleColumnController();\n    }\n  }, {\n    immediate: true\n  });\n  var renderColumnController = function renderColumnController() {\n    var _props$columnControll;\n    var isColumnController = !!(columnController.value && Object.keys(columnController.value).length);\n    var placement = isColumnController ? columnController.value.placement || \"top-right\" : \"\";\n    if (isColumnController && columnController.value.hideTriggerButton) return null;\n    var classes = [\"\".concat(classPrefix.value, \"-table__column-controller-trigger\"), _defineProperty({}, \"\".concat(classPrefix.value, \"-align-\").concat(placement), !!placement)];\n    return createVNode(\"div\", {\n      \"class\": classes\n    }, [createVNode(Button, mergeProps({\n      \"theme\": \"default\",\n      \"variant\": \"outline\",\n      \"onClick\": handleToggleColumnController,\n      \"content\": globalConfig.value.columnConfigButtonText\n    }, (_props$columnControll = props.columnController) === null || _props$columnControll === void 0 ? void 0 : _props$columnControll.buttonProps), {\n      icon: function icon() {\n        return createVNode(SettingIcon$1, null, null);\n      }\n    })]);\n  };\n  return {\n    tDisplayColumns: tDisplayColumns,\n    columnCheckboxKeys: columnCheckboxKeys,\n    renderColumnController: renderColumnController\n  };\n}\nexport { useColumnController as default, getColumnKeys };","map":{"version":3,"names":["getColumnKeys","columns","keys","arguments","length","undefined","Set","i","len","_col$children","col","children","colKey","add","useColumnController","props","context","_useConfig","useConfig","locale","classPrefix","globalConfig","_useGlobalIcon","useGlobalIcon","SettingIcon","SettingIcon$1","_toRefs","toRefs","columnController","displayColumns","columnControllerVisible","dialogInstance","ref","renderTNodeJSX","useTNodeJSX","enabledColKeys","computed","_columnController$val","arr","value","fields","_toConsumableArray","filter","v","_useDefaultValue","useDefaultValue","defaultDisplayColumns","onDisplayColumnsChange","_useDefaultValue2","_slicedToArray","tDisplayColumns","setTDisplayColumns","columnCheckboxKeys","checkboxGroupList","_columnController$val2","groupColumns","getCheckboxGroupOptions","oneItem","label","selectAllText","options","getCheckboxOptions","watch","_ref","_ref2","val","getOneColumnItem","column","renderTitle","slots","disabled","has","columns2","_columnController$val3","groupList","_loop","loop","columns3","_column$children","j","len1","_groupList$j","groupInfo","includes","push","_objectSpread","_columnController$val4","_item$children","item","handleCheckChange","ctx","_props$onColumnChange","params","type","currentColumn","getCurrentRowByKey","String","current","e","onColumnChange","call","handleToggleColumnController","_columnController$val8","show","DialogPlugin","confirm","header","columnConfigTitleText","body","_columnController$val5","widthMode","displayType","_ref3","columnControllerTopContent","columnControllerBottomContent","defaultNode","createVNode","concat","isFunction_1","h","columnConfigDescriptionText","map","group","index","_columnController$val6","_columnController$val7","uniqueKey","ColumnCheckboxGroup","checkboxProps","confirmBtn","confirmText","cancelBtn","cancelText","width","onConfirm","hide","_props$onColumnContro","onColumnControllerVisibleChange","trigger","emit","onClose","_props$onColumnContro2","dialogProps","_ref4","_ref5","visible","immediate","renderColumnController","_props$columnControll","isColumnController","Object","placement","hideTriggerButton","classes","_defineProperty","Button","mergeProps","columnConfigButtonText","buttonProps","icon"],"sources":["../../../src/table/hooks/useColumnController.tsx"],"sourcesContent":["/**\n * 自定义显示列控制器，即列配置\n */\nimport { computed, ref, SetupContext, toRefs, watch, h } from 'vue';\nimport { SettingIcon as TdSettingIcon } from 'tdesign-icons-vue-next';\n// import intersection from 'lodash/intersection';\nimport { CheckboxGroupValue, CheckboxOptionObj, CheckboxGroupChangeContext } from '../../checkbox';\nimport { DialogPlugin } from '../../dialog/plugin';\nimport { renderTitle } from './useTableHeader';\nimport { PrimaryTableCol, TdPrimaryTableProps } from '../type';\nimport { useConfig } from '../../hooks/useConfig';\nimport { useGlobalIcon } from '../../hooks/useGlobalIcon';\nimport useDefaultValue from '../../hooks/useDefaultValue';\nimport { getCurrentRowByKey } from '../utils';\nimport { DialogInstance } from '../../dialog';\nimport TButton from '../../button';\nimport ColumnCheckboxGroup from '../column-checkbox-group';\nimport isFunction from 'lodash/isFunction';\nimport { useTNodeJSX } from '../../hooks';\n\nexport function getColumnKeys(columns: PrimaryTableCol[], keys = new Set<string>()) {\n  for (let i = 0, len = columns.length; i < len; i++) {\n    const col = columns[i];\n    if (col.children?.length) {\n      getColumnKeys(col.children, keys);\n    } else {\n      col.colKey && keys.add(col.colKey);\n    }\n  }\n  return keys;\n}\n\ninterface CheckboxGroupOptionsType {\n  options: CheckboxOptionObj[];\n  label: string;\n  value?: string | number;\n}\n\nexport default function useColumnController(props: TdPrimaryTableProps, context: SetupContext) {\n  const { classPrefix, globalConfig } = useConfig('table', props.locale);\n  const { SettingIcon } = useGlobalIcon({ SettingIcon: TdSettingIcon });\n  const { columns, columnController, displayColumns, columnControllerVisible } = toRefs(props);\n  const dialogInstance = ref<DialogInstance>(null);\n  const renderTNodeJSX = useTNodeJSX();\n\n  const enabledColKeys = computed(() => {\n    const arr = (columnController.value?.fields || [...getColumnKeys(columns.value)] || []).filter((v) => v);\n    return new Set(arr);\n  });\n\n  const keys = [...getColumnKeys(columns.value)];\n\n  // 确认后的列配置\n  const [tDisplayColumns, setTDisplayColumns] = useDefaultValue(\n    displayColumns,\n    props.defaultDisplayColumns || keys,\n    props.onDisplayColumnsChange,\n    'displayColumns',\n  );\n  // 弹框内的多选\n  const columnCheckboxKeys = ref<CheckboxGroupValue>(displayColumns.value || props.defaultDisplayColumns || keys);\n\n  const checkboxGroupList = computed<CheckboxGroupOptionsType[]>(() => {\n    if (columnController.value?.groupColumns?.length) {\n      return getCheckboxGroupOptions(columns.value);\n    }\n    const oneItem: CheckboxGroupOptionsType = {\n      label: globalConfig.value.selectAllText,\n      options: getCheckboxOptions(columns.value),\n    };\n    return [oneItem];\n  });\n\n  // const intersectionChecked = computed(() => intersection(columnCheckboxKeys.value, [...enabledColKeys.value]));\n\n  watch([displayColumns], ([val]) => {\n    columnCheckboxKeys.value = val || props.defaultDisplayColumns || keys;\n  });\n\n  function getOneColumnItem(column: PrimaryTableCol, i: number) {\n    return {\n      label: () => renderTitle(context.slots, column, i),\n      value: column.colKey,\n      disabled: !enabledColKeys.value.has(column.colKey),\n    };\n  }\n\n  // 列配置分组\n  function getCheckboxGroupOptions(columns: PrimaryTableCol[]) {\n    const groupColumns = columnController.value?.groupColumns;\n    if (!groupColumns?.length) return [];\n    const groupList: CheckboxGroupOptionsType[] = [];\n    const loop = (columns: PrimaryTableCol[]) => {\n      for (let i = 0, len = columns.length; i < len; i++) {\n        const column = columns[i];\n        const oneItem = getOneColumnItem(column, i);\n        for (let j = 0, len1 = groupColumns.length; j < len1; j++) {\n          const groupInfo = groupColumns[j];\n          if (!groupInfo.columns.includes(column.colKey)) continue;\n          if (groupList[j]?.options?.length) {\n            groupList[j].options.push(oneItem);\n          } else {\n            groupList[j] = { ...groupColumns[j], options: [oneItem] };\n          }\n        }\n        if (column.children?.length) {\n          loop(column.children);\n        }\n      }\n    };\n    loop(columns);\n    return groupList;\n  }\n\n  function getCheckboxOptions(columns: PrimaryTableCol[], arr: CheckboxOptionObj[] = []) {\n    if (columnController.value?.groupColumns?.length) return [];\n    for (let i = 0, len = columns.length; i < len; i++) {\n      const item = columns[i];\n      if (item.children?.length) {\n        getCheckboxOptions(item.children, arr);\n      } else {\n        // 只把叶子列提供出去进行配置\n        if (item.colKey) {\n          arr.push(getOneColumnItem(item, i));\n        }\n      }\n    }\n    return arr;\n  }\n\n  const handleCheckChange = (val: CheckboxGroupValue, ctx: CheckboxGroupChangeContext) => {\n    columnCheckboxKeys.value = val;\n    const params = {\n      columns: val,\n      type: ctx.type,\n      currentColumn: getCurrentRowByKey(columns.value, String(ctx.current)),\n      e: ctx.e,\n    };\n    props.onColumnChange?.(params);\n  };\n\n  // 暂时不删除，万一后面需要整体的全选\n  // const handleClickAllShowColumns = (checked: boolean, ctx: { e: Event }) => {\n  //   if (checked) {\n  //     const newData = checkboxOptions.value?.map((t) => t.value) || [];\n  //     columnCheckboxKeys.value = newData;\n  //     props.onColumnChange?.({ type: 'check', columns: newData, e: ctx.e });\n  //   } else {\n  //     const disabledColKeys = checkboxOptions.value.filter((t) => t.disabled).map((t) => t.value);\n  //     columnCheckboxKeys.value = disabledColKeys;\n  //     props.onColumnChange?.({ type: 'uncheck', columns: disabledColKeys, e: ctx.e });\n  //   }\n  // };\n\n  const handleToggleColumnController = () => {\n    if (dialogInstance.value) {\n      dialogInstance.value.show();\n      return;\n    }\n    dialogInstance.value = DialogPlugin.confirm({\n      header: globalConfig.value.columnConfigTitleText,\n      body: () => {\n        const widthMode = columnController.value?.displayType === 'fixed-width' ? 'fixed' : 'auto';\n        // const checkedLength = intersectionChecked.value.length;\n        // const isCheckedAll = checkedLength === enabledColKeys.value.size;\n        // const isIndeterminate = checkedLength > 0 && checkedLength < enabledColKeys.value.size;\n        const { columnControllerTopContent, columnControllerBottomContent } = columnController.value || {};\n        const defaultNode = (\n          <div\n            class={[\n              `${classPrefix.value}-table__column-controller`,\n              `${classPrefix.value}-table__column-controller--${widthMode}`,\n            ]}\n          >\n            <div class={`${classPrefix.value}-table__column-controller-body`}>\n              {isFunction(columnControllerTopContent)\n                ? columnControllerTopContent(h)\n                : renderTNodeJSX('columnControllerTopContent')}\n              {/* 请选择需要在表格中显示的数据列 */}\n              {globalConfig.value.columnConfigDescriptionText && (\n                <p class={`${classPrefix.value}-table__column-controller-desc`}>\n                  {globalConfig.value.columnConfigDescriptionText}\n                </p>\n              )}\n              {checkboxGroupList.value.map((group, index) => {\n                const uniqueKey = columnController.value?.groupColumns?.length\n                  ? String(group.value || index)\n                  : undefined;\n                return (\n                  <ColumnCheckboxGroup\n                    key={group.value || index}\n                    uniqueKey={uniqueKey}\n                    value={columnCheckboxKeys.value}\n                    label={group.label}\n                    options={group.options}\n                    onChange={handleCheckChange}\n                    checkboxProps={columnController.value?.checkboxProps}\n                  />\n                );\n              })}\n\n              {isFunction(columnControllerBottomContent)\n                ? columnControllerBottomContent(h)\n                : renderTNodeJSX('columnControllerBottomContent')}\n            </div>\n          </div>\n        );\n        return defaultNode;\n      },\n      confirmBtn: globalConfig.value.confirmText,\n      cancelBtn: globalConfig.value.cancelText,\n      width: 612,\n      onConfirm: () => {\n        setTDisplayColumns([...columnCheckboxKeys.value]);\n        // 此处逻辑不要随意改动，涉及到 内置列配置按钮 和 不包含列配置按钮等场景\n        if (columnControllerVisible.value === undefined) {\n          dialogInstance.value.hide();\n        } else {\n          props.onColumnControllerVisibleChange?.(false, { trigger: 'confirm' });\n          context.emit('update:columnControllerVisible', false);\n        }\n      },\n      onClose: () => {\n        // 此处逻辑不要随意改动，涉及到 内置列配置按钮 和 不包含列配置按钮等场景\n        if (columnControllerVisible.value === undefined) {\n          dialogInstance.value.hide();\n        } else {\n          props.onColumnControllerVisibleChange?.(false, { trigger: 'cancel' });\n          context.emit('update:columnControllerVisible', false);\n        }\n      },\n      ...(columnController.value?.dialogProps || {}),\n    });\n  };\n\n  // columnControllerVisible 一般应用于不包含列配置按钮的场景，有外部直接控制弹框的显示或隐藏\n  watch(\n    [columnControllerVisible],\n    ([visible]) => {\n      if (visible === undefined) return;\n      if (dialogInstance.value) {\n        visible ? dialogInstance.value.show() : dialogInstance.value.hide();\n      } else {\n        visible && handleToggleColumnController();\n      }\n    },\n    { immediate: true },\n  );\n\n  const renderColumnController = () => {\n    const isColumnController = !!(columnController.value && Object.keys(columnController.value).length);\n    const placement = isColumnController ? columnController.value.placement || 'top-right' : '';\n    if (isColumnController && columnController.value.hideTriggerButton) return null;\n    const classes = [\n      `${classPrefix.value}-table__column-controller-trigger`,\n      { [`${classPrefix.value}-align-${placement}`]: !!placement },\n    ];\n    return (\n      <div class={classes}>\n        <TButton\n          theme=\"default\"\n          variant=\"outline\"\n          onClick={handleToggleColumnController}\n          content={globalConfig.value.columnConfigButtonText}\n          v-slots={{\n            icon: () => <SettingIcon />,\n          }}\n          {...props.columnController?.buttonProps}\n        ></TButton>\n      </div>\n    );\n  };\n\n  return {\n    tDisplayColumns,\n    columnCheckboxKeys,\n    renderColumnController,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}