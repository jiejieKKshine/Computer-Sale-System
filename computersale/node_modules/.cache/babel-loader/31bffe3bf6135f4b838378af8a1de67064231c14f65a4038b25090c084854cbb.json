{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport { getCurrentInstance, computed, inject } from 'vue';\nimport { i as isBoolean_1 } from '../_chunks/dep-df472119.mjs';\nimport '../_chunks/dep-eca422c3.mjs';\nimport '../_chunks/dep-bf7257e7.mjs';\nimport '../_chunks/dep-4659d73b.mjs';\nimport '../_chunks/dep-29ef8419.mjs';\nfunction useReadonly(context) {\n  var currentInstance = getCurrentInstance();\n  var componentReadonly = computed(function () {\n    return currentInstance.props.readonly;\n  });\n  var formReadonly = inject(\"formReadonly\", /* @__PURE__ */Object.create(null));\n  return computed(function () {\n    var _context$beforeReadon, _context$afterReadonl, _formReadonly$readonl;\n    if (isBoolean_1(context === null || context === void 0 || (_context$beforeReadon = context.beforeReadonly) === null || _context$beforeReadon === void 0 ? void 0 : _context$beforeReadon.value)) return context.beforeReadonly.value;\n    if (isBoolean_1(componentReadonly === null || componentReadonly === void 0 ? void 0 : componentReadonly.value)) return componentReadonly.value;\n    if (isBoolean_1(context === null || context === void 0 || (_context$afterReadonl = context.afterReadonly) === null || _context$afterReadonl === void 0 ? void 0 : _context$afterReadonl.value)) return context.afterReadonly.value;\n    if (isBoolean_1((_formReadonly$readonl = formReadonly.readonly) === null || _formReadonly$readonl === void 0 ? void 0 : _formReadonly$readonl.value)) return formReadonly.readonly.value;\n    return false;\n  });\n}\nexport { useReadonly };","map":{"version":3,"names":["useReadonly","context","currentInstance","getCurrentInstance","componentReadonly","computed","props","readonly","formReadonly","inject","Object","create","_context$beforeReadon","_context$afterReadonl","_formReadonly$readonl","isBoolean_1","beforeReadonly","value","afterReadonly"],"sources":["../../src/hooks/useReadonly.ts"],"sourcesContent":["import { Ref, inject, computed, getCurrentInstance } from 'vue';\nimport isBoolean from 'lodash/isBoolean';\nimport { TdFormProps } from '../form/type';\n\nexport interface FormReadonlyProvider {\n  readonly: Ref<TdFormProps['readonly']>;\n}\n\nexport interface ReadonlyContext {\n  beforeReadonly?: Ref<boolean>;\n  afterReadonly?: Ref<boolean>;\n}\n\n/**\n * 用于实现组件全局只读状态的hook\n * 优先级:(beforeReadonly) > Component.readonly > ComponentGroup.readonly(afterReadonly) > Form.readonly\n * @returns\n */\nexport function useReadonly(context?: ReadonlyContext) {\n  const currentInstance = getCurrentInstance();\n  const componentReadonly = computed(() => currentInstance.props.readonly as boolean);\n\n  const formReadonly = inject<FormReadonlyProvider>('formReadonly', Object.create(null));\n\n  return computed(() => {\n    if (isBoolean(context?.beforeReadonly?.value)) return context.beforeReadonly.value;\n    // Component\n    if (isBoolean(componentReadonly?.value)) return componentReadonly.value;\n    // ComponentGroup\n    if (isBoolean(context?.afterReadonly?.value)) return context.afterReadonly.value;\n    // Form\n    if (isBoolean(formReadonly.readonly?.value)) return formReadonly.readonly.value;\n\n    return false;\n  });\n}\n"],"mappings":";;;;;;;;;;;;AAkBO,SAASA,YAAYC,OAA2B;EACrD,IAAMC,eAAA,GAAkBC,kBAAmB;EAC3C,IAAMC,iBAAoB,GAAAC,QAAA,CAAS;IAAA,OAAMH,eAAA,CAAgBI,KAAA,CAAMC,QAAmB;GAAA;EAElF,IAAMC,YAAA,GAAeC,MAA6B,gCAAuBC,MAAA,CAAAC,MAAA,CAAO,IAAI,CAAC;EAErF,OAAON,QAAA,CAAS,YAAM;IAAA,IAAAO,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA;IAChB,IAAAC,WAAA,CAAUd,OAAS,KAAT,QAAAA,OAAS,gBAAAW,qBAAA,GAATX,OAAS,CAAAe,cAAA,cAAAJ,qBAAA,KAAT,kBAAAA,qBAAA,CAAyBK,KAAK,GAAG,OAAOhB,OAAA,CAAQe,cAAe,CAAAC,KAAA;IAEzE,IAAAF,WAAA,CAAUX,iBAAA,aAAAA,iBAAA,uBAAAA,iBAAA,CAAmBa,KAAK,GAAG,OAAOb,iBAAkB,CAAAa,KAAA;IAE9D,IAAAF,WAAA,CAAUd,OAAS,KAAT,QAAAA,OAAS,gBAAAY,qBAAA,GAATZ,OAAS,CAAAiB,aAAA,cAAAL,qBAAA,KAAT,kBAAAA,qBAAA,CAAwBI,KAAK,GAAG,OAAOhB,OAAA,CAAQiB,aAAc,CAAAD,KAAA;IAEvE,IAAAF,WAAA,EAAAD,qBAAA,GAAUN,YAAa,CAAAD,QAAA,cAAAO,qBAAA,uBAAbA,qBAAA,CAAuBG,KAAK,GAAG,OAAOT,YAAA,CAAaD,QAAS,CAAAU,KAAA;IAEnE;EACT,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}