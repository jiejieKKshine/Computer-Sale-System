{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_t_input = _resolveComponent(\"t-input\");\n  const _component_t_button = _resolveComponent(\"t-button\");\n  const _component_t_form_item = _resolveComponent(\"t-form-item\");\n  const _component_t_form = _resolveComponent(\"t-form\");\n  const _component_t_space = _resolveComponent(\"t-space\");\n  const _component_t_radio_button = _resolveComponent(\"t-radio-button\");\n  const _component_t_radio_group = _resolveComponent(\"t-radio-group\");\n  const _component_t_table = _resolveComponent(\"t-table\");\n  const _component_t_dialog = _resolveComponent(\"t-dialog\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 搜索框代码 \"), _createVNode(_component_t_space, {\n    direction: \"vertical\",\n    size: \"large\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_t_form, {\n      data: _ctx.formData,\n      \"label-align\": _ctx.formData.labelAlign,\n      \"label-width\": 60\n    }, {\n      default: _withCtx(() => [_createVNode(_component_t_form_item, {\n        label: \"订单号\",\n        name: \"oid\",\n        style: {\n          \"display\": \"flex\",\n          \"align-items\": \"center\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_t_input, {\n          modelValue: _ctx.formData.oid,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.formData.oid = $event),\n          style: {\n            \"flex-grow\": \"1\",\n            \"margin-right\": \"20px\"\n          }\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_t_button, {\n          theme: \"primary\",\n          type: \"submit\",\n          onClick: _ctx.handleQuery\n        }, {\n          default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"查询\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\", \"label-align\"])]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 订单列表代码 \"), _createVNode(_component_t_space, {\n    direction: \"vertical\"\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 按钮操作区域 \"), _createVNode(_component_t_radio_group, {\n      modelValue: _ctx.size,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.size = $event),\n      variant: \"default-filled\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_t_radio_button, {\n        value: \"medium\"\n      }, {\n        default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"订单列表\")])),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 当数据为空需要占位时，会显示 cellEmptyContent \"), _createVNode(_component_t_table, {\n      \"row-key\": \"index\",\n      data: _ctx.data,\n      columns: _ctx.columns,\n      stripe: _ctx.stripe,\n      bordered: _ctx.bordered,\n      hover: _ctx.hover,\n      \"table-layout\": _ctx.tableLayout ? 'auto' : 'fixed',\n      size: _ctx.size,\n      pagination: _ctx.pagination,\n      \"show-header\": _ctx.showHeader,\n      \"cell-empty-content\": \"-\",\n      resizable: \"\",\n      \"lazy-load\": \"\",\n      onRowClick: _ctx.handleRowClick\n    }, null, 8 /* PROPS */, [\"data\", \"columns\", \"stripe\", \"bordered\", \"hover\", \"table-layout\", \"size\", \"pagination\", \"show-header\", \"onRowClick\"])]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 订单详细对话框 \"), _createVNode(_component_t_dialog, {\n    visible: _ctx.visible,\n    \"onUpdate:visible\": _cache[2] || (_cache[2] = $event => _ctx.visible = $event),\n    header: \"订单详细\",\n    width: \"40%\",\n    \"confirm-on-enter\": true,\n    \"on-cancel\": _ctx.onCancel,\n    \"on-esc-keydown\": _ctx.onEscKeydown,\n    \"on-close-btn-click\": _ctx.onCloseBtnClick,\n    \"on-overlay-click\": _ctx.onOverlayClick,\n    \"on-close\": _ctx.close,\n    \"on-confirm\": _ctx.onConfirmAnother\n  }, {\n    default: _withCtx(() => [_createVNode(_component_t_space, {\n      direction: \"vertical\",\n      style: {\n        \"width\": \"100%\"\n      }\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", null, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.orderDetail), 1 /* TEXT */)])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\", \"on-cancel\", \"on-esc-keydown\", \"on-close-btn-click\", \"on-overlay-click\", \"on-close\", \"on-confirm\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createCommentVNode","_createVNode","_component_t_space","direction","size","default","_withCtx","_component_t_form","data","_ctx","formData","labelAlign","_component_t_form_item","label","name","style","_component_t_input","modelValue","oid","_cache","$event","_component_t_button","theme","type","onClick","handleQuery","_createTextVNode","_","_component_t_radio_group","variant","_component_t_radio_button","value","_component_t_table","columns","stripe","bordered","hover","tableLayout","pagination","showHeader","resizable","onRowClick","handleRowClick","_component_t_dialog","visible","header","width","onCancel","onEscKeydown","onCloseBtnClick","onOverlayClick","close","onConfirmAnother","_createElementVNode","_toDisplayString","orderDetail"],"sources":["E:\\三年级上册\\ComputerSale\\computersale\\src\\views\\OrderComponent.vue"],"sourcesContent":["<template>\r\n  <!-- 搜索框代码 -->\r\n  <t-space direction=\"vertical\" size=\"large\">\r\n    <t-form :data=\"formData\" :label-align=\"formData.labelAlign\" :label-width=\"60\">\r\n      <t-form-item label=\"订单号\" name=\"oid\" style=\"display: flex; align-items: center;\">\r\n        <t-input v-model=\"formData.oid\" style=\"flex-grow: 1; margin-right: 20px;\"></t-input>\r\n        <t-button theme=\"primary\" type=\"submit\" @click=\"handleQuery\">查询</t-button>\r\n      </t-form-item>\r\n    </t-form>\r\n  </t-space>\r\n\r\n  <!-- 订单列表代码 -->\r\n  <t-space direction=\"vertical\">\r\n    <!-- 按钮操作区域 -->\r\n    <t-radio-group v-model=\"size\" variant=\"default-filled\">\r\n      <t-radio-button value=\"medium\">订单列表</t-radio-button>\r\n    </t-radio-group>\r\n\r\n    <!-- 当数据为空需要占位时，会显示 cellEmptyContent -->\r\n    <t-table\r\n      row-key=\"index\"\r\n      :data=\"data\"\r\n      :columns=\"columns\"\r\n      :stripe=\"stripe\"\r\n      :bordered=\"bordered\"\r\n      :hover=\"hover\"\r\n      :table-layout=\"tableLayout ? 'auto' : 'fixed'\"\r\n      :size=\"size\"\r\n      :pagination=\"pagination\"\r\n      :show-header=\"showHeader\"\r\n      cell-empty-content=\"-\"\r\n      resizable\r\n      lazy-load\r\n      @row-click=\"handleRowClick\"\r\n    >\r\n    </t-table>\r\n  </t-space>\r\n\r\n  <!-- 订单详细对话框 -->\r\n  <t-dialog\r\n    v-model:visible=\"visible\"\r\n    header=\"订单详细\"\r\n    width=\"40%\"\r\n    :confirm-on-enter=\"true\"\r\n    :on-cancel=\"onCancel\"\r\n    :on-esc-keydown=\"onEscKeydown\"\r\n    :on-close-btn-click=\"onCloseBtnClick\"\r\n    :on-overlay-click=\"onOverlayClick\"\r\n    :on-close=\"close\"\r\n    :on-confirm=\"onConfirmAnother\"\r\n  >\r\n    <t-space direction=\"vertical\" style=\"width: 100%\">\r\n      <div>\r\n        <p>{{ orderDetail }}</p>\r\n      </div>\r\n    </t-space>\r\n  </t-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref, onMounted } from 'vue';\r\nimport axios from 'axios';\r\n\r\nconst formData = reactive({\r\n  labelAlign: 'right',\r\n  oid: '',\r\n});\r\n\r\n// 定义响应式数据变量\r\nconst data = ref([]);\r\nconst total = ref(0);\r\nconst orderDetail = ref('');\r\nconst visible = ref(false);\r\n\r\n// 定义表格的样式及状态控制变量\r\nconst stripe = ref(true);\r\nconst bordered = ref(true);\r\nconst hover = ref(false);\r\nconst tableLayout = ref(false);\r\nconst size = ref('medium');\r\nconst showHeader = ref(true);\r\n\r\n// 定义表格列配置\r\nconst columns = ref([\r\n  { colKey: 'oid', title: '订单号', width: '100' },\r\n  { colKey: 'order_time', title: '下单时间', width: '150' },\r\n  { colKey: 'cid', title: '顾客号', width: '100' },\r\n  { colKey: 'status', title: '订单状态', width: '100' },\r\n  { colKey: 'total_price', title: '订单总价', width: '100' },\r\n  { colKey: 'detail', title: '订单详细', width: '100', cell: ({ row }) => {\r\n    return <t-button theme=\"primary\" onClick={() => showOrderDetail(row)}>查看详细</t-button>;\r\n  }},\r\n]);\r\n\r\n// 定义行点击事件处理函数\r\nconst handleRowClick = (e) => {\r\n  console.log(e);\r\n};\r\n\r\n// 定义分页配置\r\nconst pagination = {\r\n  defaultCurrent: 1,\r\n  defaultPageSize: 5,\r\n  total: total.value,\r\n};\r\n\r\n// 请求后端数据并写入表中\r\nconst fetchData = async (oid = '') => {\r\n  try {\r\n    console.log('开始请求数据开始啦...');\r\n    const response = await axios.get(oid ? `/api/orders/search` : `/api/orders`, {\r\n      params: { oid }\r\n    });\r\n    console.log('请求数据成功:', response.data);\r\n    console.log(\"查询id:\", oid);\r\n    data.value = response.data;\r\n    total.value = response.data.length;\r\n    pagination.total = total.value;\r\n  } catch (error) {\r\n    console.error('请求数据失败:', error);\r\n  }\r\n};\r\n\r\n// 定义查询处理函数\r\nconst handleQuery = () => {\r\n  fetchData(formData.oid);\r\n};\r\n\r\n// 定义显示订单详细信息的处理函数\r\nconst showOrderDetail = (row) => {\r\n  console.log('订单详细信息:', row);\r\n  orderDetail.value = `订单号: ${row.oid}, 顾客号: ${row.cid}, 订单状态: ${row.status}, 订单总价: ${row.total_price}`;\r\n  visible.value = true;\r\n};\r\n\r\n// 对话框相关函数\r\nconst onConfirmAnother = (context) => {\r\n  console.log('点击了确认按钮', context);\r\n  visible.value = false;\r\n};\r\nconst close = (context) => {\r\n  console.log('关闭弹窗，点击关闭按钮、按下ESC、点击蒙层等触发', context);\r\n};\r\nconst onCancel = (context) => {\r\n  console.log('点击了取消按钮', context);\r\n};\r\nconst onEscKeydown = (context) => {\r\n  console.log('按下了ESC', context);\r\n};\r\nconst onCloseBtnClick = (context) => {\r\n  console.log('点击了关闭按钮', context);\r\n};\r\nconst onOverlayClick = (context) => {\r\n  console.log('点击了蒙层', context);\r\n};\r\n\r\nonMounted(() => {\r\n  fetchData();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 样式范围限定在当前组件 */\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}