{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport './dep-eca422c3.mjs';\nimport { i as isArrayLike_1 } from './dep-cc8ebcde.mjs';\nimport { i as isObjectLike_1 } from './dep-29ef8419.mjs';\nimport { i as identity_1 } from './dep-400ec705.mjs';\nimport { _ as _overRest, a as _setToString } from './dep-02f9394e.mjs';\nvar isArrayLike = isArrayLike_1,\n  isObjectLike = isObjectLike_1;\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\nvar isArrayLikeObject_1 = isArrayLikeObject;\nvar identity = identity_1,\n  overRest = _overRest,\n  setToString = _setToString;\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\nvar _baseRest = baseRest;\nexport { _baseRest as _, isArrayLikeObject_1 as i };","map":{"version":3,"names":["isArrayLike","isArrayLike_1","isObjectLike","isObjectLike_1","isArrayLikeObject","value","isArrayLikeObject_1","identity","identity_1","overRest","_overRest","setToString","_setToString","baseRest","func","start","_baseRest"],"sources":["../../node_modules/lodash/isArrayLikeObject.js","../../node_modules/lodash/_baseRest.js"],"sourcesContent":["var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n"],"mappings":";;;;;;;;;;;AAAA,IAAIA,WAAW,GAAGC,aAAwB;EACtCC,YAAY,GAAGC,cAAyB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,iBAAiBA,CAACC,KAAK,EAAE;EAChC,OAAOH,YAAY,CAACG,KAAK,CAAC,IAAIL,WAAW,CAACK,KAAK,CAAC;AAClD;AAEA,IAAAC,mBAAc,GAAGF,iBAAA;AChCjB,IAAIG,QAAQ,GAAGC,UAAqB;EAChCC,QAAQ,GAAGC,SAAsB;EACjCC,WAAW,GAAGC,YAAyB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,QAAQA,CAACC,IAAI,EAAEC,KAAK,EAAE;EAC7B,OAAOJ,WAAW,CAACF,QAAQ,CAACK,IAAI,EAAEC,KAAK,EAAER,QAAQ,CAAC,EAAEO,IAAI,GAAG,EAAE,CAAC;AAChE;AAEA,IAAAE,SAAc,GAAGH,QAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}