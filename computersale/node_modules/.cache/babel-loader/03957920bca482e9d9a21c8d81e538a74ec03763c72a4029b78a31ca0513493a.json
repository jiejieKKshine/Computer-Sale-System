{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nvar getDomWidth = function getDomWidth(dom) {\n  return (dom === null || dom === void 0 ? void 0 : dom.offsetWidth) || 0;\n};\nvar getDomOffsetLeft = function getDomOffsetLeft(dom) {\n  return (dom === null || dom === void 0 ? void 0 : dom.offsetLeft) || 0;\n};\nfunction calculateOffset(depElement, offset, scrollPosition) {\n  var navsContainer = depElement.navsContainer,\n    activeTab = depElement.activeTab,\n    rightOperations = depElement.rightOperations,\n    leftOperations = depElement.leftOperations;\n  var tabWidth = getDomWidth(activeTab);\n  var wrapWidth = getDomWidth(navsContainer);\n  var tabOffset = getDomOffsetLeft(activeTab);\n  var rightOperationsWidth = getDomWidth(rightOperations);\n  var leftOperationsWidth = getDomWidth(leftOperations);\n  if (scrollPosition === \"auto\") {\n    if (tabOffset - leftOperationsWidth < offset) {\n      return tabOffset - leftOperationsWidth;\n    }\n    if (tabOffset + tabWidth > offset + wrapWidth - rightOperationsWidth) {\n      return tabOffset + tabWidth - wrapWidth + rightOperationsWidth;\n    }\n  } else if (scrollPosition === \"start\") {\n    return tabOffset - leftOperationsWidth;\n  } else if (scrollPosition === \"center\") {\n    return tabOffset + (tabWidth - wrapWidth) / 2;\n  } else if (scrollPosition === \"end\") {\n    return tabOffset + tabWidth - wrapWidth + rightOperationsWidth;\n  }\n  return offset;\n}\nfunction calcPrevOrNextOffset(elements, offset, action) {\n  var navsContainer = elements.navsContainer,\n    activeTab = elements.activeTab;\n  var navsContainerWidth = getDomWidth(navsContainer);\n  var activeTabWidth = getDomWidth(activeTab);\n  if (action === \"next\") {\n    return offset + navsContainerWidth - activeTabWidth;\n  }\n  return offset - navsContainerWidth + activeTabWidth;\n}\nfunction calcMaxOffset(elements) {\n  var navsWrap = elements.navsWrap,\n    navsContainer = elements.navsContainer,\n    rightOperations = elements.rightOperations,\n    toRightBtn = elements.toRightBtn;\n  var wrapWidth = getDomWidth(navsWrap);\n  var containerWidth = getDomWidth(navsContainer);\n  var rightOperationsWidth = getDomWidth(rightOperations);\n  var toRightBtnWidth = getDomWidth(toRightBtn);\n  return wrapWidth - containerWidth + rightOperationsWidth - toRightBtnWidth;\n}\nfunction calcValidOffset(offset, maxOffset) {\n  return Math.max(0, Math.min(offset, maxOffset));\n}\nexport { calcMaxOffset, calcPrevOrNextOffset, calcValidOffset, calculateOffset };","map":{"version":3,"names":["getDomWidth","dom","offsetWidth","getDomOffsetLeft","offsetLeft","calculateOffset","depElement","offset","scrollPosition","navsContainer","activeTab","rightOperations","leftOperations","tabWidth","wrapWidth","tabOffset","rightOperationsWidth","leftOperationsWidth","calcPrevOrNextOffset","elements","action","navsContainerWidth","activeTabWidth","calcMaxOffset","navsWrap","toRightBtn","containerWidth","toRightBtnWidth","calcValidOffset","maxOffset","Math","max","min"],"sources":["../../../../src/_common/js/tabs/base.ts"],"sourcesContent":["const getDomWidth = (dom: HTMLElement): number => dom?.offsetWidth || 0;\nconst getDomOffsetLeft = (dom: HTMLElement): number => dom?.offsetLeft || 0;\n\ntype scrollPosition = 'auto' | 'start' | 'center' | 'end';\n\nexport interface allElementDeps {\n  activeTab?: HTMLElement;\n  navsContainer?: HTMLElement;\n  navsWrap?: HTMLElement;\n  leftOperations?: HTMLElement;\n  toLeftBtn?: HTMLElement;\n  rightOperations?: HTMLElement;\n  toRightBtn?: HTMLElement;\n}\n\nexport function calculateOffset(depElement: allElementDeps, offset: number, scrollPosition: scrollPosition): number {\n  // 计算当前 activeTab 应该滚动到的位置\n  const { navsContainer, activeTab, rightOperations, leftOperations } = depElement;\n  const tabWidth = getDomWidth(activeTab);\n  const wrapWidth = getDomWidth(navsContainer);\n  const tabOffset = getDomOffsetLeft(activeTab);\n  const rightOperationsWidth = getDomWidth(rightOperations);\n  const leftOperationsWidth = getDomWidth(leftOperations);\n\n  if (scrollPosition === 'auto') {\n    if (tabOffset - leftOperationsWidth < offset) {\n      return tabOffset - leftOperationsWidth;\n    } if (tabOffset + tabWidth > offset + wrapWidth - rightOperationsWidth) {\n      return tabOffset + tabWidth - wrapWidth + rightOperationsWidth;\n    }\n  } else if (scrollPosition === 'start') {\n    return tabOffset - leftOperationsWidth;\n  } else if (scrollPosition === 'center') {\n    return tabOffset + (tabWidth - wrapWidth) / 2;\n  } else if (scrollPosition === 'end') {\n    return tabOffset + tabWidth - wrapWidth + rightOperationsWidth;\n  }\n  return offset;\n}\n\n/**\n * 计算上一页或下一页偏移量\n * @param elements 计算时依赖的元素\n * @returns number\n */\nexport function calcPrevOrNextOffset(elements: allElementDeps, offset: number, action: 'next' | 'prev'): number {\n  const { navsContainer, activeTab } = elements;\n  const navsContainerWidth = getDomWidth(navsContainer);\n  const activeTabWidth = getDomWidth(activeTab);\n  if (action === 'next') {\n    return offset + navsContainerWidth - activeTabWidth;\n  }\n  return offset - navsContainerWidth + activeTabWidth;\n}\n\n/**\n * 计算最大偏移量\n * @param elements 计算时依赖的元素\n * @returns number\n */\nexport function calcMaxOffset(elements: allElementDeps): number {\n  const { navsWrap, navsContainer, rightOperations, toRightBtn } = elements;\n  const wrapWidth = getDomWidth(navsWrap);\n  const containerWidth = getDomWidth(navsContainer);\n  const rightOperationsWidth = getDomWidth(rightOperations);\n  const toRightBtnWidth = getDomWidth(toRightBtn);\n  return wrapWidth - containerWidth + rightOperationsWidth - toRightBtnWidth;\n}\n\n/**\n * 计算合法偏移量\n * @param offset 偏移值\n * @param maxOffset 最大偏移值\n * @returns number\n */\nexport function calcValidOffset(offset: number, maxOffset: number): number {\n  return Math.max(0, Math.min(offset, maxOffset));\n}\n"],"mappings":";;;;;;AAAA,IAAMA,WAAc,YAAdA,WAAcA,CAACC,GAA6B;EAAA,QAAAA,GAAA,aAAAA,GAAA,uBAAAA,GAAA,CAAKC,WAAe;AAAA;AACtE,IAAMC,gBAAmB,YAAnBA,gBAAmBA,CAACF,GAA6B;EAAA,QAAAA,GAAA,aAAAA,GAAA,uBAAAA,GAAA,CAAKG,UAAc;AAAA;AAc1D,SAAAC,gBAAgBC,UAA4B,EAAAC,MAAA,EAAgBC,cAAwC;EAElH,IAAQC,aAAA,GAA8DH,UAAA,CAA9DG,aAAA;IAAeC,SAAW,GAAoCJ,UAAA,CAA/CI,SAAW;IAAAC,eAAA,GAAoCL,UAAA,CAApCK,eAAA;IAAiBC,cAAA,GAAmBN,UAAA,CAAnBM,cAAA;EAC7C,IAAAC,QAAA,GAAWb,WAAA,CAAYU,SAAS;EAChC,IAAAI,SAAA,GAAYd,WAAA,CAAYS,aAAa;EACrC,IAAAM,SAAA,GAAYZ,gBAAA,CAAiBO,SAAS;EACtC,IAAAM,oBAAA,GAAuBhB,WAAA,CAAYW,eAAe;EAClD,IAAAM,mBAAA,GAAsBjB,WAAA,CAAYY,cAAc;EAEtD,IAAIJ,cAAA,KAAmB,MAAQ;IACzB,IAAAO,SAAA,GAAYE,mBAAA,GAAsBV,MAAQ;MAC5C,OAAOQ,SAAY,GAAAE,mBAAA;IACrB;IAAE,IAAIF,SAAY,GAAAF,QAAA,GAAWN,MAAS,GAAAO,SAAA,GAAYE,oBAAsB;MAC/D,OAAAD,SAAA,GAAYF,QAAA,GAAWC,SAAY,GAAAE,oBAAA;IAC5C;EACF,WAAWR,cAAA,KAAmB,OAAS;IACrC,OAAOO,SAAY,GAAAE,mBAAA;EACrB,WAAWT,cAAA,KAAmB,QAAU;IAC/B,OAAAO,SAAA,IAAaF,QAAA,GAAWC,SAAa;EAC9C,WAAWN,cAAA,KAAmB,KAAO;IAC5B,OAAAO,SAAA,GAAYF,QAAA,GAAWC,SAAY,GAAAE,oBAAA;EAC5C;EACO,OAAAT,MAAA;AACT;AAOgB,SAAAW,qBAAqBC,QAA0B,EAAAZ,MAAA,EAAgBa,MAAiC;EACxG,IAAEX,aAAe,GAAcU,QAAA,CAA7BV,aAAe;IAAAC,SAAA,GAAcS,QAAA,CAAdT,SAAA;EACjB,IAAAW,kBAAA,GAAqBrB,WAAA,CAAYS,aAAa;EAC9C,IAAAa,cAAA,GAAiBtB,WAAA,CAAYU,SAAS;EAC5C,IAAIU,MAAA,KAAW,MAAQ;IACrB,OAAOb,MAAA,GAASc,kBAAqB,GAAAC,cAAA;EACvC;EACA,OAAOf,MAAA,GAASc,kBAAqB,GAAAC,cAAA;AACvC;AAOO,SAASC,cAAcJ,QAAkC;EAC9D,IAAQK,QAAA,GAAyDL,QAAA,CAAzDK,QAAA;IAAUf,aAAe,GAAgCU,QAAA,CAA/CV,aAAe;IAAAE,eAAA,GAAgCQ,QAAA,CAAhCR,eAAA;IAAiBc,UAAA,GAAeN,QAAA,CAAfM,UAAA;EAC5C,IAAAX,SAAA,GAAYd,WAAA,CAAYwB,QAAQ;EAChC,IAAAE,cAAA,GAAiB1B,WAAA,CAAYS,aAAa;EAC1C,IAAAO,oBAAA,GAAuBhB,WAAA,CAAYW,eAAe;EAClD,IAAAgB,eAAA,GAAkB3B,WAAA,CAAYyB,UAAU;EACvC,OAAAX,SAAA,GAAYY,cAAA,GAAiBV,oBAAuB,GAAAW,eAAA;AAC7D;AAQgB,SAAAC,gBAAgBrB,MAAA,EAAgBsB,SAA2B;EACzE,OAAOC,IAAA,CAAKC,GAAI,IAAGD,IAAA,CAAKE,GAAI,CAAAzB,MAAA,EAAQsB,SAAS,CAAC;AAChD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}