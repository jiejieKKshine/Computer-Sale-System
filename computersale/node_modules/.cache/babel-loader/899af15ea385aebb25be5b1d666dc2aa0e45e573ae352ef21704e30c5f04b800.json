{"ast":null,"code":"/**\n * tdesign v1.10.5\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport { ref, onMounted, watch, onBeforeUnmount } from 'vue';\nimport observe from '../_common/js/utils/observe.mjs';\nfunction useElementLazyRender(labelRef, lazyLoad) {\n  var ioObserver = ref();\n  var showElement = ref(true);\n  var handleLazyLoad = function handleLazyLoad() {\n    if (!lazyLoad.value || !labelRef.value || ioObserver.value) return;\n    showElement.value = false;\n    var io = observe(labelRef.value, null, function () {\n      showElement.value = true;\n    }, 10);\n    ioObserver.value = io;\n  };\n  onMounted(handleLazyLoad);\n  lazyLoad.value && watch([lazyLoad, labelRef], handleLazyLoad);\n  onBeforeUnmount(function () {\n    var _ioObserver$value, _ioObserver$value$uno;\n    if (!lazyLoad.value) return;\n    (_ioObserver$value = ioObserver.value) === null || _ioObserver$value === void 0 || (_ioObserver$value$uno = _ioObserver$value.unobserve) === null || _ioObserver$value$uno === void 0 || _ioObserver$value$uno.call(_ioObserver$value, labelRef.value);\n  });\n  return {\n    showElement: showElement\n  };\n}\nexport { useElementLazyRender as default, useElementLazyRender };","map":{"version":3,"names":["useElementLazyRender","labelRef","lazyLoad","ioObserver","ref","showElement","handleLazyLoad","value","io","observe","onMounted","watch","onBeforeUnmount","_ioObserver$value","_ioObserver$value$uno","unobserve","call"],"sources":["../../src/hooks/useElementLazyRender.ts"],"sourcesContent":["import { onBeforeUnmount, onMounted, Ref, ref, watch } from 'vue';\nimport observe from '../_common/js/utils/observe';\n\nexport function useElementLazyRender(labelRef: Ref<HTMLElement>, lazyLoad: Ref<boolean>) {\n  const ioObserver = ref<IntersectionObserver>();\n  const showElement = ref(true);\n\n  const handleLazyLoad = () => {\n    if (!lazyLoad.value || !labelRef.value || ioObserver.value) return;\n    showElement.value = false;\n    const io = observe(\n      labelRef.value,\n      null,\n      () => {\n        showElement.value = true;\n      },\n      10,\n    );\n    ioObserver.value = io;\n  };\n\n  onMounted(handleLazyLoad);\n\n  lazyLoad.value && watch([lazyLoad, labelRef], handleLazyLoad);\n\n  onBeforeUnmount(() => {\n    if (!lazyLoad.value) return;\n    ioObserver.value?.unobserve?.(labelRef.value);\n  });\n\n  return {\n    showElement,\n  };\n}\n\nexport default useElementLazyRender;\n"],"mappings":";;;;;;;;AAGgB,SAAAA,qBAAqBC,QAAA,EAA4BC,QAAwB;EACvF,IAAMC,UAAA,GAAaC,GAA0B;EACvC,IAAAC,WAAA,GAAcD,GAAA,CAAI,IAAI;EAE5B,IAAME,cAAA,GAAiB,SAAjBA,eAAA,EAAuB;IAC3B,IAAI,CAACJ,QAAS,CAAAK,KAAA,IAAS,CAACN,QAAA,CAASM,KAAA,IAASJ,UAAW,CAAAI,KAAA,EAAO;IAC5DF,WAAA,CAAYE,KAAQ;IACpB,IAAMC,EAAK,GAAAC,OAAA,CACTR,QAAS,CAAAM,KAAA,EACT,MACA,YAAM;MACJF,WAAA,CAAYE,KAAQ;KACtB,EACA,EACF;IACAJ,UAAA,CAAWI,KAAQ,GAAAC,EAAA;GACrB;EAEAE,SAAA,CAAUJ,cAAc;EAExBJ,QAAA,CAASK,KAAA,IAASI,KAAM,EAACT,QAAU,EAAAD,QAAQ,GAAGK,cAAc;EAE5DM,eAAA,CAAgB,YAAM;IAAA,IAAAC,iBAAA,EAAAC,qBAAA;IACpB,IAAI,CAACZ,QAAS,CAAAK,KAAA,EAAO;IACV,CAAAM,iBAAA,GAAAV,UAAA,CAAAI,KAAA,cAAAM,iBAAA,gBAAAC,qBAAA,GAAAD,iBAAA,CAAOE,SAAY,cAAAD,qBAAA,KAAnB,UAAAA,qBAAA,CAAAE,IAAA,CAAAH,iBAAA,EAAmBZ,QAAA,CAASM,KAAK;EAC9C,CAAC;EAEM;IACLF,WAAA,EAAAA;GACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}