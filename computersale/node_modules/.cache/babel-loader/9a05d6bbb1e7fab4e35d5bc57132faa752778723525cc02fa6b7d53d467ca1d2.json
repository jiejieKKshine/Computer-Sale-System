{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_t_radio_button = _resolveComponent(\"t-radio-button\");\n  const _component_t_radio_group = _resolveComponent(\"t-radio-group\");\n  const _component_t_table = _resolveComponent(\"t-table\");\n  const _component_t_space = _resolveComponent(\"t-space\");\n  return _openBlock(), _createBlock(_component_t_space, {\n    direction: \"vertical\"\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 按钮操作区域 \"), _createVNode(_component_t_radio_group, {\n      modelValue: $setup.size,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.size = $event),\n      variant: \"default-filled\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" <t-radio-button value=\\\"small\\\">小尺寸</t-radio-button> \"), _createVNode(_component_t_radio_button, {\n        value: \"medium\"\n      }, {\n        default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"订单列表\")])),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" <t-radio-button value=\\\"large\\\">大尺寸</t-radio-button> \")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 当数据为空需要占位时，会显示 cellEmptyContent \"), _createVNode(_component_t_table, {\n      \"row-key\": \"index\",\n      data: $setup.data,\n      columns: $setup.columns,\n      stripe: $setup.stripe,\n      bordered: $setup.bordered,\n      hover: $setup.hover,\n      \"table-layout\": $setup.tableLayout ? 'auto' : 'fixed',\n      size: $setup.size,\n      pagination: $setup.pagination,\n      \"show-header\": $setup.showHeader,\n      \"cell-empty-content\": \"-\",\n      resizable: \"\",\n      \"lazy-load\": \"\",\n      onRowClick: $setup.handleRowClick\n    }, null, 8 /* PROPS */, [\"data\", \"columns\", \"stripe\", \"bordered\", \"hover\", \"table-layout\", \"size\", \"show-header\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_t_space","direction","default","_withCtx","_createCommentVNode","_createVNode","_component_t_radio_group","modelValue","$setup","size","_cache","$event","variant","_component_t_radio_button","value","_createTextVNode","_","_component_t_table","data","columns","stripe","bordered","hover","tableLayout","pagination","showHeader","resizable","onRowClick","handleRowClick"],"sources":["E:\\三年级上册\\ComputerSale\\computersale\\src\\views\\OrderComponent.vue"],"sourcesContent":["<template>\r\n  <t-space direction=\"vertical\">\r\n    <!-- 按钮操作区域 -->\r\n    <t-radio-group v-model=\"size\" variant=\"default-filled\">\r\n      <!-- <t-radio-button value=\"small\">小尺寸</t-radio-button> -->\r\n      <t-radio-button value=\"medium\">订单列表</t-radio-button>\r\n      <!-- <t-radio-button value=\"large\">大尺寸</t-radio-button> -->\r\n    </t-radio-group>\r\n\r\n    <!-- 当数据为空需要占位时，会显示 cellEmptyContent -->\r\n    <t-table\r\n      row-key=\"index\"\r\n      :data=\"data\"\r\n      :columns=\"columns\"\r\n      :stripe=\"stripe\"\r\n      :bordered=\"bordered\"\r\n      :hover=\"hover\"\r\n      :table-layout=\"tableLayout ? 'auto' : 'fixed'\"\r\n      :size=\"size\"\r\n      :pagination=\"pagination\"\r\n      :show-header=\"showHeader\"\r\n      cell-empty-content=\"-\"\r\n      resizable\r\n      lazy-load\r\n      @row-click=\"handleRowClick\"\r\n    >\r\n    </t-table>\r\n  </t-space>\r\n</template>\r\n\r\n<script setup lang=\"jsx\">\r\nimport { ref, onMounted } from 'vue';\r\nimport axios from 'axios';\r\n\r\n// 定义响应式数据变量\r\nconst data = ref([]);\r\nconst total = ref(10);\r\n\r\n// 定义表格的样式及状态控制变量\r\nconst stripe = ref(true);\r\nconst bordered = ref(true);\r\nconst hover = ref(false);\r\nconst tableLayout = ref(false);\r\nconst size = ref('medium');\r\nconst showHeader = ref(true);\r\n\r\n// 定义表格列配置\r\nconst columns = ref([\r\n  { colKey: 'oid', title: '订单号', width: '100' },\r\n  { colKey: 'order_time', title: '下单时间', width: '150' },\r\n  { colKey: 'cid', title: '顾客号', width: '100' },\r\n  { colKey:'status', title: '订单状态', width: '100' },\r\n  // { colKey:'detail', title: '订单详细', width: '100' },\r\n  { colKey:'total_price', title: '订单总价', width: '100' },\r\n  // { colKey:'confirm', title: '确认订单', width: '100' },\r\n]);\r\n\r\n// 定义行点击事件处理函数\r\nconst handleRowClick = (e) => {\r\n  console.log(e);\r\n};\r\n\r\n// 定义分页配置\r\nconst pagination = {\r\n  defaultCurrent: 1,\r\n  defaultPageSize: 5,\r\n  total,\r\n};\r\n\r\n// 请求后端数据并写入表中\r\nconst fetchData = async () => {\r\n  try {\r\n    console.log('开始请求数据...');\r\n    const response = await axios.get('/api/orders'); // 根据实际API端点替换\r\n    // const response = await axios.get('http://localhost:8080/orders');\r\n    console.log('请求数据成功:', response.data.orders);\r\n    // console.log('请求数据总数:', response.data.length);\r\n    data.value = response.data.orders;\r\n    total.value = response.data.length;\r\n  } catch (error) {\r\n    console.error('请求数据失败:', error);\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  fetchData();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 样式范围限定在当前组件 */\r\n</style>"],"mappings":";;;;;;uBACEA,YAAA,CA0BUC,kBAAA;IA1BDC,SAAS,EAAC;EAAU;IAD/BC,OAAA,EAAAC,QAAA,CAEI,MAAe,CAAfC,mBAAA,YAAe,EACfC,YAAA,CAIgBC,wBAAA;MAPpBC,UAAA,EAG4BC,MAAA,CAAAC,IAAI;MAHhC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAG4BH,MAAA,CAAAC,IAAI,GAAAE,MAAA;MAAEC,OAAO,EAAC;;MAH1CV,OAAA,EAAAC,QAAA,CAIM,MAA2D,CAA3DC,mBAAA,0DAA2D,EAC3DC,YAAA,CAAoDQ,yBAAA;QAApCC,KAAK,EAAC;MAAQ;QALpCZ,OAAA,EAAAC,QAAA,CAKqC,MAAIO,MAAA,QAAAA,MAAA,OALzCK,gBAAA,CAKqC,MAAI,E;QALzCC,CAAA;UAMMZ,mBAAA,0DAA2D,C;MANjEY,CAAA;uCASIZ,mBAAA,qCAAwC,EACxCC,YAAA,CAgBUY,kBAAA;MAfR,SAAO,EAAC,OAAO;MACdC,IAAI,EAAEV,MAAA,CAAAU,IAAI;MACVC,OAAO,EAAEX,MAAA,CAAAW,OAAO;MAChBC,MAAM,EAAEZ,MAAA,CAAAY,MAAM;MACdC,QAAQ,EAAEb,MAAA,CAAAa,QAAQ;MAClBC,KAAK,EAAEd,MAAA,CAAAc,KAAK;MACZ,cAAY,EAAEd,MAAA,CAAAe,WAAW;MACzBd,IAAI,EAAED,MAAA,CAAAC,IAAI;MACVe,UAAU,EAAEhB,MAAA,CAAAgB,UAAU;MACtB,aAAW,EAAEhB,MAAA,CAAAiB,UAAU;MACxB,oBAAkB,EAAC,GAAG;MACtBC,SAAS,EAAT,EAAS;MACT,WAAS,EAAT,EAAS;MACRC,UAAS,EAAEnB,MAAA,CAAAoB;;IAxBlBZ,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}