{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_t_radio_group = _resolveComponent(\"t-radio-group\");\n  const _component_t_input = _resolveComponent(\"t-input\");\n  const _component_t_form_item = _resolveComponent(\"t-form-item\");\n  const _component_t_button = _resolveComponent(\"t-button\");\n  const _component_t_form = _resolveComponent(\"t-form\");\n  const _component_t_space = _resolveComponent(\"t-space\");\n  const _component_t_radio_button = _resolveComponent(\"t-radio-button\");\n  const _component_t_table = _resolveComponent(\"t-table\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" ///////// \"), _createVNode(_component_t_space, {\n    direction: \"vertical\",\n    size: \"large\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_t_radio_group, {\n      modelValue: $setup.formData.labelAlign,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.formData.labelAlign = $event),\n      variant: \"default-filled\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" <t-radio-button value=\\\"left\\\">左对齐</t-radio-button>\\r\\n      <t-radio-button value=\\\"right\\\">右对齐</t-radio-button>\\r\\n      <t-radio-button value=\\\"top\\\">顶部对齐</t-radio-button> \")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_t_form, {\n      data: $setup.formData,\n      \"label-align\": $setup.formData.labelAlign,\n      \"label-width\": 60\n    }, {\n      default: _withCtx(() => [_createVNode(_component_t_form_item, {\n        label: \"姓名\",\n        name: \"name\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_t_input, {\n          modelValue: $setup.formData.name,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.formData.name = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_t_form_item, {\n        label: \"密码\",\n        name: \"password\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_t_input, {\n          modelValue: $setup.formData.password,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.formData.password = $event),\n          type: \"password\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_t_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_t_button, {\n          theme: \"primary\",\n          type: \"submit\"\n        }, {\n          default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"登录\")])),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\", \"label-align\"])]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" ////////// \"), _createVNode(_component_t_space, {\n    direction: \"vertical\"\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 按钮操作区域 \"), _createVNode(_component_t_radio_group, {\n      modelValue: $setup.size,\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.size = $event),\n      variant: \"default-filled\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" <t-radio-button value=\\\"small\\\">小尺寸</t-radio-button> \"), _createVNode(_component_t_radio_button, {\n        value: \"medium\"\n      }, {\n        default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"订单列表\")])),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" <t-radio-button value=\\\"large\\\">大尺寸</t-radio-button> \")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 当数据为空需要占位时，会显示 cellEmptyContent \"), _createVNode(_component_t_table, {\n      \"row-key\": \"index\",\n      data: $setup.data,\n      columns: $setup.columns,\n      stripe: $setup.stripe,\n      bordered: $setup.bordered,\n      hover: $setup.hover,\n      \"table-layout\": $setup.tableLayout ? 'auto' : 'fixed',\n      size: $setup.size,\n      pagination: $setup.pagination,\n      \"show-header\": $setup.showHeader,\n      \"cell-empty-content\": \"-\",\n      resizable: \"\",\n      \"lazy-load\": \"\",\n      onRowClick: $setup.handleRowClick\n    }, null, 8 /* PROPS */, [\"data\", \"columns\", \"stripe\", \"bordered\", \"hover\", \"table-layout\", \"size\", \"show-header\"])]),\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createCommentVNode","_createVNode","_component_t_space","direction","size","default","_withCtx","_component_t_radio_group","modelValue","$setup","formData","labelAlign","_cache","$event","variant","_","_component_t_form","data","_component_t_form_item","label","name","_component_t_input","password","type","_component_t_button","theme","_createTextVNode","_component_t_radio_button","value","_component_t_table","columns","stripe","bordered","hover","tableLayout","pagination","showHeader","resizable","onRowClick","handleRowClick"],"sources":["E:\\三年级上册\\ComputerSale\\computersale\\src\\views\\OrderComponent.vue"],"sourcesContent":["<template>\r\n  <!-- ///////// -->\r\n    <t-space direction=\"vertical\" size=\"large\">\r\n    <t-radio-group v-model=\"formData.labelAlign\" variant=\"default-filled\">\r\n      <!-- <t-radio-button value=\"left\">左对齐</t-radio-button>\r\n      <t-radio-button value=\"right\">右对齐</t-radio-button>\r\n      <t-radio-button value=\"top\">顶部对齐</t-radio-button> -->\r\n    </t-radio-group>\r\n\r\n    <t-form :data=\"formData\" :label-align=\"formData.labelAlign\" :label-width=\"60\">\r\n      <t-form-item label=\"姓名\" name=\"name\">\r\n        <t-input v-model=\"formData.name\"></t-input>\r\n      </t-form-item>\r\n      <t-form-item label=\"密码\" name=\"password\">\r\n        <t-input v-model=\"formData.password\" type=\"password\"></t-input>\r\n      </t-form-item>\r\n      <t-form-item>\r\n        <t-button theme=\"primary\" type=\"submit\">登录</t-button>\r\n      </t-form-item>\r\n    </t-form>\r\n  </t-space>\r\n\r\n<!-- ////////// -->\r\n  <t-space direction=\"vertical\">\r\n    <!-- 按钮操作区域 -->\r\n    <t-radio-group v-model=\"size\" variant=\"default-filled\">\r\n      <!-- <t-radio-button value=\"small\">小尺寸</t-radio-button> -->\r\n      <t-radio-button value=\"medium\">订单列表</t-radio-button>\r\n      <!-- <t-radio-button value=\"large\">大尺寸</t-radio-button> -->\r\n    </t-radio-group>\r\n\r\n    <!-- 当数据为空需要占位时，会显示 cellEmptyContent -->\r\n    <t-table\r\n      row-key=\"index\"\r\n      :data=\"data\"\r\n      :columns=\"columns\"\r\n      :stripe=\"stripe\"\r\n      :bordered=\"bordered\"\r\n      :hover=\"hover\"\r\n      :table-layout=\"tableLayout ? 'auto' : 'fixed'\"\r\n      :size=\"size\"\r\n      :pagination=\"pagination\"\r\n      :show-header=\"showHeader\"\r\n      cell-empty-content=\"-\"\r\n      resizable\r\n      lazy-load\r\n      @row-click=\"handleRowClick\"\r\n    >\r\n    </t-table>\r\n  </t-space>\r\n</template>\r\n\r\n<script setup lang=\"jsx\">\r\n///////\r\nimport { reactive } from 'vue';\r\n\r\nconst formData = reactive({\r\n  labelAlign: 'right',\r\n  name: '',\r\n  password: '',\r\n});\r\n\r\n////////\r\nimport { ref, onMounted } from 'vue';\r\nimport axios from 'axios';\r\n\r\n// 定义响应式数据变量\r\nconst data = ref([]);\r\nconst total = ref(0);\r\n\r\n// 定义表格的样式及状态控制变量\r\nconst stripe = ref(true);\r\nconst bordered = ref(true);\r\nconst hover = ref(false);\r\nconst tableLayout = ref(false);\r\nconst size = ref('medium');\r\nconst showHeader = ref(true);\r\n\r\n// 定义表格列配置\r\nconst columns = ref([\r\n  { colKey: 'oid', title: '订单号', width: '100' },\r\n  { colKey: 'order_time', title: '下单时间', width: '150' },\r\n  { colKey: 'cid', title: '顾客号', width: '100' },\r\n  { colKey:'status', title: '订单状态', width: '100' },\r\n  // { colKey:'detail', title: '订单详细', width: '100' },\r\n  { colKey:'total_price', title: '订单总价', width: '100' },\r\n  // { colKey:'confirm', title: '确认订单', width: '100' },\r\n]);\r\n\r\n// 定义行点击事件处理函数\r\nconst handleRowClick = (e) => {\r\n  console.log(e);\r\n};\r\n\r\n// 定义分页配置\r\nconst pagination = {\r\n  defaultCurrent: 1,\r\n  defaultPageSize: 5,\r\n  total:total.value,\r\n};\r\n\r\n// 请求后端数据并写入表中\r\nconst fetchData = async () => {\r\n  try {\r\n    console.log('开始请求数据...');\r\n    const response = await axios.get('/api/orders'); // 根据实际API端点替换\r\n    // const response = await axios.get('http://localhost:8080/orders');\r\n    console.log('请求数据成功:', response.data);\r\n    // console.log('请求数据总数:', response.data.length);\r\n    data.value = response.data;\r\n    total.value = response.data.length;\r\n    pagination.total = total.value;\r\n  } catch (error) {\r\n    console.error('请求数据失败:', error);\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  fetchData();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 样式范围限定在当前组件 */\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}