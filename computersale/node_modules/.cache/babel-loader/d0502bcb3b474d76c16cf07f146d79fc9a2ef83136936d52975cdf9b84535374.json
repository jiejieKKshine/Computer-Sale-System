{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { fetchList, closeOrder, deleteOrder } from '@/api/order';\nimport { formatDate } from '@/utils/date';\nimport LogisticsDialog from '@/views/oms/order/components/logisticsDialog';\nconst defaultListQuery = {\n  pageNum: 1,\n  pageSize: 10,\n  orderSn: null,\n  receiverKeyword: null,\n  status: null,\n  orderType: null,\n  sourceType: null,\n  createTime: null\n};\nexport default {\n  name: \"orderList\",\n  components: {\n    LogisticsDialog\n  },\n  data() {\n    return {\n      listQuery: Object.assign({}, defaultListQuery),\n      listLoading: true,\n      list: null,\n      total: null,\n      operateType: null,\n      multipleSelection: [],\n      closeOrder: {\n        dialogVisible: false,\n        content: null,\n        orderIds: []\n      },\n      statusOptions: [{\n        label: '待付款',\n        value: 0\n      }, {\n        label: '待发货',\n        value: 1\n      }, {\n        label: '已发货',\n        value: 2\n      }, {\n        label: '已完成',\n        value: 3\n      }, {\n        label: '已关闭',\n        value: 4\n      }],\n      orderTypeOptions: [{\n        label: '正常订单',\n        value: 0\n      }, {\n        label: '秒杀订单',\n        value: 1\n      }],\n      sourceTypeOptions: [{\n        label: 'PC订单',\n        value: 0\n      }, {\n        label: 'APP订单',\n        value: 1\n      }],\n      operateOptions: [{\n        label: \"批量发货\",\n        value: 1\n      }, {\n        label: \"关闭订单\",\n        value: 2\n      }, {\n        label: \"删除订单\",\n        value: 3\n      }],\n      logisticsDialogVisible: false\n    };\n  },\n  created() {\n    this.getList();\n  },\n  filters: {\n    formatCreateTime(time) {\n      let date = new Date(time);\n      return formatDate(date, 'yyyy-MM-dd hh:mm:ss');\n    },\n    formatPayType(value) {\n      if (value === 1) {\n        return '支付宝';\n      } else if (value === 2) {\n        return '微信';\n      } else {\n        return '未支付';\n      }\n    },\n    formatSourceType(value) {\n      if (value === 1) {\n        return 'APP订单';\n      } else {\n        return 'PC订单';\n      }\n    },\n    formatStatus(value) {\n      if (value === 1) {\n        return '待发货';\n      } else if (value === 2) {\n        return '已发货';\n      } else if (value === 3) {\n        return '已完成';\n      } else if (value === 4) {\n        return '已关闭';\n      } else if (value === 5) {\n        return '无效订单';\n      } else {\n        return '待付款';\n      }\n    }\n  },\n  methods: {\n    handleResetSearch() {\n      this.listQuery = Object.assign({}, defaultListQuery);\n    },\n    handleSearchList() {\n      this.listQuery.pageNum = 1;\n      this.getList();\n    },\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    handleViewOrder(index, row) {\n      this.$router.push({\n        path: '/oms/orderDetail',\n        query: {\n          id: row.id\n        }\n      });\n    },\n    handleCloseOrder(index, row) {\n      this.closeOrder.dialogVisible = true;\n      this.closeOrder.orderIds = [row.id];\n    },\n    handleDeliveryOrder(index, row) {\n      let listItem = this.covertOrder(row);\n      this.$router.push({\n        path: '/oms/deliverOrderList',\n        query: {\n          list: [listItem]\n        }\n      });\n    },\n    handleViewLogistics(index, row) {\n      this.logisticsDialogVisible = true;\n    },\n    handleDeleteOrder(index, row) {\n      let ids = [];\n      ids.push(row.id);\n      this.deleteOrder(ids);\n    },\n    handleBatchOperate() {\n      if (this.multipleSelection == null || this.multipleSelection.length < 1) {\n        this.$message({\n          message: '请选择要操作的订单',\n          type: 'warning',\n          duration: 1000\n        });\n        return;\n      }\n      if (this.operateType === 1) {\n        //批量发货\n        let list = [];\n        for (let i = 0; i < this.multipleSelection.length; i++) {\n          if (this.multipleSelection[i].status === 1) {\n            list.push(this.covertOrder(this.multipleSelection[i]));\n          }\n        }\n        if (list.length === 0) {\n          this.$message({\n            message: '选中订单中没有可以发货的订单',\n            type: 'warning',\n            duration: 1000\n          });\n          return;\n        }\n        this.$router.push({\n          path: '/oms/deliverOrderList',\n          query: {\n            list: list\n          }\n        });\n      } else if (this.operateType === 2) {\n        //关闭订单\n        this.closeOrder.orderIds = [];\n        for (let i = 0; i < this.multipleSelection.length; i++) {\n          this.closeOrder.orderIds.push(this.multipleSelection[i].id);\n        }\n        this.closeOrder.dialogVisible = true;\n      } else if (this.operateType === 3) {\n        //删除订单\n        let ids = [];\n        for (let i = 0; i < this.multipleSelection.length; i++) {\n          ids.push(this.multipleSelection[i].id);\n        }\n        this.deleteOrder(ids);\n      }\n    },\n    handleSizeChange(val) {\n      this.listQuery.pageNum = 1;\n      this.listQuery.pageSize = val;\n      this.getList();\n    },\n    handleCurrentChange(val) {\n      this.listQuery.pageNum = val;\n      this.getList();\n    },\n    handleCloseOrderConfirm() {\n      if (this.closeOrder.content == null || this.closeOrder.content === '') {\n        this.$message({\n          message: '操作备注不能为空',\n          type: 'warning',\n          duration: 1000\n        });\n        return;\n      }\n      let params = new URLSearchParams();\n      params.append('ids', this.closeOrder.orderIds);\n      params.append('note', this.closeOrder.content);\n      closeOrder(params).then(response => {\n        this.closeOrder.orderIds = [];\n        this.closeOrder.dialogVisible = false;\n        this.getList();\n        this.$message({\n          message: '修改成功',\n          type: 'success',\n          duration: 1000\n        });\n      });\n    },\n    getList() {\n      this.listLoading = true;\n      fetchList(this.listQuery).then(response => {\n        this.listLoading = false;\n        this.list = response.data.list;\n        this.total = response.data.total;\n      });\n    },\n    deleteOrder(ids) {\n      this.$confirm('是否要进行该删除操作?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        let params = new URLSearchParams();\n        params.append(\"ids\", ids);\n        deleteOrder(params).then(response => {\n          this.$message({\n            message: '删除成功！',\n            type: 'success',\n            duration: 1000\n          });\n          this.getList();\n        });\n      });\n    },\n    covertOrder(order) {\n      let address = order.receiverProvince + order.receiverCity + order.receiverRegion + order.receiverDetailAddress;\n      let listItem = {\n        orderId: order.id,\n        orderSn: order.orderSn,\n        receiverName: order.receiverName,\n        receiverPhone: order.receiverPhone,\n        receiverPostCode: order.receiverPostCode,\n        address: address,\n        deliveryCompany: null,\n        deliverySn: null\n      };\n      return listItem;\n    }\n  }\n};","map":{"version":3,"names":["fetchList","closeOrder","deleteOrder","formatDate","LogisticsDialog","defaultListQuery","pageNum","pageSize","orderSn","receiverKeyword","status","orderType","sourceType","createTime","name","components","data","listQuery","Object","assign","listLoading","list","total","operateType","multipleSelection","dialogVisible","content","orderIds","statusOptions","label","value","orderTypeOptions","sourceTypeOptions","operateOptions","logisticsDialogVisible","created","getList","filters","formatCreateTime","time","date","Date","formatPayType","formatSourceType","formatStatus","methods","handleResetSearch","handleSearchList","handleSelectionChange","val","handleViewOrder","index","row","$router","push","path","query","id","handleCloseOrder","handleDeliveryOrder","listItem","covertOrder","handleViewLogistics","handleDeleteOrder","ids","handleBatchOperate","length","$message","message","type","duration","i","handleSizeChange","handleCurrentChange","handleCloseOrderConfirm","params","URLSearchParams","append","then","response","$confirm","confirmButtonText","cancelButtonText","order","address","receiverProvince","receiverCity","receiverRegion","receiverDetailAddress","orderId","receiverName","receiverPhone","receiverPostCode","deliveryCompany","deliverySn"],"sources":["E:\\三年级上册\\ComputerSale\\computersale\\src\\views\\orderindex.vue"],"sourcesContent":["<template> \r\n  <div class=\"app-container\">\r\n    <el-card class=\"filter-container\" shadow=\"never\">\r\n      <div>\r\n        <i class=\"el-icon-search\"></i>\r\n        <span>筛选搜索</span>\r\n        <el-button\r\n          style=\"float:right\"\r\n          type=\"primary\"\r\n          @click=\"handleSearchList()\"\r\n          size=\"small\">\r\n          查询搜索\r\n        </el-button>\r\n        <el-button\r\n          style=\"float:right;margin-right: 15px\"\r\n          @click=\"handleResetSearch()\"\r\n          size=\"small\">\r\n          重置\r\n        </el-button>\r\n      </div>\r\n      <div style=\"margin-top: 15px\">\r\n        <el-form :inline=\"true\" :model=\"listQuery\" size=\"small\" label-width=\"140px\">\r\n          <el-form-item label=\"输入搜索：\">\r\n            <el-input v-model=\"listQuery.orderSn\" class=\"input-width\" placeholder=\"订单编号\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"收货人：\">\r\n            <el-input v-model=\"listQuery.receiverKeyword\" class=\"input-width\" placeholder=\"收货人姓名/手机号码\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"提交时间：\">\r\n            <el-date-picker\r\n              class=\"input-width\"\r\n              v-model=\"listQuery.createTime\"\r\n              value-format=\"yyyy-MM-dd\"\r\n              type=\"date\"\r\n              placeholder=\"请选择时间\">\r\n            </el-date-picker>\r\n          </el-form-item>\r\n          <el-form-item label=\"订单状态：\">\r\n            <el-select v-model=\"listQuery.status\" class=\"input-width\" placeholder=\"全部\" clearable>\r\n              <el-option v-for=\"item in statusOptions\"\r\n                         :key=\"item.value\"\r\n                         :label=\"item.label\"\r\n                         :value=\"item.value\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"订单分类：\">\r\n            <el-select v-model=\"listQuery.orderType\" class=\"input-width\" placeholder=\"全部\" clearable>\r\n              <el-option v-for=\"item in orderTypeOptions\"\r\n                         :key=\"item.value\"\r\n                         :label=\"item.label\"\r\n                         :value=\"item.value\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"订单来源：\">\r\n            <el-select v-model=\"listQuery.sourceType\" class=\"input-width\" placeholder=\"全部\" clearable>\r\n              <el-option v-for=\"item in sourceTypeOptions\"\r\n                         :key=\"item.value\"\r\n                         :label=\"item.label\"\r\n                         :value=\"item.value\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </el-card>\r\n    <el-card class=\"operate-container\" shadow=\"never\">\r\n      <i class=\"el-icon-tickets\"></i>\r\n      <span>数据列表</span>\r\n    </el-card>\r\n    <div class=\"table-container\">\r\n      <el-table ref=\"orderTable\"\r\n                :data=\"list\"\r\n                style=\"width: 100%;\"\r\n                @selection-change=\"handleSelectionChange\"\r\n                v-loading=\"listLoading\" border>\r\n        <el-table-column type=\"selection\" width=\"60\" align=\"center\"></el-table-column>\r\n        <el-table-column label=\"编号\" width=\"80\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{scope.row.id}}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"订单编号\" width=\"180\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{scope.row.orderSn}}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"提交时间\" width=\"180\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{scope.row.createTime | formatCreateTime}}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"用户账号\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{scope.row.memberUsername}}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"订单金额\" width=\"120\" align=\"center\">\r\n          <template slot-scope=\"scope\">￥{{scope.row.totalAmount}}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"支付方式\" width=\"120\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{scope.row.payType | formatPayType}}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"订单来源\" width=\"120\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{scope.row.sourceType | formatSourceType}}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"订单状态\" width=\"120\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{scope.row.status | formatStatus}}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"200\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button\r\n              size=\"mini\"\r\n              @click=\"handleViewOrder(scope.$index, scope.row)\"\r\n            >查看订单</el-button>\r\n            <el-button\r\n              size=\"mini\"\r\n              @click=\"handleCloseOrder(scope.$index, scope.row)\"\r\n              v-show=\"scope.row.status===0\">关闭订单</el-button>\r\n            <el-button\r\n              size=\"mini\"\r\n              @click=\"handleDeliveryOrder(scope.$index, scope.row)\"\r\n              v-show=\"scope.row.status===1\">订单发货</el-button>\r\n            <el-button\r\n              size=\"mini\"\r\n              @click=\"handleViewLogistics(scope.$index, scope.row)\"\r\n              v-show=\"scope.row.status===2||scope.row.status===3\">订单跟踪</el-button>\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"danger\"\r\n              @click=\"handleDeleteOrder(scope.$index, scope.row)\"\r\n              v-show=\"scope.row.status===4\">删除订单</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n    <div class=\"batch-operate-container\">\r\n      <el-select\r\n        size=\"small\"\r\n        v-model=\"operateType\" placeholder=\"批量操作\">\r\n        <el-option\r\n          v-for=\"item in operateOptions\"\r\n          :key=\"item.value\"\r\n          :label=\"item.label\"\r\n          :value=\"item.value\">\r\n        </el-option>\r\n      </el-select>\r\n      <el-button\r\n        style=\"margin-left: 20px\"\r\n        class=\"search-button\"\r\n        @click=\"handleBatchOperate()\"\r\n        type=\"primary\"\r\n        size=\"small\">\r\n        确定\r\n      </el-button>\r\n    </div>\r\n    <div class=\"pagination-container\">\r\n      <el-pagination\r\n        background\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        layout=\"total, sizes,prev, pager, next,jumper\"\r\n        :current-page.sync=\"listQuery.pageNum\"\r\n        :page-size=\"listQuery.pageSize\"\r\n        :page-sizes=\"[5,10,15]\"\r\n        :total=\"total\">\r\n      </el-pagination>\r\n    </div>\r\n    <el-dialog\r\n      title=\"关闭订单\"\r\n      :visible.sync=\"closeOrder.dialogVisible\" width=\"30%\">\r\n      <span style=\"vertical-align: top\">操作备注：</span>\r\n      <el-input\r\n        style=\"width: 80%\"\r\n        type=\"textarea\"\r\n        :rows=\"5\"\r\n        placeholder=\"请输入内容\"\r\n        v-model=\"closeOrder.content\">\r\n      </el-input>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"closeOrder.dialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleCloseOrderConfirm\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <logistics-dialog v-model=\"logisticsDialogVisible\"></logistics-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script >\r\n  import {fetchList,closeOrder,deleteOrder} from '@/api/order'\r\n  import {formatDate} from '@/utils/date';\r\n  import LogisticsDialog from '@/views/oms/order/components/logisticsDialog';\r\n  const defaultListQuery = {\r\n    pageNum: 1,\r\n    pageSize: 10,\r\n    orderSn: null,\r\n    receiverKeyword: null,\r\n    status: null,\r\n    orderType: null,\r\n    sourceType: null,\r\n    createTime: null,\r\n  };\r\n  export default {\r\n    name: \"orderList\",\r\n    components:{LogisticsDialog},\r\n    data() {\r\n      return {\r\n        listQuery: Object.assign({}, defaultListQuery),\r\n        listLoading: true,\r\n        list: null,\r\n        total: null,\r\n        operateType: null,\r\n        multipleSelection: [],\r\n        closeOrder:{\r\n          dialogVisible:false,\r\n          content:null,\r\n          orderIds:[]\r\n        },\r\n        statusOptions: [\r\n          {\r\n            label: '待付款',\r\n            value: 0\r\n          },\r\n          {\r\n            label: '待发货',\r\n            value: 1\r\n          },\r\n          {\r\n            label: '已发货',\r\n            value: 2\r\n          },\r\n          {\r\n            label: '已完成',\r\n            value: 3\r\n          },\r\n          {\r\n            label: '已关闭',\r\n            value: 4\r\n          }\r\n        ],\r\n        orderTypeOptions: [\r\n          {\r\n            label: '正常订单',\r\n            value: 0\r\n          },\r\n          {\r\n            label: '秒杀订单',\r\n            value: 1\r\n          }\r\n        ],\r\n        sourceTypeOptions: [\r\n          {\r\n            label: 'PC订单',\r\n            value: 0\r\n          },\r\n          {\r\n            label: 'APP订单',\r\n            value: 1\r\n          }\r\n        ],\r\n        operateOptions: [\r\n          {\r\n            label: \"批量发货\",\r\n            value: 1\r\n          },\r\n          {\r\n            label: \"关闭订单\",\r\n            value: 2\r\n          },\r\n          {\r\n            label: \"删除订单\",\r\n            value: 3\r\n          }\r\n        ],\r\n        logisticsDialogVisible:false\r\n      }\r\n    },\r\n    created() {\r\n      this.getList();\r\n    },\r\n    filters: {\r\n      formatCreateTime(time) {\r\n        let date = new Date(time);\r\n        return formatDate(date, 'yyyy-MM-dd hh:mm:ss')\r\n      },\r\n      formatPayType(value) {\r\n        if (value === 1) {\r\n          return '支付宝';\r\n        } else if (value === 2) {\r\n          return '微信';\r\n        } else {\r\n          return '未支付';\r\n        }\r\n      },\r\n      formatSourceType(value) {\r\n        if (value === 1) {\r\n          return 'APP订单';\r\n        } else {\r\n          return 'PC订单';\r\n        }\r\n      },\r\n      formatStatus(value) {\r\n        if (value === 1) {\r\n          return '待发货';\r\n        } else if (value === 2) {\r\n          return '已发货';\r\n        } else if (value === 3) {\r\n          return '已完成';\r\n        } else if (value === 4) {\r\n          return '已关闭';\r\n        } else if (value === 5) {\r\n          return '无效订单';\r\n        } else {\r\n          return '待付款';\r\n        }\r\n      },\r\n    },\r\n    methods: {\r\n      handleResetSearch() {\r\n        this.listQuery = Object.assign({}, defaultListQuery);\r\n      },\r\n      handleSearchList() {\r\n        this.listQuery.pageNum = 1;\r\n        this.getList();\r\n      },\r\n      handleSelectionChange(val){\r\n        this.multipleSelection = val;\r\n      },\r\n      handleViewOrder(index, row){\r\n        this.$router.push({path:'/oms/orderDetail',query:{id:row.id}})\r\n      },\r\n      handleCloseOrder(index, row){\r\n        this.closeOrder.dialogVisible=true;\r\n        this.closeOrder.orderIds=[row.id];\r\n      },\r\n      handleDeliveryOrder(index, row){\r\n        let listItem = this.covertOrder(row);\r\n        this.$router.push({path:'/oms/deliverOrderList',query:{list:[listItem]}})\r\n      },\r\n      handleViewLogistics(index, row){\r\n        this.logisticsDialogVisible=true;\r\n      },\r\n      handleDeleteOrder(index, row){\r\n        let ids=[];\r\n        ids.push(row.id);\r\n        this.deleteOrder(ids);\r\n      },\r\n      handleBatchOperate(){\r\n        if(this.multipleSelection==null||this.multipleSelection.length<1){\r\n          this.$message({\r\n            message: '请选择要操作的订单',\r\n            type: 'warning',\r\n            duration: 1000\r\n          });\r\n          return;\r\n        }\r\n        if(this.operateType===1){\r\n          //批量发货\r\n          let list=[];\r\n          for(let i=0;i<this.multipleSelection.length;i++){\r\n            if(this.multipleSelection[i].status===1){\r\n              list.push(this.covertOrder(this.multipleSelection[i]));\r\n            }\r\n          }\r\n          if(list.length===0){\r\n            this.$message({\r\n              message: '选中订单中没有可以发货的订单',\r\n              type: 'warning',\r\n              duration: 1000\r\n            });\r\n            return;\r\n          }\r\n          this.$router.push({path:'/oms/deliverOrderList',query:{list:list}})\r\n        }else if(this.operateType===2){\r\n          //关闭订单\r\n          this.closeOrder.orderIds=[];\r\n          for(let i=0;i<this.multipleSelection.length;i++){\r\n            this.closeOrder.orderIds.push(this.multipleSelection[i].id);\r\n          }\r\n          this.closeOrder.dialogVisible=true;\r\n        }else if(this.operateType===3){\r\n          //删除订单\r\n          let ids=[];\r\n          for(let i=0;i<this.multipleSelection.length;i++){\r\n            ids.push(this.multipleSelection[i].id);\r\n          }\r\n          this.deleteOrder(ids);\r\n        }\r\n      },\r\n      handleSizeChange(val){\r\n        this.listQuery.pageNum = 1;\r\n        this.listQuery.pageSize = val;\r\n        this.getList();\r\n      },\r\n      handleCurrentChange(val){\r\n        this.listQuery.pageNum = val;\r\n        this.getList();\r\n      },\r\n      handleCloseOrderConfirm() {\r\n        if (this.closeOrder.content == null || this.closeOrder.content === '') {\r\n          this.$message({\r\n            message: '操作备注不能为空',\r\n            type: 'warning',\r\n            duration: 1000\r\n          });\r\n          return;\r\n        }\r\n        let params = new URLSearchParams();\r\n        params.append('ids', this.closeOrder.orderIds);\r\n        params.append('note', this.closeOrder.content);\r\n        closeOrder(params).then(response=>{\r\n          this.closeOrder.orderIds=[];\r\n          this.closeOrder.dialogVisible=false;\r\n          this.getList();\r\n          this.$message({\r\n            message: '修改成功',\r\n            type: 'success',\r\n            duration: 1000\r\n          });\r\n        });\r\n      },\r\n      getList() {\r\n        this.listLoading = true;\r\n        fetchList(this.listQuery).then(response => {\r\n          this.listLoading = false;\r\n          this.list = response.data.list;\r\n          this.total = response.data.total;\r\n        });\r\n      },\r\n      deleteOrder(ids){\r\n        this.$confirm('是否要进行该删除操作?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          let params = new URLSearchParams();\r\n          params.append(\"ids\",ids);\r\n          deleteOrder(params).then(response=>{\r\n            this.$message({\r\n              message: '删除成功！',\r\n              type: 'success',\r\n              duration: 1000\r\n            });\r\n            this.getList();\r\n          });\r\n        })\r\n      },\r\n      covertOrder(order){\r\n        let address=order.receiverProvince+order.receiverCity+order.receiverRegion+order.receiverDetailAddress;\r\n        let listItem={\r\n          orderId:order.id,\r\n          orderSn:order.orderSn,\r\n          receiverName:order.receiverName,\r\n          receiverPhone:order.receiverPhone,\r\n          receiverPostCode:order.receiverPostCode,\r\n          address:address,\r\n          deliveryCompany:null,\r\n          deliverySn:null\r\n        };\r\n        return listItem;\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style scoped>\r\n  .input-width {\r\n    width: 203px;\r\n  }\r\n</style>\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}